{"version":3,"file":"static/js/234.8c432849.chunk.js","mappings":"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","sources":["UI/components/common/Logo.tsx","UI/components/compound/NavBar.tsx","UI/components/compound/StorageStats.tsx","UI/components/common/Input.tsx","UI/components/common/File.tsx","UI/components/compound/FolderTree.tsx","UI/components/compound/RecentFiles.tsx","test_data.ts","UI/components/compound/FolderFiles.tsx","UI/components/common/Modal.tsx","UI/components/compound/forms/CreateFolder.tsx","UI/components/compound/forms/UploadFile.tsx","UI/components/compound/CreateFolderOrUploadFile.tsx","UI/components/compound/FileExplorer.tsx","UI/components/common/SideMenuItem.tsx","UI/components/compound/SideNav.tsx","UI/pages/Dashboard.tsx","UI/pages/ErrorPage.tsx","UI/components/compound/PricingCard.tsx","UI/pages/Landing.tsx","UI/components/compound/forms/Login.tsx","UI/pages/LoginPage.tsx","UI/routes/router.tsx"],"sourcesContent":["import { Icon } from '@chakra-ui/react';\nimport React from 'react';\nimport { TbCloudFog } from 'react-icons/tb';\n\ntype Props = {\n  color?: string;\n  size?: number;\n  strokeWidth?: number;\n};\n\nconst Logo = ({ color = 'linkedin.500', size = 12, ...rest }: Props) => {\n  const height = size;\n  const width = size;\n  return (\n    <Icon\n      as={TbCloudFog}\n      height={height}\n      width={width}\n      color={color}\n      {...rest}\n    />\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { Button, HStack, Text } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\nimport Logo from '../common/Logo';\nimport { useUser } from '../../context/user-context';\n\nconst menuItems = ['Pricing', 'Docs', 'Blog', 'Support'];\n\nconst NavBar = () => {\n  const user = useUser();\n\n  return (\n    <HStack justifyContent=\"space-between\" px={5} py={2} bgColor=\"gray.50\">\n      <Link to=\"/\">\n        <Logo />\n      </Link>\n      {user?.user ? (\n        <Button colorScheme=\"linkedin\" onClick={() => user.setUser(null)}>\n          Logout\n        </Button>\n      ) : (\n        <HStack spacing={8}>\n          {menuItems.map((item) => (\n            <Text\n              key={item}\n              _hover={{ borderBottom: '3px solid green', cursor: 'pointer' }}\n            >\n              {item}\n            </Text>\n          ))}\n        </HStack>\n      )}\n    </HStack>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { Box, Flex, Text } from '@chakra-ui/react';\n\nconst StorageStats = () => {\n  const progress = 75;\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      gap=\"5\"\n      px=\"5\"\n      py=\"10\"\n      bgColor=\"white\"\n      borderRadius=\"xl\"\n    >\n      <Box height=\"3\" width=\"20rem\" bgColor=\"linkedin.100\" borderRadius=\"full\">\n        <Box\n          height=\"3\"\n          bgColor=\"linkedin.500\"\n          width={progress / 100}\n          borderRadius=\"full\"\n        ></Box>\n      </Box>\n      <Text fontWeight=\"bold\" fontSize=\"sm\">\n        Usage: {(75 / 100) * 200} GB / 200 GB\n      </Text>\n    </Flex>\n  );\n};\n\nexport default StorageStats;\n","import React from 'react';\nimport {\n  Input as ChakraInput,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  InputProps,\n  InputGroup,\n  InputRightElement,\n  InputLeftElement,\n} from '@chakra-ui/react';\n\ninterface Props extends InputProps {\n  id: string;\n  isInvalid?: boolean;\n  isDisabled?: boolean;\n  isRequired?: boolean;\n  label?: string;\n  helperText?: string;\n  inputRightElement?: React.ReactNode;\n  inputLeftElement?: React.ReactNode;\n}\n\nconst Input = ({\n  label,\n  id,\n  isInvalid,\n  isDisabled,\n  isRequired,\n  helperText,\n  inputRightElement,\n  inputLeftElement,\n  ...rest\n}: Props) => {\n  return (\n    <FormControl\n      isInvalid={isInvalid}\n      isDisabled={isDisabled}\n      isRequired={isRequired}\n    >\n      {label && <FormLabel htmlFor={id}>{label}</FormLabel>}\n      <InputGroup>\n        {inputLeftElement && (\n          <InputLeftElement>{inputLeftElement}</InputLeftElement>\n        )}\n        <ChakraInput {...rest} id={id} />\n        {inputRightElement && (\n          <InputRightElement>{inputRightElement}</InputRightElement>\n        )}\n      </InputGroup>\n      {helperText && <FormHelperText>{helperText}</FormHelperText>}\n    </FormControl>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { Flex, HStack, Text, VStack } from '@chakra-ui/react';\nimport { File as IFile } from '../../interfaces/File';\nimport { TbFolder, TbFile } from 'react-icons/tb';\n\ninterface Props {\n  file: IFile;\n  onDoubleClick: (file: IFile) => void;\n}\n\nconst File = ({ file, onDoubleClick }: Props) => {\n  return (\n    <Flex\n      bgColor=\"white\"\n      py=\"2.5\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      px=\"5\"\n      cursor=\"pointer\"\n      borderRadius=\"lg\"\n      _hover={{ boxShadow: 'md' }}\n      onDoubleClick={() => onDoubleClick(file)}\n    >\n      <HStack>\n        {file.isFolder ? (\n          <TbFolder strokeWidth={1} size={30} fill=\"red\" color=\"red\" />\n        ) : (\n          <TbFile strokeWidth={1} size={30} fill=\"red\" color=\"red\" />\n        )}\n        <VStack align=\"start\" spacing=\"0\">\n          <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"blackAlpha.800\">\n            {file.name}\n          </Text>\n          {!file.isFolder && (\n            <Text fontSize=\"small\" color=\"blackAlpha.600\">\n              {file.fileType} / {file.size}\n            </Text>\n          )}\n        </VStack>\n      </HStack>\n      <Text fontSize=\"sm\" color=\"blackAlpha.600\">\n        {file.lastModified}\n      </Text>\n    </Flex>\n  );\n};\n\nexport default File;\n","import React, { useMemo } from 'react';\nimport {\n  ButtonGroup,\n  Flex,\n  Heading,\n  HStack,\n  IconButton,\n  SimpleGrid,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { TbLayoutGrid, TbLayoutList, TbSearch } from 'react-icons/tb';\nimport Input from '../common/Input';\nimport { File as IFile } from '../../interfaces/File';\nimport File from '../common/File';\n\ninterface Props {\n  heading: string;\n  showSearchBar?: boolean;\n  files: IFile[];\n  onDoubleClick: (file: IFile) => void;\n}\n\nconst FolderTree = ({\n  heading,\n  files,\n  onDoubleClick,\n  showSearchBar = true,\n}: Props) => {\n  const [search, setSearch] = React.useState('');\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const SearchIcon = <TbSearch />;\n\n  const filterFiles = (files: IFile[], searchWord: string) => {\n    return files.filter((file) =>\n      file.name.toLowerCase().includes(searchWord.toLowerCase())\n    );\n  };\n\n  const filteredFiles = useMemo(\n    () => filterFiles(files, search),\n    [files, search]\n  );\n\n  const renderFiles = filteredFiles.map((file) => (\n    <File key={file.id} file={file} onDoubleClick={onDoubleClick} />\n  ));\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\n        <Heading as=\"h4\" size=\"sm\">\n          {heading}\n        </Heading>\n        {showSearchBar && (\n          <HStack marginLeft=\"auto\">\n            <Input\n              id=\"file-search\"\n              placeholder=\"Search\"\n              colorScheme='linkedin'\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n              inputLeftElement={SearchIcon}\n            />\n            <ButtonGroup\n              spacing=\"1\"\n              padding=\"1\"\n              bgColor=\"white\"\n              borderRadius=\"md\"\n            >\n              <IconButton\n                aria-label=\"Use list layout\"\n                colorScheme={isOpen ? 'linkedin' : 'gray'}\n                size=\"sm\"\n                icon={<TbLayoutList />}\n                onClick={onOpen}\n              />\n              <IconButton\n                aria-label=\"Use grid layout\"\n                colorScheme={isOpen ? 'gray' : 'linkedin'}\n                size=\"sm\"\n                onClick={onClose}\n                icon={<TbLayoutGrid />}\n              />\n            </ButtonGroup>\n          </HStack>\n        )}\n      </Flex>\n      <SimpleGrid columns={isOpen ? 1 : 2} gap=\"5\" width=\"100%\" px=\"1\" py=\"5\">\n        {renderFiles}\n      </SimpleGrid>\n    </>\n  );\n};\n\nexport default FolderTree;\n","import React from 'react';\nimport { File as IFile } from '../../interfaces/File';\nimport FolderTree from './FolderTree';\n\nconst RecentFiles = () => {\n  const recentFiles: IFile[] = [\n    {\n      id: '1',\n      name: 'End of year report 2020',\n      isFolder: false,\n      size: 150000,\n      lastModified: '2020-01-01',\n      fileType: '.pdf',\n    },\n    {\n      id: '2',\n      name: 'End of year report 2019',\n      isFolder: false,\n      size: 150000,\n      lastModified: '2019-01-01',\n      fileType: '.pdf',\n    },\n    {\n      id: '3',\n      name: 'End of year report 2019',\n      isFolder: false,\n      size: 150000,\n      lastModified: '2019-01-01',\n      fileType: '.txt',\n    },\n    {\n      id: '4',\n      name: 'Moments 2020',\n      isFolder: false,\n      size: 30000000,\n      lastModified: '2019-01-01',\n      fileType: '.mkv',\n    },\n  ];\n\n  return (\n    <FolderTree\n      onDoubleClick={(file) => alert('file: ' + file.id)}\n      files={recentFiles}\n      heading=\"Recent Files\"\n      showSearchBar={false}\n    />\n  );\n};\n\nexport default RecentFiles;\n","import { File } from './UI/interfaces/File';\n\nexport const recentFiles: File[] = [\n  {\n    id: '1',\n    name: 'End of year report 2020',\n    isFolder: false,\n    size: 150000,\n    lastModified: '2020-01-01',\n    fileType: '.pdf',\n  },\n  {\n    id: '2',\n    name: 'End of year report 2019',\n    isFolder: false,\n    size: 150000,\n    lastModified: '2019-01-01',\n    fileType: '.pdf',\n  },\n  {\n    id: '3',\n    name: 'End of year report 2019',\n    isFolder: false,\n    size: 150000,\n    lastModified: '2019-01-01',\n    fileType: '.txt',\n  },\n  {\n    id: '4',\n    name: 'Moments 2020',\n    isFolder: true,\n    size: 30000000,\n    lastModified: '2019-01-01',\n    fileType: '.mkv',\n  },\n];\n","import { useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { File } from '../../interfaces/File';\nimport { recentFiles } from '../../../test_data';\nimport FolderTree from './FolderTree';\n\nconst FolderFiles = () => {\n  const navigate = useNavigate();\n  // const { folderId } = useParams();\n\n  // fetch files from folder (folderId)\n\n  const organizeFoldersToFiles = (files: File[]) => {\n    const files_list: File[] = [];\n    const folders_list: File[] = [];\n    files.forEach((file) => {\n      file.isFolder ? folders_list.push(file) : files_list.push(file);\n    });\n    return [...folders_list, ...files_list];\n  };\n\n  const files = useMemo(\n    () => organizeFoldersToFiles(organizeFoldersToFiles(recentFiles)),\n    []\n  );\n\n  const onDoubleClick = (file: File) => {\n    navigate(`/folder/${file.id}`);\n  };\n\n  return (\n    <FolderTree files={files} heading=\"Files\" onDoubleClick={onDoubleClick} />\n  );\n};\n\nexport default FolderFiles;\n","import React from 'react';\nimport {\n  Modal as ChakraModal,\n  ModalOverlay,\n  ModalProps,\n  ModalContent\n} from '@chakra-ui/react';\n\ninterface Props extends ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n}\n\nconst Modal = ({ isOpen, onClose, children }: Props) => {\n  return (\n    <ChakraModal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>{children}</ModalContent>\n    </ChakraModal>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Button, ButtonGroup, Flex } from '@chakra-ui/react';\nimport { TbFolderPlus } from 'react-icons/tb';\nimport Input from '../../common/Input';\nimport { useParams } from 'react-router-dom';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst CreateFolder = ({ onClose }: Props) => {\n  const FILE_NAME = 'fileName';\n  const HELPER_TEXT = 'Cannot have the same file name in same directory';\n  const [fileName, setFileName] = React.useState('');\n  const { folderId } = useParams();\n\n  const handleCreateFolder = () => {\n    console.log(folderId);\n    const values = { folderId, fileName };\n    alert(JSON.stringify(values, null, 2));\n  };\n\n  return (\n    <Flex\n      bgColor=\"whiteAlpha.900\"\n      py=\"5\"\n      px=\"2\"\n      borderRadius=\"full\"\n      flexDirection=\"column\"\n      gap=\"8\"\n    >\n      <Input\n        id={FILE_NAME}\n        name={FILE_NAME}\n        value={fileName}\n        helperText={HELPER_TEXT}\n        placeholder=\"File Name\"\n        borderRadius=\"lg\"\n        onChange={(e) => setFileName(e.target.value)}\n      />\n      <ButtonGroup alignSelf=\"flex-end\">\n        <Button size=\"sm\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          size=\"sm\"\n          colorScheme=\"green\"\n          onClick={handleCreateFolder}\n          leftIcon={<TbFolderPlus />}\n        >\n          Create Folder\n        </Button>\n      </ButtonGroup>\n    </Flex>\n  );\n};\n\nexport default CreateFolder;\n","import React from 'react';\nimport { Box, Text, Flex, ButtonGroup, Button } from '@chakra-ui/react';\nimport { TbFileUpload } from 'react-icons/tb';\nimport Dropzone from 'react-dropzone';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst UploadFile = ({ onClose }: Props) => {\n  const handleFileUpload = () => {\n    console.log('uploading file');\n  };\n\n  return (\n    <Flex\n      bgColor=\"whiteAlpha.900\"\n      py=\"5\"\n      px=\"2\"\n      borderRadius=\"full\"\n      flexDirection=\"column\"\n      gap=\"8\"\n    >\n      <Dropzone onDrop={(acceptedFiles) => console.log(acceptedFiles)}>\n        {({ getRootProps, getInputProps }) => (\n          <Box>\n            <Flex\n              height=\"200px\"\n              borderWidth=\"1px\"\n              borderStyle=\"dashed\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              cursor=\"pointer\"\n              gap={4}\n              {...getRootProps()}\n            >\n              <input {...getInputProps()} />\n              <Text>Drag and drop some file here</Text>\n              <Text>Or</Text>\n              <Text>Click to select file</Text>\n            </Flex>\n          </Box>\n        )}\n      </Dropzone>\n      <ButtonGroup alignSelf=\"flex-end\">\n        <Button size=\"sm\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          size=\"sm\"\n          colorScheme=\"green\"\n          onClick={handleFileUpload}\n          leftIcon={<TbFileUpload />}\n        >\n          Upload File\n        </Button>\n      </ButtonGroup>\n    </Flex>\n  );\n};\n\nexport default UploadFile;\n","import React from 'react';\nimport { Tab, TabList, TabPanel, TabPanels, Tabs } from '@chakra-ui/react';\nimport CreateFolder from './forms/CreateFolder';\nimport UploadFile from './forms/UploadFile';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst CreateFolderOrUploadFile = ({ onClose }: Props) => {\n  return (\n    <Tabs isFitted variant=\"enclosed-colored\" pt=\"1\">\n      <TabList>\n        <Tab>Create Folder</Tab>\n        <Tab>Upload File</Tab>\n      </TabList>\n      <TabPanels>\n        <TabPanel>\n          <CreateFolder onClose={onClose} />\n        </TabPanel>\n        <TabPanel>\n          <UploadFile onClose={onClose} />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n};\n\nexport default CreateFolderOrUploadFile;\n","import React from 'react';\nimport { Heading, IconButton, useDisclosure, VStack } from '@chakra-ui/react';\nimport StorageStats from './StorageStats';\nimport RecentFiles from './RecentFiles';\nimport FolderFiles from './FolderFiles';\nimport { TbPlus } from 'react-icons/tb';\nimport Modal from '../common/Modal';\nimport CreateFolderOrUploadFile from './CreateFolderOrUploadFile';\n\nconst FileExplorer = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <VStack\n        width=\"80%\"\n        align=\"start\"\n        position=\"relative\"\n        height=\"full\"\n        paddingRight=\"10\"\n        overflowY=\"auto\"\n      >\n        <Heading as=\"h3\" size=\"md\">\n          My Drive\n        </Heading>\n        <StorageStats />\n        <RecentFiles />\n        <FolderFiles />\n        <IconButton\n          colorScheme=\"facebook\"\n          aria-label=\"Create Folder\"\n          position=\"fixed\"\n          bottom=\"10\"\n          right=\"16\"\n          borderRadius=\"full\"\n          boxShadow=\"xl\"\n          size=\"lg\"\n          icon={<TbPlus />}\n          onClick={onOpen}\n        />\n      </VStack>\n      <Modal isOpen={isOpen} onClose={onClose} size=\"md\">\n        <CreateFolderOrUploadFile onClose={onClose} />\n      </Modal>\n    </>\n  );\n};\n\nexport default FileExplorer;\n","import React from 'react';\nimport { Flex, Text } from '@chakra-ui/react';\nimport MenuItem from '../../interfaces/Menu';\n\ntype Props = { name: string; onSelect: (name: string) => void; item: MenuItem };\n\nconst SideMenuItem = ({ name, item, onSelect }: Props) => {\n  return (\n    <Flex\n      alignItems=\"center\"\n      gap={5}\n      cursor=\"pointer\"\n      px={5}\n      py={2}\n      bgColor={name === item.name ? 'linkedin.100' : ''}\n      color={name === item.name ? 'linkedin.600' : ''}\n      borderRadius=\"xl\"\n      fontWeight=\"bold\"\n      _hover={{ color: 'linkedin.600', bgColor: 'linkedin.100' }}\n      onClick={() => onSelect(item.name)}\n    >\n      {item.icon}\n      <Text fontSize=\"sm\">{item.name}</Text>\n    </Flex>\n  );\n};\n\nexport default SideMenuItem;\n","import React from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport { MdOutlinePeopleAlt } from 'react-icons/md';\nimport { FiHardDrive } from 'react-icons/fi';\nimport MenuItem from '../../interfaces/Menu';\nimport SideMenuItem from '../common/SideMenuItem';\n\nconst SideNav = () => {\n  const [name, setName] = React.useState('');\n\n  const handleClick = (name: string) => {\n    setName(name);\n  };\n\n  const sideMenuItems: MenuItem[] = [\n    { name: 'My Drive', icon: <FiHardDrive /> },\n    { name: 'Shared with me', icon: <MdOutlinePeopleAlt /> },\n  ];\n\n  return (\n    <Flex flexDir=\"column\" gap={2}>\n      {sideMenuItems.map((item) => (\n        <SideMenuItem\n          key={item.name}\n          item={item}\n          name={name}\n          onSelect={handleClick}\n        />\n      ))}\n    </Flex>\n  );\n};\n\nexport default SideNav;\n","import React from 'react';\nimport { Box, HStack, VStack } from '@chakra-ui/react';\nimport FileExplorer from '../components/compound/FileExplorer';\nimport SideNav from '../components/compound/SideNav';\nimport NavBar from '../components/compound/NavBar';\n\nconst Dashboard = () => {\n  return (\n    <>\n      <NavBar />\n      <Box\n        height=\"100vh\"\n        width=\"100%\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        overflow=\"hidden\"\n      >\n        <HStack\n          height=\"100vh\"\n          align=\"start\"\n          maxWidth=\"1400px\"\n          width=\"100%\"\n          bgColor=\"whitesmoke\"\n          py={4}\n        >\n          <VStack width=\"20%\" py={4}>\n            <SideNav />\n          </VStack>\n          <FileExplorer />\n        </HStack>\n      </Box>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { Center, Heading, Text, VStack } from '@chakra-ui/react';\nimport { useRouteError } from 'react-router-dom';\n\nconst ErrorPage = () => {\n  const error = useRouteError() as { statusText: string; message: string };\n  console.log('error', error);\n\n  return (\n    <Center height=\"100vh\">\n      <VStack>\n        <Heading>Oops!</Heading>\n        <Text>Sorry, an unexpected error has occurred.</Text>\n        <Text>\n          <Text as=\"i\">{error?.statusText || error?.message}</Text>\n        </Text>\n      </VStack>\n    </Center>\n  );\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport { Button, Center, Heading, Icon, Text, VStack } from '@chakra-ui/react';\nimport { RiCheckboxCircleFill } from 'react-icons/ri';\nimport { BsDash } from 'react-icons/bs';\n\ntype Props = {\n  selected?: string;\n  isMonthly?: boolean;\n  pricing: {\n    space: string;\n    users: string;\n    name?: string;\n    price?: { monthly: string; yearly: string };\n    hasFileTransferLimit: boolean;\n    isSecure: boolean;\n    canShare: boolean;\n  };\n};\n\ntype HeaderProps = {\n  name?: string;\n  price?: { monthly: string; yearly: string };\n  isMonthly?: boolean;\n};\n\nconst PricingCardHeader = ({ name, price, isMonthly }: HeaderProps) => {\n  return (\n    <VStack spacing={5} py={10}>\n      <Heading size=\"sm\">{name}</Heading>\n      <Heading color=\"linkedin.800\">\n        {isMonthly ? price?.monthly : price?.yearly}\n      </Heading>\n      {name && (\n        <Button colorScheme=\"linkedin\" size=\"sm\">\n          Get Started\n        </Button>\n      )}\n    </VStack>\n  );\n};\n\nconst PricingCard = ({ pricing, selected, isMonthly }: Props) => {\n  const {\n    space,\n    users,\n    hasFileTransferLimit,\n    isSecure,\n    canShare,\n    name,\n    price,\n  } = pricing;\n\n  const isSelected = name === selected;\n\n  return (\n    <VStack\n      py={5}\n      border=\"3px solid\"\n      borderColor={isSelected ? 'linkedin.700' : 'transparent'}\n      textAlign=\"center\"\n      rounded=\"3xl\"\n    >\n      <PricingCardHeader name={name} price={price} isMonthly={isMonthly} />\n      <Center p={5} bgColor=\"linkedin.100\" width=\"100%\">\n        <Text fontSize=\"md\" color=\"blackAlpha.700\">\n          {space}\n        </Text>\n      </Center>\n      <Center p={5} width=\"100%\">\n        <Text fontSize=\"md\" color=\"blackAlpha.700\">\n          {users}\n        </Text>\n      </Center>\n      <Center p={5} bgColor=\"linkedin.100\" width=\"100%\">\n        <Icon\n          as={hasFileTransferLimit ? RiCheckboxCircleFill : BsDash}\n          height=\"8\"\n          width=\"8\"\n          color=\"linkedin.500\"\n        />\n      </Center>\n      <Center p={5} width=\"100%\">\n        <Icon\n          as={isSecure ? RiCheckboxCircleFill : BsDash}\n          height=\"8\"\n          width=\"8\"\n          color=\"linkedin.500\"\n        />\n      </Center>\n      <Center p={5} width=\"100%\" bgColor=\"linkedin.100\">\n        <Icon\n          as={canShare ? RiCheckboxCircleFill : BsDash}\n          height=\"8\"\n          width=\"8\"\n          color=\"linkedin.500\"\n        />\n      </Center>\n    </VStack>\n  );\n};\n\nexport default PricingCard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Box,\n  Center,\n  Heading,\n  SimpleGrid,\n  Text,\n  VStack,\n  Button,\n  Icon,\n  ButtonGroup,\n} from '@chakra-ui/react';\nimport { IoMdSync } from 'react-icons/io';\nimport { TbCloudLock } from 'react-icons/tb';\nimport { HiOutlineShare } from 'react-icons/hi';\nimport PricingCard from '../components/compound/PricingCard';\n\nconst featuresList = [\n  {\n    icon: IoMdSync,\n    title: 'Store and Sync',\n    text: 'Keep all your files securely stored, up to date and accessible from any device',\n  },\n  {\n    icon: TbCloudLock,\n    title: 'Stay Secure',\n    text: 'Keep your files private with multiple layers of protection from the service trusted by millions',\n  },\n  {\n    icon: HiOutlineShare,\n    title: 'Share',\n    text: 'Quickly send any file-big or small-to anyone',\n  },\n];\n\nconst pricingList = [\n  {\n    name: 'Free',\n    space: '1 GB',\n    users: 'Unlimited',\n    hasFileTransferLimit: false,\n    isSecure: true,\n    canShare: true,\n    price: {\n      monthly: '$0.00',\n      yearly: '$0.00',\n    },\n  },\n  {\n    name: 'Pro Plan',\n    space: '2,000 GB',\n    users: 'Unlimited',\n    hasFileTransferLimit: true,\n    isSecure: true,\n    canShare: true,\n    price: {\n      monthly: '$10.00',\n      yearly: '$100.00',\n    },\n  },\n  {\n    name: 'Enterprise Plan',\n    space: 'As much space as needed',\n    users: 'Unlimited',\n    hasFileTransferLimit: true,\n    isSecure: true,\n    canShare: true,\n    price: {\n      monthly: '$25.00',\n      yearly: '$250.00',\n    },\n  },\n];\n\nconst Landing = () => {\n  const [isMonthly, setIsMonthly] = React.useState(true);\n\n  const selected = 'Pro Plan';\n\n  return (\n    <>\n      <Center>\n        <VStack maxW=\"7xl\" spacing={0}>\n          <SimpleGrid columns={2} gap={10}>\n            <VStack pt={20}>\n              <Heading size=\"3xl\" fontWeight=\"thin\" lineHeight=\"shorter\">\n                Easy and secure access to your content\n              </Heading>\n              <Text textAlign=\"justify\" fontSize={'xl'} color=\"blackAlpha.600\">\n                Store, share, and collaborate on files and folder from your\n                mobile device, table, or computer\n              </Text>\n              <Box width=\"100%\" py=\"10\">\n                <Link to=\"login\">\n                  <Button alignSelf=\"flex-start\" colorScheme=\"linkedin\">\n                    Try Cloud Drive\n                  </Button>\n                </Link>\n              </Box>\n            </VStack>\n            <Box w=\"100%\" h=\"100%\" bgColor=\"blue.100\"></Box>\n          </SimpleGrid>\n          <VStack bgColor=\"gray.50\" py=\"28\" px=\"10\" gap=\"10\">\n            <Heading size=\"xl\" fontWeight=\"bold\">\n              Do more with your files\n            </Heading>\n            <SimpleGrid columns={3} gap={10}>\n              {featuresList.map((item) => (\n                <VStack\n                  key={item.title}\n                  borderRadius=\"lg\"\n                  border=\"1px solid\"\n                  borderColor=\"gray.200\"\n                  p={4}\n                  mt={4}\n                  bgColor=\"white\"\n                  gap=\"2\"\n                >\n                  <Icon as={item.icon} h=\"10\" w=\"10\" color=\"linkedin.500\" />\n                  <Heading fontSize=\"md\" mb={10}>\n                    {item.title}\n                  </Heading>\n                  <Text\n                    fontSize={'md'}\n                    color=\"blackAlpha.700\"\n                    textAlign=\"center\"\n                  >\n                    {item.text}\n                  </Text>\n                </VStack>\n              ))}\n            </SimpleGrid>\n          </VStack>\n          <VStack py=\"28\" px=\"10\" spacing=\"10\">\n            <Heading>Find the plan that's right for you</Heading>\n            <ButtonGroup\n              size=\"sm\"\n              variant=\"outline\"\n              p={1}\n              bgColor=\"linkedin.100\"\n              color=\"linkedin.500\"\n              rounded=\"md\"\n              isAttached\n            >\n              <Button\n                color={isMonthly ? 'linkedin.700' : ''}\n                bgColor={isMonthly ? 'white' : ''}\n                onClick={() => setIsMonthly(true)}\n                _hover={{ bgColor: isMonthly ? 'white' : '' }}\n              >\n                Monthly billing\n              </Button>\n              <Button\n                color={isMonthly ? '' : 'linkedin.700'}\n                bgColor={isMonthly ? '' : 'white'}\n                onClick={() => setIsMonthly(false)}\n                _hover={{ bgColor: isMonthly ? '' : 'white' }}\n              >\n                Annual billing\n              </Button>\n            </ButtonGroup>\n            <SimpleGrid columns={3} width=\"100%\">\n              {pricingList.map((item) => (\n                <PricingCard\n                  key={item.name}\n                  pricing={item}\n                  selected={selected}\n                  isMonthly={isMonthly}\n                />\n              ))}\n            </SimpleGrid>\n          </VStack>\n        </VStack>\n      </Center>\n    </>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Text,\n} from '@chakra-ui/react';\nimport { useUser } from '../../../context/user-context';\n\nconst Login = () => {\n  const user = useUser();\n  const [values, setValues] = React.useState({ email: '', password: '' });\n  const [showPassword, setShowPassword] = React.useState(false);\n  const { email, password } = values;\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setValues((prevValues) => ({ ...prevValues, [name]: value }));\n  };\n\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleLoginUser = (e: React.FormEvent) => {\n    console.log('login in');\n    e.preventDefault();\n    const userData = {\n      id: '1',\n      name: 'John Doe',\n      email: 'johndoe@mail.com',\n      profilePicture: 'https://randomuser.me/api/portraits/',\n    };\n    user?.setUser({ ...userData, email, name: email.split('@')[0] });\n  };\n\n  console.log('user', user?.user);\n\n  return (\n    <Box as=\"form\" onSubmit={handleLoginUser}>\n      <Flex flexDir=\"column\" gap={5} pt={20}>\n        <FormControl>\n          <FormLabel fontWeight=\"bold\">Email address</FormLabel>\n          <Input name=\"email\" type=\"email\" value={email} onChange={onChange} />\n        </FormControl>\n        <FormControl>\n          <FormLabel fontWeight=\"bold\">Password</FormLabel>\n          <InputGroup>\n            <Input\n              name=\"password\"\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n              onChange={onChange}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={toggleShowPassword}>\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Text\n            cursor=\"pointer\"\n            _hover={{ textDecoration: 'underline', color: 'linkedin' }}\n          >\n            Forgot password?\n          </Text>\n          <Button colorScheme=\"linkedin\" type=\"submit\">\n            Sign In\n          </Button>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { SimpleGrid, Box, Center } from '@chakra-ui/react';\nimport Login from '../components/compound/forms/Login';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <Center>\n        <SimpleGrid\n          columns={2}\n          gap={5}\n          maxW=\"7xl\"\n          w=\"100%\"\n          paddingInline=\"48\"\n          h=\"80vh\"\n        >\n          <Box w=\"100%\" h=\"100%\" bgColor=\"blue.100\"></Box>\n          <Login />\n        </SimpleGrid>\n      </Center>\n    </>\n  );\n};\n\nexport default LoginPage;\n","import { createBrowserRouter, Outlet } from 'react-router-dom';\nimport NavBar from '../components/compound/NavBar';\nimport Dashboard from '../pages/Dashboard';\nimport ErrorPage from '../pages/ErrorPage';\nimport Landing from '../pages/Landing';\nimport LoginPage from '../pages/LoginPage';\n\nexport const unauthenticatedRoutes = createBrowserRouter([\n  {\n    path: '/',\n    element: (\n      <>\n        <NavBar />\n        <Outlet />\n      </>\n    ),\n    errorElement: <ErrorPage />,\n    children: [\n      { path: '', element: <Landing /> },\n      { path: 'login', element: <LoginPage /> },\n    ],\n  },\n]);\n\nexport const authenticatedRoutes = createBrowserRouter([\n  { path: '/', element: <Dashboard /> },\n]);\n"],"names":["color","size","rest","height","width","as","TbCloudFog","menuItems","user","useUser","justifyContent","px","py","bgColor","to","colorScheme","onClick","setUser","spacing","map","item","_hover","borderBottom","cursor","flexDirection","gap","borderRadius","progress","fontWeight","fontSize","label","id","isInvalid","isDisabled","isRequired","helperText","inputRightElement","inputLeftElement","htmlFor","file","onDoubleClick","alignItems","boxShadow","isFolder","strokeWidth","fill","align","name","fileType","lastModified","heading","files","showSearchBar","React","search","setSearch","useDisclosure","isOpen","onOpen","onClose","SearchIcon","filteredFiles","useMemo","searchWord","filter","toLowerCase","includes","filterFiles","renderFiles","marginLeft","placeholder","value","onChange","e","target","padding","icon","columns","alert","recentFiles","navigate","useNavigate","organizeFoldersToFiles","files_list","folders_list","forEach","push","children","FILE_NAME","fileName","setFileName","folderId","useParams","alignSelf","console","log","values","JSON","stringify","leftIcon","onDrop","acceptedFiles","getRootProps","getInputProps","borderWidth","borderStyle","isFitted","variant","pt","position","paddingRight","overflowY","bottom","right","onSelect","setName","handleClick","sideMenuItems","flexDir","display","overflow","maxWidth","error","useRouteError","statusText","message","PricingCardHeader","price","isMonthly","monthly","yearly","pricing","selected","space","users","hasFileTransferLimit","isSecure","canShare","isSelected","border","borderColor","textAlign","rounded","p","RiCheckboxCircleFill","BsDash","featuresList","IoMdSync","title","text","TbCloudLock","HiOutlineShare","pricingList","setIsMonthly","maxW","lineHeight","w","h","mt","mb","isAttached","email","password","setValues","showPassword","setShowPassword","prevValues","onSubmit","preventDefault","profilePicture","split","type","textDecoration","paddingInline","unauthenticatedRoutes","createBrowserRouter","path","element","errorElement","authenticatedRoutes"],"sourceRoot":""}