{"version":3,"file":"static/js/335.242db213.chunk.js","mappings":"6NAeA,EARmB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,SACpB,OACE,SAAC,KAAD,CAAKC,OAAO,QAAQC,SAAS,SAA7B,SACGF,KCRMG,EAAwB,CACnC,CACEC,GAAI,IACJC,KAAM,0BACNC,KAAM,KACNC,UAAW,aACXC,UAAW,aACXC,UAAW,IACXC,QAAS,IACTC,aAAc,IACdC,KAAM,MACNC,KAAM,OAER,CACET,GAAI,IACJC,KAAM,0BACNC,KAAM,KACNC,UAAW,aACXC,UAAW,aACXC,UAAW,IACXC,QAAS,IACTC,aAAc,IACdC,KAAM,MACNC,KAAM,OAER,CACET,GAAI,IACJC,KAAM,0BACNC,KAAM,KACNC,UAAW,aACXC,UAAW,aACXC,UAAW,IACXC,QAAS,IACTC,aAAc,IACdC,KAAM,MACNC,KAAM,OAER,CACET,GAAI,IACJC,KAAM,eACNC,KAAM,IACNC,UAAW,aACXC,UAAW,aACXC,UAAW,IACXC,QAAS,IACTC,aAAc,IACdC,KAAM,MACNC,KAAM,W,wNCMV,EAhCc,SAAC,GAUD,IATZC,EASW,EATXA,MACAV,EAQW,EARXA,GACAW,EAOW,EAPXA,UACAC,EAMW,EANXA,WACAC,EAKW,EALXA,WACAC,EAIW,EAJXA,WACAC,EAGW,EAHXA,kBACAC,EAEW,EAFXA,iBACGC,GACQ,YACX,OACE,UAAC,KAAD,CACEN,UAAWA,EACXC,WAAYA,EACZC,WAAYA,EAHd,UAKGH,IAAS,SAAC,KAAD,CAAWQ,QAASlB,EAApB,SAAyBU,KACnC,UAAC,KAAD,WACGM,IACC,SAAC,KAAD,UAAmBA,KAErB,SAAC,MAAD,kBAAiBC,GAAjB,IAAuBjB,GAAIA,KAC1Be,IACC,SAAC,KAAD,UAAoBA,OAGvBD,IAAc,SAAC,KAAD,UAAiBA,QCkBtC,EAlDqB,SAAC,GAAwB,IAAtBK,EAAqB,EAArBA,QAChBC,EAAY,WACVC,GAAmBC,EAAAA,EAAAA,KAAnBD,eACR,EAAgCE,EAAAA,UAA6B,OAAdF,QAAc,IAAdA,OAAA,EAAAA,EAAgBpB,OAAQ,IAAvE,eAAOuB,EAAP,KAAiBC,EAAjB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAYR,OACE,kBAAME,SAXmB,SAACC,GAC1BA,EAAEC,iBACF,IAAMC,EAAS,CAAEL,SAAAA,EAAUF,SAAAA,GAC3BQ,MAAMC,KAAKC,UAAUH,EAAQ,KAAM,KAQnC,WACE,SAAC,KAAD,0BACA,SAAC,KAAD,KACA,SAAC,KAAD,CAAMI,GAAI,EAAGC,GAAI,EAAjB,UACE,SAAC,EAAD,CACEpC,GAAIoB,EACJnB,KAAMmB,EACNiB,MAAOb,EACPc,YAAY,YACZC,aAAa,KACbC,SAfa,SAACX,GACpBJ,EAAYI,EAAEY,OAAOJ,aAiBnB,SAAC,KAAD,WACE,UAAC,KAAD,CAAaK,UAAU,WAAvB,WACE,SAAC,KAAD,CAAQxC,KAAK,KAAKyC,QAASxB,EAA3B,qBAGA,SAAC,KAAD,CACEjB,KAAK,KACL0C,YAAY,QACZnC,KAAK,SACLG,WAAgC,IAApBY,EAASqB,OACrBC,UAAU,SAAC,MAAD,IALZ,oCC7BV,EATc,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,OAAQ5B,EAA2C,EAA3CA,QAAS6B,EAAkC,EAAlCA,WAAYpD,EAAsB,EAAtBA,SAC5C,OACE,UAAC,KAAD,CAAamD,OAAQA,EAAQ5B,QAASA,EAAS6B,WAAYA,EAA3D,WACE,SAAC,KAAD,KACA,SAAC,KAAD,UAAepD,QCErB,EAf2B,WACzB,OAAoCqD,EAAAA,EAAAA,MAA5BF,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,OAAQ/B,EAAxB,EAAwBA,QACxB,OACE,iCACE,SAAC,KAAD,CAAUgC,MAAM,SAAC,MAAD,CAAcjD,KAAM,KAAQyC,QAASO,EAArD,yBAGA,SAAC,KAAD,CAAUC,MAAM,SAAC,MAAD,CAAYjD,KAAM,KAAlC,0BACA,SAAC,EAAD,CAAO6C,OAAQA,EAAQ5B,QAASA,EAASjB,KAAK,KAAK8C,YAAY,EAA/D,UACE,SAAC,EAAD,CAAc7B,QAASA,U,UCqC/B,EAnCmB,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,QACZE,GAAmBC,EAAAA,EAAAA,KAAnBD,eAGFpB,EADoC,YAAX,OAAdoB,QAAc,IAAdA,OAAA,EAAAA,EAAgBZ,MACT,SAAW,OAEnC,OACE,kBAAMmB,SALa,aAKnB,WACE,UAAC,KAAD,qBAAqB3B,MACrB,SAAC,KAAD,KACA,SAAC,KAAD,CAAMkC,GAAI,EAAGC,GAAI,EAAjB,UACE,UAAC,KAAD,8CACmCnC,EAAKmD,eACtC,UAAC,KAAD,CAAMC,WAAW,OAAjB,iBAAyBhC,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAgBpB,KAAzC,aAGJ,SAAC,KAAD,WACE,UAAC,KAAD,CAAayC,UAAU,WAAvB,WACE,SAAC,KAAD,CAAQxC,KAAK,KAAKyC,QAASxB,EAA3B,qBAGA,SAAC,KAAD,CACEjB,KAAK,KACL0C,YAAY,MACZnC,KAAK,SACLqC,UAAU,SAAC,MAAD,CAAiB5C,KAAM,KAJnC,6B,UCsBV,EAtCe,SAAC,GAAwB,IAAtBiB,EAAqB,EAArBA,QAChB,GAAkD8B,EAAAA,EAAAA,MAA1CF,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,OAAiBI,EAAjC,EAAwBnC,QAExB,OACE,iCACI4B,IACA,iCACE,SAAC,KAAD,+BACA,SAAC,KAAD,KACA,SAAC,KAAD,KACA,SAAC,KAAD,CAAYlD,OAAQ,IAAK0D,UAAU,UACnC,SAAC,KAAD,KACA,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,eAAe,gBAAgBC,MAAM,OAA3C,WACE,SAAC,IAAD,CAAS/C,MAAM,gBAAf,UACE,SAAC,KAAD,CACEiC,QAASO,EACTQ,QAAQ,QACRnB,aAAa,OACb,aAAW,gBACXY,MAAM,SAAC,MAAD,CAAcjD,KAAM,UAG9B,UAAC,KAAD,CAAaA,KAAK,KAAlB,WACE,SAAC,KAAD,CAAQyC,QAASxB,EAAjB,qBACA,SAAC,KAAD,CAAQyB,YAAY,WAApB,8BAMV,SAAC,EAAD,CAAOG,OAAQA,EAAQ5B,QAASmC,EAAcpD,KAAK,KAAK8C,YAAY,EAApE,UACE,SAAC,EAAD,CAAc7B,QAASmC,UCqC/B,EA1EsB,SAAC,GAAwC,IAAD,IAArCK,iBAAAA,OAAqC,SACpDtC,GAAmBC,EAAAA,EAAAA,KAAnBD,eACR,GAAoC4B,EAAAA,EAAAA,MAA5BF,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,OAAQ/B,EAAxB,EAAwBA,QACxB,GAII8B,EAAAA,EAAAA,MAHMW,EADV,EACEb,OACQc,EAFV,EAEEX,OACSY,EAHX,EAGE3C,QAEF,GAII8B,EAAAA,EAAAA,MAHMc,EADV,EACEhB,OACQiB,EAFV,EAEEd,OACSe,EAHX,EAGE9C,QAGIwB,EAAU,SAACd,GACfA,EAAEqC,mBAmBEjE,EADoC,YAAX,OAAdoB,QAAc,IAAdA,OAAA,EAAAA,EAAgBZ,MACT,SAAW,OAEnC,OACE,iCACE,UAAC,KAAD,CACEkC,QArBgB,SAACd,GACrBc,EAAQd,GACRqB,KAoBIC,MAAM,SAAC,MAAD,CAA0BjD,KAAM,KAFxC,oBAIUD,MAEV,UAAC,KAAD,CACE0C,QAjBc,SAACd,GACnBc,EAAQd,GACRmC,KAgBIb,MAAM,SAAC,MAAD,CAAwBjD,KAAM,KAFtC,kBAIQD,KAEP0D,IACC,iCACE,SAAC,IAAD,KACA,SAAC,KAAD,CACEhB,QA/BY,SAACd,GACrBc,EAAQd,GACRgC,KA8BQV,MAAM,SAAC,MAAD,CAAiBjD,KAAM,KAF/B,wBAQJ,SAAC,EAAD,CAAO6C,OAAQA,EAAQ5B,QAASA,EAASjB,KAAK,KAAK8C,YAAY,EAA/D,UACE,SAAC,EAAD,CAAc7B,QAASA,OAEzB,SAAC,EAAD,CAAO4B,OAAQgB,EAAY5C,QAAS8C,EAAa/D,KAAK,KAAK8C,YAAU,EAArE,UACE,SAAC,EAAD,CAAQ7B,QAAS8C,OAEnB,SAAC,EAAD,CAAOlB,OAAQa,EAAczC,QAAS2C,EAAe5D,KAAK,KAAK8C,YAAU,EAAzE,UACE,SAAC,EAAD,CAAY7B,QAAS2C,UC5D7B,EAboB,SAAC,GAAiD,IAA/CK,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,EAAGC,EAAiC,EAAjCA,EAAGV,EAA8B,EAA9BA,iBACjCW,GAAQ,SAAC,EAAD,IAKZ,OAJIH,IAAUG,GAAQ,SAAC,EAAD,CAAeX,iBAAkBA,MAEnDS,GAAKC,IAAI,MAGX,SAAC,KAAD,CAAUE,IAAKF,EAAGG,KAAMJ,EAAGK,UAAU,KAArC,SACGH,KCiEP,EAxEa,SAAC,GAAoC,IAAlCI,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,cACpB,GAA8CrD,EAAAA,EAAAA,KAAtCD,EAAR,EAAQA,eAAgBuD,EAAxB,EAAwBA,kBACxB,ECb4B,WAC5B,MAA8CrD,EAAAA,UAAe,GAA7D,eAAOsD,EAAP,KAAwBC,EAAxB,KACA,EAAmCvD,EAAAA,SAAe,CAAE6C,EAAG,EAAGC,EAAG,IAA7D,sBAASD,EAAT,EAASA,EAAGC,EAAZ,EAAYA,EAAKU,EAAjB,KAQA,OANAxD,EAAAA,WAAgB,WACd,IAAMyD,EAAc,kBAAMF,GAAmB,IAE7C,OADAG,OAAOC,iBAAiB,QAASF,GAC1B,kBAAMC,OAAOE,oBAAoB,QAASH,MAChD,IAEI,CAAEZ,EAAAA,EAAGC,EAAAA,EAAGQ,gBAAAA,EAAiBC,mBAAAA,EAAoBC,eAAAA,GDIlDK,GADMhB,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EAAGQ,EAAd,EAAcA,gBAAiBC,EAA/B,EAA+BA,mBAAoBC,EAAnD,EAAmDA,eAG7CpC,EAAU,SAACd,GACfA,EAAEqC,kBACFY,GAAmB,GACnBF,EAAkBF,IAcdW,EAAyB,WAAdX,EAAKjE,KAChB6E,EAAajE,GAAkBA,EAAerB,KAAO0E,EAAK1E,GAC1DuF,EAAkBD,EAAa,eAAiB,QAChDE,EAAyBF,EAAa,GAAK,WAC3CvC,KAASuC,IAAcT,GAE7B,OACE,UAAC,KAAD,CACEzC,GAAG,MACHqD,WAAW,SACXjC,eAAe,gBACfrB,GAAG,IACHuD,OAAO,UACPnD,aAAa,KACboD,OAAQ,CAAElB,UAAW,KAAMc,gBAAgB,GAAD,OAAKC,IAC/Cb,cAnBsB,WACxBA,EAAcD,IAmBZ/B,QAASA,EACTiD,cA5BiB,SAAC/D,GACpBA,EAAEC,iBACFa,EAAQd,GACRkD,EAAe,CAAEX,EAAGvC,EAAEgE,MAAOxB,EAAGxC,EAAEiE,QAClChB,GAAmB,IAyBjBS,gBAAiBA,EACjBQ,SAAS,WAZX,WAcE,UAAC,KAAD,WACGV,GACC,SAAC,MAAD,CAAUW,YAAa,EAAG9F,KAAM,GAAI+F,KAAK,OAAOC,MAAM,UAEtD,SAAC,MAAD,CAAQF,YAAa,EAAG9F,KAAM,GAAIgG,MAAM,UAE1C,UAAC,KAAD,CAAQC,MAAM,QAAQC,QAAQ,IAA9B,WACE,SAAC,KAAD,CAAMC,SAAS,KAAKhD,WAAW,OAAO6C,MAAM,iBAA5C,SACGxB,EAAKzE,QAENoF,IACA,UAAC,KAAD,CAAMgB,SAAS,QAAQH,MAAM,iBAA7B,UACGxB,EAAKjE,KADR,MACiBiE,EAAKxE,eAK5B,SAAC,KAAD,CAAMoG,IAAK,EAAGb,WAAW,SAAzB,UACE,SAAC,KAAD,CAAMY,SAAS,KAAKH,MAAM,iBAA1B,SACGxB,EAAKvE,eAGV,SAAC,KAAD,CAAM4C,OAAQA,EAAd,UACE,SAAC,EAAD,CAAaqB,EAAGA,EAAGC,EAAGA,EAAGF,UAAwB,OAAd9C,QAAc,IAAdA,OAAA,EAAAA,EAAgBZ,OAAQ,WExBnE,EAzC8B,SAAC,GAOjB,IANZ8F,EAMW,EANXA,OACAxD,EAKW,EALXA,OACAyD,EAIW,EAJXA,UACAtD,EAGW,EAHXA,OACA/B,EAEW,EAFXA,QACAvB,EACW,EADXA,SAEM6G,GAAa,SAAC,MAAD,IAEnB,OACE,UAAC,KAAD,CAAQC,WAAW,OAAnB,UACG9G,GACD,SAAC,EAAD,CACEI,GAAG,cACHsC,YAAY,SACZM,YAAY,WACZP,MAAOkE,EACP/D,SAAU,SAACX,GAAD,OAAO2E,EAAU3E,EAAEY,OAAOJ,QACpCrB,iBAAkByF,KAEpB,UAAC,KAAD,CAAaL,QAAQ,IAAIO,QAAQ,IAAIC,QAAQ,QAAQrE,aAAa,KAAlE,WACE,SAAC,KAAD,CACE,aAAW,kBACXK,YAAaG,EAAS,WAAa,OACnC7C,KAAK,KACLiD,MAAM,SAAC,MAAD,IACNR,QAASO,KAEX,SAAC,KAAD,CACE,aAAW,kBACXN,YAAaG,EAAS,OAAS,WAC/B7C,KAAK,KACLyC,QAASxB,EACTgC,MAAM,SAAC,MAAD,aCRhB,EAlCwB,WACtB,IAAQ9B,GAAmBC,EAAAA,EAAAA,KAAnBD,eAKR,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CACE,aAAW,SACXqC,QAAQ,QACRnB,aAAa,OACbY,MAAM,SAAC,MAAD,CAAiBjD,KAAM,KAC7ByF,OAAQ,CAAEiB,QAAS,mBAErB,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,GAAIC,EAAAA,GACJ,aAAW,iBACX3D,MAAM,SAAC,MAAD,CAAmBjD,KAAM,KAC/BwD,QAAQ,QACRnB,aAAa,OACboD,OAAQ,CAAEiB,QAAS,gBACnBjE,QArBQ,SAACd,GACfA,EAAEqC,sBAsBE,SAAC,EAAD,CACEC,UAAwB,OAAd9C,QAAc,IAAdA,OAAA,EAAAA,EAAgBZ,OAAQ,GAClCkD,kBAAkB,WC2C5B,EA9DmB,SAAC,GAA8C,IAA5CoD,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,MAAOrC,EAA2B,EAA3BA,cACpC,EAA4BpD,EAAAA,SAAe,IAA3C,eAAOgF,EAAP,KAAeC,EAAf,KACA,GAAoCvD,EAAAA,EAAAA,MAA5BF,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,OAAQ/B,EAAxB,EAAwBA,QAChBE,GAAmBC,EAAAA,EAAAA,KAAnBD,eAQF4F,EAAgB1F,EAAAA,SACpB,kBAPkB,SAACyF,EAAiBE,GACpC,OAAOF,EAAMG,QAAO,SAACzC,GAAD,OAClBA,EAAKzE,KAAKmD,cAAcgE,SAASF,EAAW9D,kBAKxCiE,CAAYL,EAAOT,KACzB,CAACS,EAAOT,IAGJe,EAAcL,EAAcM,KAAI,SAAC7C,GACrC,IAAMW,EAAyB,WAAdX,EAAKjE,KAEtB,OACE,SAAC,EAAD,CAEEiE,KAAMA,EACNC,cAAeU,EAAWV,EAAgB,cAFrCD,EAAK1E,OAOhB,OACE,iCACE,UAAC,KAAD,CACEwD,eAAe,gBACfiC,WAAW,SACXhC,MAAM,OACNsC,SAAS,SACTxB,IAAK,EACLqC,QAAQ,QACRY,SAAU,EACVC,SAAU,EACVlF,aAAc,EACdmF,OAAQ,IAVV,WAYE,SAAC,KAAD,CAASb,GAAG,KAAK3G,KAAK,KAAtB,SACG6G,KAEH,SAAC,EAAD,CACER,OAAQA,EACRxD,OAAQA,EACR5B,QAASA,EACT+B,OAAQA,EACRsD,UAAWA,EALb,SAOGnF,GAAiB,SAAC,EAAD,SAAsBsG,QAG5C,SAAC,KAAD,CAAYC,QAAS7E,EAAS,EAAI,EAAGuD,IAAI,IAAI7C,MAAM,OAAOtB,GAAG,IAAIC,GAAG,IAApE,SACGkF,QCrBT,EAzCoB,WAClB,IAAMO,GAAWC,EAAAA,EAAAA,MACTlD,GAAsBtD,EAAAA,EAAAA,KAAtBsD,kBAOFmD,EAAyB,SAACf,GAC9B,IAAMgB,EAAuB,GACvBC,EAAyB,GAK/B,OAJAjB,EAAMkB,SAAQ,SAACxD,GACkB,WAAdA,EAAKjE,KACXwH,EAAaE,KAAKzD,GAAQsD,EAAWG,KAAKzD,MAEjD,GAAN,OAAWuD,EAAiBD,IAGxBhB,EAAQzF,EAAAA,SACZ,kBAAMwG,EAAuBA,EAAuBhI,MACpD,IAOF,OACE,SAAC,KAAD,CACE0D,MAAM,OACN5D,OAAO,OACPuI,UAAU,SACVC,cAAe,GACf1F,QA9BY,SAACd,GACfA,EAAEqC,kBACFU,EAAkB,OAuBlB,UAOE,SAAC,EAAD,CAAYoC,MAAOA,EAAOD,QAAQ,QAAQpC,cAZxB,SAACD,GACrBmD,EAAS,WAAD,OAAYnD,EAAK1E,W,6BCT7B,EAda,SAAC,GAA2D,IAAD,IAAxDkG,MAAAA,OAAwD,MAAhD,eAAgD,MAAhChG,KAAAA,OAAgC,MAAzB,GAAyB,EAAlBe,GAAkB,YAChEpB,EAASK,EACTuD,EAAQvD,EACd,OACE,SAAC,MAAD,QACE2G,GAAIyB,EAAAA,IACJzI,OAAQA,EACR4D,MAAOA,EACPyC,MAAOA,GACHjF,K,UCbJsH,EAAY,CAAC,UAAW,OAAQ,OAAQ,WA6C9C,EA3Ce,WACb,OAA0BC,EAAAA,EAAAA,KAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACRb,GAAWC,EAAAA,EAAAA,MAOjB,OACE,UAAC,KAAD,CACEtE,eAAe,gBACfrB,GAAI,EACJC,GAAI,EACJwE,QAAQ,UACRb,SAAS,SACTxB,IAAI,IACJmD,OAAO,IACP9B,cAAe,SAAC/D,GAAD,OAAOA,EAAEC,kBAR1B,WAUE,SAAC,KAAD,CAAM6G,GAAG,IAAT,UACE,SAAC,EAAD,MAEDF,GACC,SAAC,KAAD,CAAQ7F,YAAY,WAAWD,QApBhB,WACnB+F,EAAQ,MACRb,EAAS,MAkBL,qBAIA,SAAC,KAAD,CAAQzB,QAAS,EAAjB,SACGmC,EAAUhB,KAAI,SAACqB,GAAD,OACb,SAAC,KAAD,CAEEjD,OAAQ,CAAEkD,aAAc,kBAAmBnD,OAAQ,WAFrD,SAIGkD,GAHIA,YCfnB,EApBqB,WACnB,OACE,+BACE,SAAC,KAAD,WACE,UAAC,KAAD,CACEhB,QAAS,EACTtB,IAAK,EACLwC,KAAK,MACLC,EAAE,OACFC,cAAc,KACdC,EAAE,OANJ,WAQE,SAAC,KAAD,CAAKF,EAAE,OAAOE,EAAE,OAAOrC,QAAQ,cAC/B,SAAC,KAAD,YCkBV,EA7Be,WACb,IAAQhC,GAAsBtD,EAAAA,EAAAA,KAAtBsD,kBAMR,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEiC,GAAIC,EAAAA,GACJlE,YAAY,WACZ,aAAW,yBACXmD,SAAS,QACTmD,OAAO,KACPC,MAAM,KACN5G,aAAa,OACbkC,UAAU,KACVvE,KAAK,KACLiD,MAAM,SAAC,MAAD,IACNR,QAjBU,WACdiC,EAAkB,UAkBhB,SAAC,KAAD,CAAUH,UAAU,KAApB,UACE,SAAC,EAAD,UCZR,EAZqB,WACnB,OACE,iCACE,SAAC,KAAD,CAASoC,GAAG,KAAK3G,KAAK,KAAtB,uBAGA,SAAC,KAAD,KACA,SAAC,EAAD,Q,UCgBN,EAtBqB,SAAC,GAAqC,IAAnCD,EAAkC,EAAlCA,KAAM2I,EAA4B,EAA5BA,KAAMQ,EAAsB,EAAtBA,SAC5B9D,EAAarF,IAAS2I,EAAKvG,MACjC,OACE,UAAC,KAAD,CACEoD,WAAW,SACXa,IAAK,EACLZ,OAAO,UACPvD,GAAI,EACJC,GAAI,EACJwE,QAAStB,EAAa,eAAiB,GACvCY,MAAOZ,EAAa,eAAiB,GACrC/C,aAAa,KACbc,WAAW,OACXsC,OAAQ,CAAEiB,QAAQ,GAAD,QAAMtB,GAAc,mBACrC3C,QAAS,kBAAMyG,EAASR,EAAKvG,QAX/B,UAaGuG,EAAKzF,MACN,SAAC,KAAD,CAAMkD,SAAS,KAAf,SAAqBuC,EAAK3I,W,UCFhC,EAlBqB,WAEnB,OACE,iCACE,SAAC,KAAD,CACEsC,aAAa,OACbK,YAAY,WACZP,MANW,GAOXnC,KAAK,KACL0G,QAAQ,oBAEV,UAAC,KAAD,CAAMP,SAAS,KAAKgD,UAAU,SAA9B,oBACWC,IADX,sBCyBN,EA9BgB,WACd,MAAwB/H,EAAAA,SAAe,IAAvC,eAAOtB,EAAP,KAAasJ,EAAb,KAEMvE,EAAc,SAAC/E,GACnBsJ,EAAQtJ,IAGJuJ,EAA4B,CAChC,CAAEC,MAAO,IAAKxJ,KAAM,WAAYoC,MAAO,GAAIc,MAAM,SAAC,KAAD,KACjD,CACEsG,MAAO,IACPxJ,KAAM,iBACNoC,MAAO,iBACPc,MAAM,SAAC,MAAD,MAIV,OACE,UAAC,KAAD,CAAMuG,QAAQ,SAASpD,IAAK,EAA5B,UACGkD,EAAcjC,KAAI,SAACqB,GAAD,OACjB,SAAC,KAAD,CAAMD,GAAIC,EAAKa,MAAf,UACE,SAAC,EAAD,CAAcb,KAAMA,EAAM3I,KAAMA,EAAMmJ,SAAUpE,KADvB4D,EAAK3I,UAIlC,SAAC,KAAD,CAAS0J,aAAc,GAAIzJ,KAAK,MAAM0J,YAAY,oBAClD,SAAC,EAAD,QCVN,EAnBkB,WAChB,OACE,UAAC,KAAD,CAAQ/J,OAAO,QAAQsG,MAAM,QAAQS,QAAQ,aAAaxE,GAAI,EAA9D,WACE,SAAC,KAAD,CAAQqB,MAAM,MAAMrB,GAAI,EAAxB,UACE,SAAC,EAAD,OAEF,SAAC,KAAD,CACEqB,MAAM,MACN0C,MAAM,QACNtG,OAAO,OACPgK,aAAa,KACbtG,UAAU,OALZ,UAOE,SAAC,EAAD,UCGR,EAjBkB,WAChB,IAAMuG,GAAQC,EAAAA,EAAAA,MAGd,OAFAC,QAAQC,IAAI,QAASH,IAGnB,SAAC,KAAD,CAAQjK,OAAO,QAAf,UACE,UAAC,KAAD,YACE,SAAC,KAAD,qBACA,SAAC,KAAD,wDACA,SAAC,KAAD,WACE,SAAC,KAAD,CAAMgH,GAAG,IAAT,UAAmB,OAALiD,QAAK,IAALA,OAAA,EAAAA,EAAOI,cAAP,OAAqBJ,QAArB,IAAqBA,OAArB,EAAqBA,EAAOK,mBCkCpD,EApCuB,WACrB,MAA0B5I,EAAAA,SAAe,IAAzC,eAAO6I,EAAP,KAAcC,EAAd,KAWA,OACE,SAAC,KAAD,CAAKxD,GAAG,OAAOjF,SANI,SAACC,GACpBA,EAAEC,iBACFE,MAAM,CAAEoI,MAAAA,KAIR,UACE,UAAC,KAAD,CAAME,cAAc,SAAShE,IAAK,EAAGiE,GAAI,GAAzC,WACE,SAAC,KAAD,CAASrK,KAAK,KAAKgG,MAAM,iBAAiB7C,WAAW,SAArD,oCAGA,SAAC,KAAD,CAAMgD,SAAS,KAAf,uGAIA,UAAC,KAAD,YACE,SAAC,KAAD,CAAWhD,WAAW,SAAS6C,MAAM,iBAAiBG,SAAS,KAA/D,oBAGA,SAAC,KAAD,CAAOpG,KAAK,QAAQQ,KAAK,QAAQ4B,MAAO+H,EAAO5H,SAvBtC,SAACX,GAChBwI,EAASxI,EAAEY,OAAOJ,cAwBd,SAAC,KAAD,CAAQ5B,KAAK,SAASmC,YAAY,WAAWF,UAAU,WAAvD,0BCnBR,GAhB2B,WACzB,OACE,UAAC,KAAD,CAAM4H,cAAc,SAApB,WACE,UAAC,KAAD,CAAM9G,eAAe,gBAArB,WACE,SAAC,KAAD,CAAMmF,GAAG,iBAAT,UACE,SAAC,KAAD,CAAQjF,QAAQ,OAAhB,wBAEF,SAAC,KAAD,CAAMiF,GAAG,cAAT,UACE,SAAC,KAAD,CAAQjF,QAAQ,OAAhB,2BAGJ,SAAC,EAAD,Q,4CCSA8G,GAAoB,SAAC,GAA6C,IAA3CvK,EAA0C,EAA1CA,KAAMwK,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,UACxC,OACE,UAAC,KAAD,CAAQtE,QAAS,EAAGhE,GAAI,GAAxB,WACE,SAAC,KAAD,CAASlC,KAAK,KAAd,SAAoBD,KACpB,SAAC,KAAD,CAASiG,MAAM,eAAf,SACGwE,EAAS,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAOE,QAAV,OAAoBF,QAApB,IAAoBA,OAApB,EAAoBA,EAAOG,SAEtC3K,IACC,SAAC,KAAD,CAAQ2C,YAAY,WAAW1C,KAAK,KAApC,6BAoER,GA5DoB,SAAC,GAA6C,IAA3C2K,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,SAAUJ,EAAuB,EAAvBA,UAEtCK,EAOEF,EAPFE,MACAC,EAMEH,EANFG,MACAC,EAKEJ,EALFI,qBACAC,EAIEL,EAJFK,SACAC,EAGEN,EAHFM,SACAlL,EAEE4K,EAFF5K,KACAwK,EACEI,EADFJ,MAGInF,EAAarF,IAAS6K,EAE5B,OACE,UAAC,KAAD,CACE1I,GAAI,EACJgJ,OAAO,YACPxB,YAAatE,EAAa,eAAiB,cAC3C+D,UAAU,SACVgC,QAAQ,MALV,WAOE,SAACb,GAAD,CAAmBvK,KAAMA,EAAMwK,MAAOA,EAAOC,UAAWA,KACxD,SAAC,KAAD,CAAQY,EAAG,EAAG1E,QAAQ,eAAenD,MAAM,OAA3C,UACE,SAAC,KAAD,CAAM4C,SAAS,KAAKH,MAAM,iBAA1B,SACG6E,OAGL,SAAC,KAAD,CAAQO,EAAG,EAAG7H,MAAM,OAApB,UACE,SAAC,KAAD,CAAM4C,SAAS,KAAKH,MAAM,iBAA1B,SACG8E,OAGL,SAAC,KAAD,CAAQM,EAAG,EAAG1E,QAAQ,eAAenD,MAAM,OAA3C,UACE,SAAC,KAAD,CACEoD,GAAIoE,EAAuBM,GAAAA,IAAuBC,GAAAA,IAClD3L,OAAO,IACP4D,MAAM,IACNyC,MAAM,oBAGV,SAAC,KAAD,CAAQoF,EAAG,EAAG7H,MAAM,OAApB,UACE,SAAC,KAAD,CACEoD,GAAIqE,EAAWK,GAAAA,IAAuBC,GAAAA,IACtC3L,OAAO,IACP4D,MAAM,IACNyC,MAAM,oBAGV,SAAC,KAAD,CAAQoF,EAAG,EAAG7H,MAAM,OAAOmD,QAAQ,eAAnC,UACE,SAAC,KAAD,CACEC,GAAIsE,EAAWI,GAAAA,IAAuBC,GAAAA,IACtC3L,OAAO,IACP4D,MAAM,IACNyC,MAAM,uBChEhB,GAtBgB,SAAC,GAAqB,IAAnB0C,EAAkB,EAAlBA,KACjB,OACE,UAAC,KAAD,CACErG,aAAa,KACb6I,OAAO,YACPxB,YAAY,WACZ0B,EAAG,EACHG,GAAI,EACJ7E,QAAQ,QACRN,IAAI,IAPN,WASE,SAAC,KAAD,CAAMO,GAAI+B,EAAKzF,KAAM8F,EAAE,KAAKF,EAAE,KAAK7C,MAAM,kBACzC,SAAC,KAAD,CAASG,SAAS,KAAKqF,GAAI,GAA3B,SACG9C,EAAK+C,SAER,SAAC,KAAD,CAAMtF,SAAU,KAAMH,MAAM,iBAAiBmD,UAAU,SAAvD,SACGT,EAAKgD,WCNRC,GAAe,CACnB,CACE1I,KAAM2I,GAAAA,IACNH,MAAO,iBACPC,KAAM,kFAER,CACEzI,KAAM4I,EAAAA,IACNJ,MAAO,cACPC,KAAM,mGAER,CACEzI,KAAM6I,GAAAA,IACNL,MAAO,QACPC,KAAM,iDAIJK,GAAc,CAClB,CACEhM,KAAM,OACN8K,MAAO,OACPC,MAAO,YACPC,sBAAsB,EACtBC,UAAU,EACVC,UAAU,EACVV,MAAO,CACLE,QAAS,QACTC,OAAQ,UAGZ,CACE3K,KAAM,WACN8K,MAAO,WACPC,MAAO,YACPC,sBAAsB,EACtBC,UAAU,EACVC,UAAU,EACVV,MAAO,CACLE,QAAS,SACTC,OAAQ,YAGZ,CACE3K,KAAM,kBACN8K,MAAO,0BACPC,MAAO,YACPC,sBAAsB,EACtBC,UAAU,EACVC,UAAU,EACVV,MAAO,CACLE,QAAS,SACTC,OAAQ,aAmGd,GA9FgB,WACd,MAAkCrJ,EAAAA,UAAe,GAAjD,eAAOmJ,EAAP,KAAkBwB,EAAlB,KAIA,OACE,+BACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAQpD,KAAK,MAAM1C,QAAS,EAA5B,WACE,UAAC,KAAD,CAAYwB,QAAS,EAAGtB,IAAK,GAA7B,WACE,UAAC,KAAD,CAAQiE,GAAI,GAAInE,QAAQ,IAAxB,WACE,SAAC,KAAD,CAASlG,KAAK,MAAMmD,WAAW,SAAS8I,WAAW,UAAnD,qDAGA,SAAC,KAAD,CACE9C,UAAU,UACVhD,SAAS,KACTH,MAAM,iBACNiG,WAAW,IACX1I,MAAM,MACNf,UAAU,QANZ,4GAWA,SAAC,KAAD,CAAKe,MAAM,OAAOrB,GAAG,IAArB,UACE,SAAC,KAAD,CAAMuG,GAAG,cAAT,UACE,SAAC,KAAD,CACEjG,UAAU,aACVE,YAAY,WACZ1C,KAAK,KAHP,qCAUN,SAAC,KAAD,CAAK6I,EAAE,OAAOE,EAAE,OAAOrC,QAAQ,iBAEjC,UAAC,KAAD,CAAQA,QAAQ,UAAUxE,GAAG,KAAKD,GAAG,KAAKmE,IAAI,KAA9C,WACE,SAAC,KAAD,CAASpG,KAAK,KAAKmD,WAAW,OAA9B,sCAGA,SAAC,KAAD,CAAYuE,QAAS,EAAGtB,IAAK,GAA7B,SACGuF,GAAatE,KAAI,SAACqB,GAAD,OAChB,SAAC,GAAD,CAA0BA,KAAMA,GAAlBA,EAAK+C,gBAIzB,UAAC,KAAD,CAAQvJ,GAAG,KAAKD,GAAG,KAAKiE,QAAQ,KAAhC,WACE,SAAC,KAAD,kDACA,UAAC,KAAD,CACElG,KAAK,KACLwD,QAAQ,UACR4H,EAAG,EACH1E,QAAQ,eACRV,MAAM,eACNmF,QAAQ,KACRe,YAAU,EAPZ,WASE,SAAC,KAAD,CACElG,MAAOwE,EAAY,eAAiB,GACpC9D,QAAS8D,EAAY,QAAU,GAC/B/H,QAAS,kBAAMuJ,GAAa,IAC5BvG,OAAQ,CAAEiB,QAAS8D,EAAY,QAAU,IAJ3C,8BAQA,SAAC,KAAD,CACExE,MAAOwE,EAAY,GAAK,eACxB9D,QAAS8D,EAAY,GAAK,QAC1B/H,QAAS,kBAAMuJ,GAAa,IAC5BvG,OAAQ,CAAEiB,QAAS8D,EAAY,GAAK,SAJtC,gCASF,SAAC,KAAD,CAAY9C,QAAS,EAAGnE,MAAM,OAA9B,SACGwI,GAAY1E,KAAI,SAACqB,GAAD,OACf,SAAC,GAAD,CAEEiC,QAASjC,EACTkC,SA/EC,WAgFDJ,UAAWA,GAHN9B,EAAK3I,sB,WCpE5B,GAxEc,WACZ,IAAQyI,GAAYF,EAAAA,EAAAA,KAAZE,QACFb,GAAWC,EAAAA,EAAAA,MACjB,EAA4BvG,EAAAA,SAAe,CAAE6I,MAAO,GAAIiC,SAAU,KAAlE,eAAOtK,EAAP,KAAeuK,EAAf,KACA,EAAwC/K,EAAAA,UAAe,GAAvD,eAAOgL,EAAP,KAAqBC,EAArB,KACQpC,EAAoBrI,EAApBqI,MAAOiC,EAAatK,EAAbsK,SAET7J,EAAW,SAACX,GAChB,MAAwBA,EAAEY,OAAlBxC,EAAR,EAAQA,KAAMoC,EAAd,EAAcA,MACdiK,GAAU,SAACG,GAAD,eAAC,UAAqBA,GAAtB,eAAmCxM,EAAOoC,QAoBtD,OACE,SAAC,KAAD,CAAKwE,GAAG,OAAOjF,SAdO,SAACC,GACvBA,EAAEC,iBACFkI,QAAQC,IAAI,YAOZvB,GAAQ,kBANS,CACf1I,GAAI,IACJC,KAAM,WACNmK,MAAO,mBACPsC,eAAgB,yCAEX,IAAgBtC,MAAAA,EAAOnK,KAAMmK,EAAMuC,MAAM,KAAK,MACrD9E,EAAS,MAIT,UACE,UAAC,KAAD,CAAM6B,QAAQ,SAASpD,IAAK,EAAGiE,GAAI,GAAnC,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAWlH,WAAW,SAAS6C,MAAM,iBAAiBG,SAAS,KAA/D,4BAGA,SAAC,KAAD,CAAOpG,KAAK,QAAQQ,KAAK,QAAQ4B,MAAO+H,EAAO5H,SAAUA,QAE3D,UAAC,KAAD,YACE,SAAC,KAAD,CAAWa,WAAW,SAAS6C,MAAM,iBAAiBG,SAAS,KAA/D,uBAGA,UAAC,KAAD,YACE,SAAC,KAAD,CACEpG,KAAK,WACLQ,KAAM8L,EAAe,OAAS,WAC9BlK,MAAOgK,EACP7J,SAAUA,KAEZ,SAAC,KAAD,CAAmBiB,MAAM,SAAzB,UACE,SAAC,KAAD,CAAQwF,EAAE,UAAU/I,KAAK,KAAKyC,QAtCf,WACzB6J,GAAiBD,IAqCP,SACGA,EAAe,OAAS,kBAKjC,UAAC,KAAD,CAAM9G,WAAW,SAASjC,eAAe,gBAAzC,WACE,SAAC,KAAD,CACEkC,OAAO,UACPC,OAAQ,CAAEiH,eAAgB,YAAa1G,MAAO,YAFhD,UAIE,SAAC,KAAD,CAAMyC,GAAG,wBAAT,iCAEF,SAAC,KAAD,CAAQ/F,YAAY,WAAWnC,KAAK,SAApC,8BCpDV,GArBkB,WAChB,OACE,UAAC,KAAD,CAAM6J,cAAc,SAApB,WACE,UAAC,KAAD,CAAM9G,eAAe,gBAArB,WACE,SAAC,KAAD,CAAStD,KAAK,KAAd,sBACA,UAAC,KAAD,gBACK,KACH,SAAC,KAAD,CACE2G,GAAG,OACHX,MAAM,eACNP,OAAQ,CAAEiH,eAAgB,aAH5B,UAKE,SAAC,KAAD,CAAMjE,GAAG,iBAAT,wCAIN,SAAC,GAAD,QC8FN,GAvGiB,WACf,MAA4BpH,EAAAA,SAAe,CACzC6I,MAAO,GACPiC,SAAU,GACVQ,gBAAiB,GACjBC,UAAW,GACXC,SAAU,KALZ,eAAOhL,EAAP,KAAeuK,EAAf,KAOA,EAAwC/K,EAAAA,UAAe,GAAvD,eAAOgL,EAAP,KAAqBC,EAArB,KACA,EACEjL,EAAAA,UAAe,GADjB,eAAOyL,EAAP,KAA8BC,EAA9B,KAEQ7C,EAA0DrI,EAA1DqI,MAAOiC,EAAmDtK,EAAnDsK,SAAUS,EAAyC/K,EAAzC+K,UAAWC,EAA8BhL,EAA9BgL,SAAUF,EAAoB9K,EAApB8K,gBAExCrK,EAAW,SAACX,GAChB,MAAwBA,EAAEY,OAAlBxC,EAAR,EAAQA,KAAMoC,EAAd,EAAcA,MACdiK,GAAU,SAACY,GAAD,eAAC,UAAoBA,GAArB,eAAiCjN,EAAOoC,QAWpD,OACE,SAAC,KAAD,CAAKwE,GAAG,OAAR,UACE,UAAC,KAAD,CAAMyD,cAAc,SAAShE,IAAK,EAAGiE,GAAI,GAAzC,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAWlH,WAAW,SAAS6C,MAAM,iBAAiBG,SAAS,KAA/D,yBAGA,SAAC,KAAD,CACEpG,KAAK,YACLQ,KAAK,OACL4B,MAAOyK,EACPtK,SAAUA,QAGd,UAAC,KAAD,YACE,SAAC,KAAD,CAAWa,WAAW,SAAS6C,MAAM,iBAAiBG,SAAS,KAA/D,wBAGA,SAAC,KAAD,CACEpG,KAAK,WACLQ,KAAK,OACL4B,MAAO0K,EACPvK,SAAUA,QAGd,UAAC,KAAD,YACE,SAAC,KAAD,CAAWa,WAAW,SAAS6C,MAAM,iBAAiBG,SAAS,KAA/D,4BAGA,SAAC,KAAD,CAAOpG,KAAK,QAAQQ,KAAK,QAAQ4B,MAAO+H,EAAO5H,SAAUA,QAE3D,UAAC,KAAD,YACE,SAAC,KAAD,CAAWa,WAAW,SAAS6C,MAAM,iBAAiBG,SAAS,KAA/D,uBAGA,UAAC,KAAD,YACE,SAAC,KAAD,CACEpG,KAAK,WACLQ,KAAM8L,EAAe,OAAS,WAC9BlK,MAAOgK,EACP7J,SAAUA,KAEZ,SAAC,KAAD,CAAmBiB,MAAM,SAAzB,UACE,SAAC,KAAD,CAAQwF,EAAE,UAAU/I,KAAK,KAAKyC,QAnDf,WACzB6J,GAAiBD,IAkDP,SACGA,EAAe,OAAS,kBAKjC,UAAC,KAAD,YACE,SAAC,KAAD,CAAWlJ,WAAW,SAAS6C,MAAM,iBAAiBG,SAAS,KAA/D,+BAGA,UAAC,KAAD,YACE,SAAC,KAAD,CACEpG,KAAK,kBACLQ,KAAMuM,EAAwB,OAAS,WACvC3K,MAAOwK,EACPrK,SAAUA,KAEZ,SAAC,KAAD,CAAmBiB,MAAM,SAAzB,UACE,SAAC,KAAD,CACEwF,EAAE,UACF/I,KAAK,KACLyC,QApEsB,WAClCsK,GAA0BD,IAgEhB,SAKGA,EAAwB,OAAS,kBAK1C,SAAC,KAAD,CAAQpK,YAAY,WAApB,qCCnFR,GArBqB,WACnB,OACE,UAAC,KAAD,CAAM0H,cAAc,SAApB,WACE,UAAC,KAAD,CAAM9G,eAAe,gBAArB,WACE,SAAC,KAAD,CAAStD,KAAK,KAAd,sBACA,UAAC,KAAD,gBACK,KACH,SAAC,KAAD,CACE2G,GAAG,OACHX,MAAM,eACNP,OAAQ,CAAEiH,eAAgB,aAH5B,UAKE,SAAC,KAAD,CAAMjE,GAAG,cAAT,4BAIN,SAAC,GAAD,QCTOwE,IAAwBC,EAAAA,EAAAA,IAAoB,CACvD,CACE5M,KAAM,IACN6M,SACE,iCACE,SAAC,EAAD,KACA,SAAC,KAAD,OAGJC,cAAc,SAAC,EAAD,IACd1N,SAAU,CACR,CAAEY,KAAM,GAAI6M,SAAS,SAAC,GAAD,KACrB,CACE7M,KAAM,OACN6M,SAAS,SAAC,EAAD,IACTzN,SAAU,CACR,CAAEY,KAAM,QAAS6M,SAAS,SAAC,GAAD,KAC1B,CAAE7M,KAAM,WAAY6M,SAAS,SAAC,GAAD,KAC7B,CAAE7M,KAAM,kBAAmB6M,SAAS,SAAC,GAAD,WAOjCE,IAAsBH,EAAAA,EAAAA,IAAoB,CACrD,CACE5M,KAAM,IACN6M,SACE,UAAC,EAAD,YACE,SAAC,EAAD,KACA,SAAC,KAAD,OAGJC,cAAc,SAAC,EAAD,IACd1N,SAAU,CACR,CACEY,KAAM,GACN6M,SAAS,SAAC,EAAD,IACTzN,SAAU,CACR,CAAEY,KAAM,GAAI6M,SAAS,SAAC,EAAD,KACrB,CAAE7M,KAAM,mBAAoB6M,SAAS,SAAC,EAAD","sources":["UI/components/common/FullScreen.tsx","test_data.ts","UI/components/common/Input.tsx","UI/components/compound/forms/CreateFolder.tsx","UI/components/common/Modal.tsx","UI/components/common/GeneralContextMenu.tsx","UI/components/compound/forms/DeleteForm.tsx","UI/components/compound/MoveFS.tsx","UI/components/common/FSContextMenu.tsx","UI/components/compound/ContextMenu.tsx","UI/components/common/File.tsx","UI/hooks/useContextMenu.tsx","UI/components/compound/FolderTreeViewToggler.tsx","UI/components/compound/SelectFSOptions.tsx","UI/components/compound/FolderTree.tsx","UI/components/compound/FolderFiles.tsx","UI/components/common/Logo.tsx","UI/components/compound/NavBar.tsx","UI/pages/AuthRootPage.tsx","UI/components/compound/AddNew.tsx","UI/components/compound/FileExplorer.tsx","UI/components/common/SideMenuItem.tsx","UI/components/compound/StorageStats.tsx","UI/components/compound/SideNav.tsx","UI/pages/Dashboard.tsx","UI/pages/ErrorPage.tsx","UI/components/compound/forms/ForgotPassword.tsx","UI/pages/ForgotPasswordPage.tsx","UI/components/compound/PricingCard.tsx","UI/pages/Landing.Components/Feature.tsx","UI/pages/Landing.tsx","UI/components/compound/forms/Login.tsx","UI/pages/LoginPage.tsx","UI/components/compound/forms/Register.tsx","UI/pages/RegisterPage.tsx","UI/routes/router.tsx"],"sourcesContent":["import { Box } from '@chakra-ui/react';\nimport React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst FullScreen = ({ children }: Props) => {\n  return (\n    <Box height=\"100vh\" overflow=\"hidden\">\n      {children}\n    </Box>\n  );\n};\n\nexport default FullScreen;\n","import { FSNode } from './UI/interfaces/File';\n\nexport const recentFiles: FSNode[] = [\n  {\n    id: '1',\n    name: 'End of year report 2020',\n    size: 150000,\n    updatedAt: '2020-01-01',\n    createdAt: '2020-01-02',\n    createdBy: '1',\n    ownedBy: '1',\n    parentFolder: '2',\n    path: '1/1',\n    type: 'pdf',\n  },\n  {\n    id: '2',\n    name: 'End of year report 2019',\n    size: 150000,\n    updatedAt: '2019-01-01',\n    createdAt: '2020-01-02',\n    createdBy: '1',\n    ownedBy: '1',\n    parentFolder: '2',\n    path: '1/2',\n    type: 'pdf',\n  },\n  {\n    id: '3',\n    name: 'End of year report 2019',\n    size: 150000,\n    updatedAt: '2019-01-01',\n    createdAt: '2020-01-02',\n    createdBy: '1',\n    ownedBy: '1',\n    parentFolder: '2',\n    path: '1/3',\n    type: 'txt',\n  },\n  {\n    id: '4',\n    name: 'Moments 2020',\n    size: 30000000,\n    updatedAt: '2019-01-01',\n    createdAt: '2020-01-02',\n    createdBy: '1',\n    ownedBy: '1',\n    parentFolder: '2',\n    path: '1/4',\n    type: 'folder',\n  },\n];\n","import React from 'react';\nimport {\n  Input as ChakraInput,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  InputProps,\n  InputGroup,\n  InputRightElement,\n  InputLeftElement,\n} from '@chakra-ui/react';\n\ninterface Props extends InputProps {\n  id: string;\n  isInvalid?: boolean;\n  isDisabled?: boolean;\n  isRequired?: boolean;\n  label?: string;\n  helperText?: string;\n  inputRightElement?: React.ReactNode;\n  inputLeftElement?: React.ReactNode;\n}\n\nconst Input = ({\n  label,\n  id,\n  isInvalid,\n  isDisabled,\n  isRequired,\n  helperText,\n  inputRightElement,\n  inputLeftElement,\n  ...rest\n}: Props) => {\n  return (\n    <FormControl\n      isInvalid={isInvalid}\n      isDisabled={isDisabled}\n      isRequired={isRequired}\n    >\n      {label && <FormLabel htmlFor={id}>{label}</FormLabel>}\n      <InputGroup>\n        {inputLeftElement && (\n          <InputLeftElement>{inputLeftElement}</InputLeftElement>\n        )}\n        <ChakraInput {...rest} id={id} />\n        {inputRightElement && (\n          <InputRightElement>{inputRightElement}</InputRightElement>\n        )}\n      </InputGroup>\n      {helperText && <FormHelperText>{helperText}</FormHelperText>}\n    </FormControl>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Divider,\n  Flex,\n  ModalFooter,\n  ModalHeader,\n} from '@chakra-ui/react';\nimport { TbFolderPlus } from 'react-icons/tb';\nimport Input from '../../common/Input';\nimport { useParams } from 'react-router-dom';\nimport { useSelectedFSNodeFile } from '../../../context/selected-fs-node-context';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst CreateFolder = ({ onClose }: Props) => {\n  const FILE_NAME = 'fileName';\n  const { selectedFSNode } = useSelectedFSNodeFile();\n  const [fileName, setFileName] = React.useState(selectedFSNode?.name || '');\n  const { folderId } = useParams();\n\n  const handleCreateFolder = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    const values = { folderId, fileName };\n    alert(JSON.stringify(values, null, 2));\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFileName(e.target.value);\n  };\n\n  return (\n    <form onSubmit={handleCreateFolder}>\n      <ModalHeader>New Folder</ModalHeader>\n      <Divider />\n      <Flex px={6} py={8}>\n        <Input\n          id={FILE_NAME}\n          name={FILE_NAME}\n          value={fileName}\n          placeholder=\"File Name\"\n          borderRadius=\"lg\"\n          onChange={handleChange}\n        />\n      </Flex>\n      <ModalFooter>\n        <ButtonGroup alignSelf=\"flex-end\">\n          <Button size=\"sm\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button\n            size=\"sm\"\n            colorScheme=\"green\"\n            type=\"submit\"\n            isDisabled={fileName.length === 0}\n            leftIcon={<TbFolderPlus />}\n          >\n            Create Folder\n          </Button>\n        </ButtonGroup>\n      </ModalFooter>\n    </form>\n  );\n};\n\nexport default CreateFolder;\n","import React from 'react';\nimport {\n  Modal as ChakraModal,\n  ModalOverlay,\n  ModalProps,\n  ModalContent,\n} from '@chakra-ui/react';\n\ninterface Props extends ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  isCentered?: boolean;\n  children: React.ReactNode;\n}\n\nconst Modal = ({ isOpen, onClose, isCentered, children }: Props) => {\n  return (\n    <ChakraModal isOpen={isOpen} onClose={onClose} isCentered={isCentered}>\n      <ModalOverlay />\n      <ModalContent>{children}</ModalContent>\n    </ChakraModal>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { MenuItem, useDisclosure } from '@chakra-ui/react';\nimport { TbFilePlus, TbFolderPlus } from 'react-icons/tb';\nimport CreateFolder from '../compound/forms/CreateFolder';\nimport Modal from './Modal';\n\nconst GeneralContextMenu = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <>\n      <MenuItem icon={<TbFolderPlus size={24} />} onClick={onOpen}>\n        New Folder\n      </MenuItem>\n      <MenuItem icon={<TbFilePlus size={24} />}>Upload File</MenuItem>\n      <Modal isOpen={isOpen} onClose={onClose} size=\"md\" isCentered={true}>\n        <CreateFolder onClose={onClose} />\n      </Modal>\n    </>\n  );\n};\n\nexport default GeneralContextMenu;\n","import React from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Divider,\n  Flex,\n  ModalFooter,\n  ModalHeader,\n  Text,\n} from '@chakra-ui/react';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport { useSelectedFSNodeFile } from '../../../context/selected-fs-node-context';\n\ntype Props = {\n  onClose: () => void;\n};\n\nconst DeleteForm = ({ onClose }: Props) => {\n  const { selectedFSNode } = useSelectedFSNodeFile();\n  const handleDelete = () => {};\n  const isFolder = selectedFSNode?.type === 'folder' ? true : false;\n  const name = isFolder ? 'Folder' : 'File';\n\n  return (\n    <form onSubmit={handleDelete}>\n      <ModalHeader>Delete {name}</ModalHeader>\n      <Divider />\n      <Flex px={6} py={4}>\n        <Text>\n          Are you sure you want to delete {name.toLowerCase()}\n          <Text fontWeight=\"bold\">{selectedFSNode?.name}?</Text>\n        </Text>\n      </Flex>\n      <ModalFooter>\n        <ButtonGroup alignSelf=\"flex-end\">\n          <Button size=\"sm\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button\n            size=\"sm\"\n            colorScheme=\"red\"\n            type=\"submit\"\n            leftIcon={<MdDeleteOutline size={20} />}\n          >\n            Delete\n          </Button>\n        </ButtonGroup>\n      </ModalFooter>\n    </form>\n  );\n};\n\nexport default DeleteForm;\n","import React from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Divider,\n  Flex,\n  IconButton,\n  ModalCloseButton,\n  ModalFooter,\n  ModalHeader,\n  SimpleGrid,\n  Tooltip,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { TbFolderPlus } from 'react-icons/tb';\nimport Modal from '../common/Modal';\nimport CreateFolder from './forms/CreateFolder';\n\ntype Props = {\n  onClose: () => void;\n};\n\nconst MoveFS = ({ onClose }: Props) => {\n  const { isOpen, onOpen, onClose: onCloseModal } = useDisclosure();\n\n  return (\n    <>\n      {!isOpen && (\n        <>\n          <ModalHeader>Move item to...</ModalHeader>\n          <ModalCloseButton />\n          <Divider />\n          <SimpleGrid height={400} overflowY=\"auto\"></SimpleGrid>\n          <Divider />\n          <ModalFooter>\n            <Flex justifyContent=\"space-between\" width=\"full\">\n              <Tooltip label=\"Create Folder\">\n                <IconButton\n                  onClick={onOpen}\n                  variant=\"ghost\"\n                  borderRadius=\"full\"\n                  aria-label=\"create folder\"\n                  icon={<TbFolderPlus size={24} />}\n                />\n              </Tooltip>\n              <ButtonGroup size=\"sm\">\n                <Button onClick={onClose}>Cancel</Button>\n                <Button colorScheme=\"linkedin\">Move</Button>\n              </ButtonGroup>\n            </Flex>\n          </ModalFooter>\n        </>\n      )}\n      <Modal isOpen={isOpen} onClose={onCloseModal} size=\"md\" isCentered={true}>\n        <CreateFolder onClose={onCloseModal} />\n      </Modal>\n    </>\n  );\n};\n\nexport default MoveFS;\n","import React from 'react';\nimport { MenuDivider, MenuItem, useDisclosure } from '@chakra-ui/react';\nimport {\n  MdDeleteOutline,\n  MdDriveFileRenameOutline,\n  MdOutlineDriveFileMove,\n} from 'react-icons/md';\nimport CreateFolder from '../compound/forms/CreateFolder';\nimport Modal from './Modal';\nimport DeleteForm from '../compound/forms/DeleteForm';\nimport MoveFS from '../compound/MoveFS';\nimport { useSelectedFSNodeFile } from '../../context/selected-fs-node-context';\n\ntype Props = {\n  showDeleteOption?: boolean;\n};\n\nconst FSContextMenu = ({ showDeleteOption = true }: Props) => {\n  const { selectedFSNode } = useSelectedFSNodeFile();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    isOpen: isDeleteOpen,\n    onOpen: onDeleteOpen,\n    onClose: onDeleteClose,\n  } = useDisclosure();\n  const {\n    isOpen: isMoveOpen,\n    onOpen: onMoveOpen,\n    onClose: onMoveClose,\n  } = useDisclosure();\n\n  const onClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n  };\n\n  const onClickRename = (e: React.MouseEvent) => {\n    onClick(e);\n    onOpen();\n  };\n\n  const onClickDelete = (e: React.MouseEvent) => {\n    onClick(e);\n    onDeleteOpen();\n  };\n\n  const onClickMove = (e: React.MouseEvent) => {\n    onClick(e);\n    onMoveOpen();\n  };\n\n  const isFolder = selectedFSNode?.type === 'folder';\n  const name = isFolder ? 'Folder' : 'File';\n\n  return (\n    <>\n      <MenuItem\n        onClick={onClickRename}\n        icon={<MdDriveFileRenameOutline size={20} />}\n      >\n        Rename {name}\n      </MenuItem>\n      <MenuItem\n        onClick={onClickMove}\n        icon={<MdOutlineDriveFileMove size={20} />}\n      >\n        Move {name}\n      </MenuItem>\n      {showDeleteOption && (\n        <>\n          <MenuDivider />\n          <MenuItem\n            onClick={onClickDelete}\n            icon={<MdDeleteOutline size={20} />}\n          >\n            Remove\n          </MenuItem>\n        </>\n      )}\n      <Modal isOpen={isOpen} onClose={onClose} size=\"md\" isCentered={true}>\n        <CreateFolder onClose={onClose} />\n      </Modal>\n      <Modal isOpen={isMoveOpen} onClose={onMoveClose} size=\"xl\" isCentered>\n        <MoveFS onClose={onMoveClose} />\n      </Modal>\n      <Modal isOpen={isDeleteOpen} onClose={onDeleteClose} size=\"md\" isCentered>\n        <DeleteForm onClose={onDeleteClose} />\n      </Modal>\n    </>\n  );\n};\n\nexport default FSContextMenu;\n","import React from 'react';\nimport { MenuList } from '@chakra-ui/react';\nimport GeneralContextMenu from '../common/GeneralContextMenu';\nimport FSContextMenu from '../common/FSContextMenu';\n\ntype Props = {\n  menuType: string;\n  x?: number;\n  y?: number;\n  showDeleteOption?: boolean;\n};\n\nconst ContextMenu = ({ menuType, x, y, showDeleteOption }: Props) => {\n  let child = <GeneralContextMenu />;\n  if (menuType) child = <FSContextMenu showDeleteOption={showDeleteOption} />;\n\n  if (x || y) <MenuList boxShadow=\"lg\">{child}</MenuList>;\n\n  return (\n    <MenuList top={y} left={x} boxShadow=\"lg\">\n      {child}\n    </MenuList>\n  );\n};\n\nexport default ContextMenu;\n","import React from 'react';\nimport { Flex, HStack, Menu, Text, VStack } from '@chakra-ui/react';\nimport { FSNode } from '../../interfaces/File';\nimport { TbFolder, TbFile } from 'react-icons/tb';\nimport { useSelectedFSNodeFile } from '../../context/selected-fs-node-context';\nimport ContextMenu from '../compound/ContextMenu';\nimport { useContextMenu } from '../../hooks/useContextMenu';\n\ninterface Props {\n  file: FSNode;\n  onDoubleClick: (file: FSNode) => void;\n}\n\nconst File = ({ file, onDoubleClick }: Props) => {\n  const { selectedFSNode, setSelectedFSNode } = useSelectedFSNodeFile();\n  const { x, y, showContextMenu, setShowContextMenu, setCoordinates } =\n    useContextMenu();\n\n  const onClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.stopPropagation();\n    setShowContextMenu(false);\n    setSelectedFSNode(file);\n  };\n\n  const onRightClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.preventDefault();\n    onClick(e);\n    setCoordinates({ x: e.pageX, y: e.pageY });\n    setShowContextMenu(true);\n  };\n\n  const handleDoubleClick = () => {\n    onDoubleClick(file);\n  };\n\n  const isFolder = file.type === 'folder';\n  const isSelected = selectedFSNode && selectedFSNode.id === file.id;\n  const backgroundColor = isSelected ? 'linkedin.100' : 'white';\n  const backgroundColorOnHover = isSelected ? '' : 'gray.200';\n  const isOpen = isSelected && showContextMenu ? true : false;\n\n  return (\n    <Flex\n      py=\"2.5\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      px=\"5\"\n      cursor=\"pointer\"\n      borderRadius=\"lg\"\n      _hover={{ boxShadow: 'md', backgroundColor: `${backgroundColorOnHover}` }}\n      onDoubleClick={handleDoubleClick}\n      onClick={onClick}\n      onContextMenu={onRightClick}\n      backgroundColor={backgroundColor}\n      position=\"relative\"\n    >\n      <HStack>\n        {isFolder ? (\n          <TbFolder strokeWidth={1} size={30} fill=\"gray\" color=\"gray\" />\n        ) : (\n          <TbFile strokeWidth={1} size={30} color=\"gray\" />\n        )}\n        <VStack align=\"start\" spacing=\"0\">\n          <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"blackAlpha.800\">\n            {file.name}\n          </Text>\n          {!isFolder && (\n            <Text fontSize=\"small\" color=\"blackAlpha.600\">\n              {file.type} / {file.size}\n            </Text>\n          )}\n        </VStack>\n      </HStack>\n      <Flex gap={2} alignItems=\"center\">\n        <Text fontSize=\"sm\" color=\"blackAlpha.600\">\n          {file.updatedAt}\n        </Text>\n      </Flex>\n      <Menu isOpen={isOpen}>\n        <ContextMenu x={x} y={y} menuType={selectedFSNode?.type || ''} />\n      </Menu>\n    </Flex>\n  );\n};\n\nexport default File;\n","import React from 'react';\n\nexport const useContextMenu = () => {\n  const [showContextMenu, setShowContextMenu] = React.useState(false);\n  const [{ x, y }, setCoordinates] = React.useState({ x: 0, y: 0 });\n\n  React.useEffect(() => {\n    const handleClick = () => setShowContextMenu(false);\n    window.addEventListener('click', handleClick);\n    return () => window.removeEventListener('click', handleClick);\n  }, []);\n\n  return { x, y, showContextMenu, setShowContextMenu, setCoordinates };\n};\n","import React from 'react';\nimport { ButtonGroup, HStack, IconButton } from '@chakra-ui/react';\nimport { TbLayoutGrid, TbLayoutList, TbSearch } from 'react-icons/tb';\nimport Input from '../common/Input';\n\ntype Props = {\n  search: string;\n  isOpen: boolean;\n  onOpen: () => void;\n  onClose: () => void;\n  setSearch: (search: string) => void;\n  children?: JSX.Element;\n};\n\nconst FolderTreeViewToggler = ({\n  search,\n  isOpen,\n  setSearch,\n  onOpen,\n  onClose,\n  children,\n}: Props) => {\n  const SearchIcon = <TbSearch />;\n\n  return (\n    <HStack marginLeft=\"auto\">\n      {children}\n      <Input\n        id=\"file-search\"\n        placeholder=\"Search\"\n        colorScheme=\"linkedin\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        inputLeftElement={SearchIcon}\n      />\n      <ButtonGroup spacing=\"1\" padding=\"1\" bgColor=\"white\" borderRadius=\"md\">\n        <IconButton\n          aria-label=\"Use list layout\"\n          colorScheme={isOpen ? 'linkedin' : 'gray'}\n          size=\"sm\"\n          icon={<TbLayoutList />}\n          onClick={onOpen}\n        />\n        <IconButton\n          aria-label=\"Use grid layout\"\n          colorScheme={isOpen ? 'gray' : 'linkedin'}\n          size=\"sm\"\n          onClick={onClose}\n          icon={<TbLayoutGrid />}\n        />\n      </ButtonGroup>\n    </HStack>\n  );\n};\n\nexport default FolderTreeViewToggler;\n","import React from 'react';\nimport { ButtonGroup, IconButton, Menu, MenuButton } from '@chakra-ui/react';\nimport { MdDeleteOutline, MdOutlineMoreVert } from 'react-icons/md';\nimport ContextMenu from './ContextMenu';\nimport { useSelectedFSNodeFile } from '../../context/selected-fs-node-context';\n\nconst SelectFSOptions = () => {\n  const { selectedFSNode } = useSelectedFSNodeFile();\n  const onClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n  };\n\n  return (\n    <ButtonGroup>\n      <IconButton\n        aria-label=\"delete\"\n        variant=\"ghost\"\n        borderRadius=\"full\"\n        icon={<MdDeleteOutline size={24} />}\n        _hover={{ bgColor: 'linkedin.100' }}\n      />\n      <Menu>\n        <MenuButton\n          as={IconButton}\n          aria-label=\"select options\"\n          icon={<MdOutlineMoreVert size={24} />}\n          variant=\"ghost\"\n          borderRadius=\"full\"\n          _hover={{ bgColor: 'linkedin.100' }}\n          onClick={onClick}\n        />\n        <ContextMenu\n          menuType={selectedFSNode?.type || ''}\n          showDeleteOption={false}\n        />\n      </Menu>\n    </ButtonGroup>\n  );\n};\n\nexport default SelectFSOptions;\n","import React from 'react';\nimport { Flex, Heading, SimpleGrid, useDisclosure } from '@chakra-ui/react';\nimport { FSNode } from '../../interfaces/File';\nimport File from '../common/File';\nimport FolderTreeViewToggler from './FolderTreeViewToggler';\nimport { useSelectedFSNodeFile } from '../../context/selected-fs-node-context';\nimport SelectFSOptions from './SelectFSOptions';\n\ninterface Props {\n  heading: string;\n  files: FSNode[];\n  onDoubleClick: (file: FSNode) => void;\n}\n\nconst FolderTree = ({ heading, files, onDoubleClick }: Props) => {\n  const [search, setSearch] = React.useState('');\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { selectedFSNode } = useSelectedFSNodeFile();\n\n  const filterFiles = (files: FSNode[], searchWord: string) => {\n    return files.filter((file) =>\n      file.name.toLowerCase().includes(searchWord.toLowerCase())\n    );\n  };\n\n  const filteredFiles = React.useMemo(\n    () => filterFiles(files, search),\n    [files, search]\n  );\n\n  const renderFiles = filteredFiles.map((file: FSNode) => {\n    const isFolder = file.type === 'folder';\n\n    return (\n      <File\n        key={file.id}\n        file={file}\n        onDoubleClick={isFolder ? onDoubleClick : () => {}}\n      />\n    );\n  });\n\n  return (\n    <>\n      <Flex\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        width=\"100%\"\n        position=\"sticky\"\n        top={0}\n        bgColor=\"white\"\n        paddingX={4}\n        paddingY={4}\n        borderRadius={8}\n        zIndex={100}\n      >\n        <Heading as=\"h4\" size=\"sm\">\n          {heading}\n        </Heading>\n        <FolderTreeViewToggler\n          search={search}\n          isOpen={isOpen}\n          onClose={onClose}\n          onOpen={onOpen}\n          setSearch={setSearch}\n        >\n          {selectedFSNode ? <SelectFSOptions /> : undefined}\n        </FolderTreeViewToggler>\n      </Flex>\n      <SimpleGrid columns={isOpen ? 1 : 2} gap=\"5\" width=\"100%\" px=\"1\" py=\"5\">\n        {renderFiles}\n      </SimpleGrid>\n    </>\n  );\n};\n\nexport default FolderTree;\n","import React from 'react';\nimport { Box } from '@chakra-ui/react';\nimport { useNavigate } from 'react-router-dom';\nimport { FSNode } from '../../interfaces/File';\nimport { recentFiles } from '../../../test_data';\nimport FolderTree from './FolderTree';\nimport { useSelectedFSNodeFile } from '../../context/selected-fs-node-context';\n\nconst FolderFiles = () => {\n  const navigate = useNavigate();\n  const { setSelectedFSNode } = useSelectedFSNodeFile();\n\n  const onClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.stopPropagation();\n    setSelectedFSNode(null);\n  };\n\n  const organizeFoldersToFiles = (files: FSNode[]) => {\n    const files_list: FSNode[] = [];\n    const folders_list: FSNode[] = [];\n    files.forEach((file) => {\n      const isFolder = file.type === 'folder';\n      isFolder ? folders_list.push(file) : files_list.push(file);\n    });\n    return [...folders_list, ...files_list];\n  };\n\n  const files = React.useMemo(\n    () => organizeFoldersToFiles(organizeFoldersToFiles(recentFiles)),\n    []\n  );\n\n  const onDoubleClick = (file: FSNode) => {\n    navigate(`/folder/${file.id}`);\n  };\n\n  return (\n    <Box\n      width=\"full\"\n      height=\"100%\"\n      overflowX=\"hidden\"\n      paddingBottom={20}\n      onClick={onClick}\n    >\n      <FolderTree files={files} heading=\"Files\" onDoubleClick={onDoubleClick} />\n    </Box>\n  );\n};\n\nexport default FolderFiles;\n","import { Icon } from '@chakra-ui/react';\nimport React from 'react';\nimport { TbCloudFog } from 'react-icons/tb';\n\ntype Props = {\n  color?: string;\n  size?: number;\n  strokeWidth?: number;\n};\n\nconst Logo = ({ color = 'linkedin.500', size = 12, ...rest }: Props) => {\n  const height = size;\n  const width = size;\n  return (\n    <Icon\n      as={TbCloudFog}\n      height={height}\n      width={width}\n      color={color}\n      {...rest}\n    />\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { Button, HStack, Text } from '@chakra-ui/react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Logo from '../common/Logo';\nimport { useUser } from '../../context/user-context';\n\nconst menuItems = ['Pricing', 'Docs', 'Blog', 'Support'];\n\nconst NavBar = () => {\n  const { user, setUser } = useUser();\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    setUser(null);\n    navigate('/');\n  };\n\n  return (\n    <HStack\n      justifyContent=\"space-between\"\n      px={5}\n      py={2}\n      bgColor=\"gray.50\"\n      position=\"sticky\"\n      top=\"0\"\n      zIndex=\"1\"\n      onContextMenu={(e) => e.preventDefault()}\n    >\n      <Link to=\"/\">\n        <Logo />\n      </Link>\n      {user ? (\n        <Button colorScheme=\"linkedin\" onClick={handleLogout}>\n          Logout\n        </Button>\n      ) : (\n        <HStack spacing={8}>\n          {menuItems.map((item) => (\n            <Text\n              key={item}\n              _hover={{ borderBottom: '3px solid green', cursor: 'pointer' }}\n            >\n              {item}\n            </Text>\n          ))}\n        </HStack>\n      )}\n    </HStack>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { Box, Center, SimpleGrid } from '@chakra-ui/react';\nimport { Outlet } from 'react-router-dom';\n\nconst AuthRootPage = () => {\n  return (\n    <>\n      <Center>\n        <SimpleGrid\n          columns={2}\n          gap={5}\n          maxW=\"7xl\"\n          w=\"100%\"\n          paddingInline=\"48\"\n          h=\"80vh\"\n        >\n          <Box w=\"100%\" h=\"100%\" bgColor=\"blue.100\"></Box>\n          <Outlet />\n        </SimpleGrid>\n      </Center>\n    </>\n  );\n};\n\nexport default AuthRootPage;\n","import React from 'react';\nimport { IconButton, Menu, MenuButton, MenuList } from '@chakra-ui/react';\nimport { TbPlus } from 'react-icons/tb';\nimport GeneralContextMenu from '../common/GeneralContextMenu';\nimport { useSelectedFSNodeFile } from '../../context/selected-fs-node-context';\n\nconst AddNew = () => {\n  const { setSelectedFSNode } = useSelectedFSNodeFile();\n\n  const onClick = () => {\n    setSelectedFSNode(null);\n  };\n\n  return (\n    <Menu>\n      <MenuButton\n        as={IconButton}\n        colorScheme=\"facebook\"\n        aria-label=\"Add New Folder Or File\"\n        position=\"fixed\"\n        bottom=\"10\"\n        right=\"16\"\n        borderRadius=\"full\"\n        boxShadow=\"xl\"\n        size=\"lg\"\n        icon={<TbPlus />}\n        onClick={onClick}\n      />\n      <MenuList boxShadow=\"lg\">\n        <GeneralContextMenu />\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport default AddNew;\n","import React from 'react';\nimport { Heading } from '@chakra-ui/react';\nimport { Outlet } from 'react-router-dom';\nimport AddNew from './AddNew';\n\nconst FileExplorer = () => {\n  return (\n    <>\n      <Heading as=\"h3\" size=\"md\">\n        My Drive\n      </Heading>\n      <Outlet />\n      <AddNew />\n    </>\n  );\n};\n\nexport default FileExplorer;\n","import React from 'react';\nimport { Flex, Text } from '@chakra-ui/react';\nimport MenuItem from '../../interfaces/Menu';\n\ntype Props = { name: string; onSelect: (name: string) => void; item: MenuItem };\n\nconst SideMenuItem = ({ name, item, onSelect }: Props) => {\n  const isSelected = name === item.value;\n  return (\n    <Flex\n      alignItems=\"center\"\n      gap={5}\n      cursor=\"pointer\"\n      px={5}\n      py={2}\n      bgColor={isSelected ? 'linkedin.100' : ''}\n      color={isSelected ? 'linkedin.600' : ''}\n      borderRadius=\"xl\"\n      fontWeight=\"bold\"\n      _hover={{ bgColor: `${!isSelected && 'blackAlpha.200'}` }}\n      onClick={() => onSelect(item.value)}\n    >\n      {item.icon}\n      <Text fontSize=\"sm\">{item.name}</Text>\n    </Flex>\n  );\n};\n\nexport default SideMenuItem;\n","import React from 'react';\nimport { Progress, Text } from '@chakra-ui/react';\n\nconst StorageStats = () => {\n  const progress = 70;\n  return (\n    <>\n      <Progress\n        borderRadius=\"full\"\n        colorScheme=\"linkedin\"\n        value={progress}\n        size=\"xs\"\n        bgColor=\"blackAlpha.300\"\n      />\n      <Text fontSize=\"xs\" textAlign=\"center\">\n        Usage: {(progress / 100) * 200} GB / 200 GB\n      </Text>\n    </>\n  );\n};\n\nexport default StorageStats;\n","import React from 'react';\nimport { Divider, Flex } from '@chakra-ui/react';\nimport { MdOutlinePeopleAlt } from 'react-icons/md';\nimport { FiHardDrive } from 'react-icons/fi';\nimport MenuItem from '../../interfaces/Menu';\nimport SideMenuItem from '../common/SideMenuItem';\nimport { Link } from 'react-router-dom';\nimport StorageStats from './StorageStats';\n\nconst SideNav = () => {\n  const [name, setName] = React.useState('');\n\n  const handleClick = (name: string) => {\n    setName(name);\n  };\n\n  const sideMenuItems: MenuItem[] = [\n    { route: '/', name: 'My Drive', value: '', icon: <FiHardDrive /> },\n    {\n      route: '/',\n      name: 'Shared with me',\n      value: 'shared-with-me',\n      icon: <MdOutlinePeopleAlt />,\n    },\n  ];\n\n  return (\n    <Flex flexDir=\"column\" gap={2}>\n      {sideMenuItems.map((item) => (\n        <Link to={item.route} key={item.name}>\n          <SideMenuItem item={item} name={name} onSelect={handleClick} />\n        </Link>\n      ))}\n      <Divider marginBottom={10} size=\"100\" borderColor=\"blackAlpha.400\" />\n      <StorageStats />\n    </Flex>\n  );\n};\n\nexport default SideNav;\n","import React from 'react';\nimport { HStack, VStack } from '@chakra-ui/react';\nimport FileExplorer from '../components/compound/FileExplorer';\nimport SideNav from '../components/compound/SideNav';\n\nconst Dashboard = () => {\n  return (\n    <HStack height=\"100vh\" align=\"start\" bgColor=\"whitesmoke\" py={2}>\n      <VStack width=\"18%\" py={4}>\n        <SideNav />\n      </VStack>\n      <VStack\n        width=\"82%\"\n        align=\"start\"\n        height=\"full\"\n        paddingRight=\"10\"\n        overflowY=\"auto\"\n      >\n        <FileExplorer />\n      </VStack>\n    </HStack>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { Center, Heading, Text, VStack } from '@chakra-ui/react';\nimport { useRouteError } from 'react-router-dom';\n\nconst ErrorPage = () => {\n  const error = useRouteError() as { statusText: string; message: string };\n  console.log('error', error);\n\n  return (\n    <Center height=\"100vh\">\n      <VStack>\n        <Heading>Oops!</Heading>\n        <Text>Sorry, an unexpected error has occurred.</Text>\n        <Text>\n          <Text as=\"i\">{error?.statusText || error?.message}</Text>\n        </Text>\n      </VStack>\n    </Center>\n  );\n};\n\nexport default ErrorPage;\n","import {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Text,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = React.useState('');\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    alert({ email });\n  };\n\n  return (\n    <Box as=\"form\" onSubmit={handleSubmit}>\n      <Flex flexDirection=\"column\" gap={4} pt={10}>\n        <Heading size=\"md\" color=\"blackAlpha.900\" fontWeight=\"medium\">\n          Forgot your password?\n        </Heading>\n        <Text fontSize=\"sm\">\n          Enter your email address to reset your password. You may need to check\n          your spam folder.\n        </Text>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Email\n          </FormLabel>\n          <Input name=\"email\" type=\"email\" value={email} onChange={onChange} />\n        </FormControl>\n        <Button type=\"submit\" colorScheme=\"linkedin\" alignSelf=\"flex-end\">\n          Submit\n        </Button>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default ForgotPassword;\n","import { Button, Flex } from '@chakra-ui/react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport ForgotPassword from '../components/compound/forms/ForgotPassword';\n\nconst ForgotPasswordPage = () => {\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex justifyContent=\"space-between\">\n        <Link to=\"/auth/register\">\n          <Button variant=\"link\">Sign up</Button>\n        </Link>\n        <Link to=\"/auth/login\">\n          <Button variant=\"link\">Sign in</Button>\n        </Link>\n      </Flex>\n      <ForgotPassword />\n    </Flex>\n  );\n};\n\nexport default ForgotPasswordPage;\n","import React from 'react';\nimport { Button, Center, Heading, Icon, Text, VStack } from '@chakra-ui/react';\nimport { RiCheckboxCircleFill } from 'react-icons/ri';\nimport { BsDash } from 'react-icons/bs';\n\ntype Props = {\n  selected?: string;\n  isMonthly?: boolean;\n  pricing: {\n    space: string;\n    users: string;\n    name?: string;\n    price?: { monthly: string; yearly: string };\n    hasFileTransferLimit: boolean;\n    isSecure: boolean;\n    canShare: boolean;\n  };\n};\n\ntype HeaderProps = {\n  name?: string;\n  price?: { monthly: string; yearly: string };\n  isMonthly?: boolean;\n};\n\nconst PricingCardHeader = ({ name, price, isMonthly }: HeaderProps) => {\n  return (\n    <VStack spacing={5} py={10}>\n      <Heading size=\"sm\">{name}</Heading>\n      <Heading color=\"linkedin.800\">\n        {isMonthly ? price?.monthly : price?.yearly}\n      </Heading>\n      {name && (\n        <Button colorScheme=\"linkedin\" size=\"sm\">\n          Get Started\n        </Button>\n      )}\n    </VStack>\n  );\n};\n\nconst PricingCard = ({ pricing, selected, isMonthly }: Props) => {\n  const {\n    space,\n    users,\n    hasFileTransferLimit,\n    isSecure,\n    canShare,\n    name,\n    price,\n  } = pricing;\n\n  const isSelected = name === selected;\n\n  return (\n    <VStack\n      py={5}\n      border=\"3px solid\"\n      borderColor={isSelected ? 'linkedin.700' : 'transparent'}\n      textAlign=\"center\"\n      rounded=\"3xl\"\n    >\n      <PricingCardHeader name={name} price={price} isMonthly={isMonthly} />\n      <Center p={5} bgColor=\"linkedin.100\" width=\"100%\">\n        <Text fontSize=\"md\" color=\"blackAlpha.700\">\n          {space}\n        </Text>\n      </Center>\n      <Center p={5} width=\"100%\">\n        <Text fontSize=\"md\" color=\"blackAlpha.700\">\n          {users}\n        </Text>\n      </Center>\n      <Center p={5} bgColor=\"linkedin.100\" width=\"100%\">\n        <Icon\n          as={hasFileTransferLimit ? RiCheckboxCircleFill : BsDash}\n          height=\"8\"\n          width=\"8\"\n          color=\"linkedin.500\"\n        />\n      </Center>\n      <Center p={5} width=\"100%\">\n        <Icon\n          as={isSecure ? RiCheckboxCircleFill : BsDash}\n          height=\"8\"\n          width=\"8\"\n          color=\"linkedin.500\"\n        />\n      </Center>\n      <Center p={5} width=\"100%\" bgColor=\"linkedin.100\">\n        <Icon\n          as={canShare ? RiCheckboxCircleFill : BsDash}\n          height=\"8\"\n          width=\"8\"\n          color=\"linkedin.500\"\n        />\n      </Center>\n    </VStack>\n  );\n};\n\nexport default PricingCard;\n","import React from 'react';\nimport { Heading, Icon, Text, VStack } from '@chakra-ui/react';\nimport { Feature as IFeature } from '../../interfaces/LandingPage';\n\ntype Props = {\n  item: IFeature;\n};\n\nconst Feature = ({ item }: Props) => {\n  return (\n    <VStack\n      borderRadius=\"lg\"\n      border=\"1px solid\"\n      borderColor=\"gray.200\"\n      p={4}\n      mt={4}\n      bgColor=\"white\"\n      gap=\"2\"\n    >\n      <Icon as={item.icon} h=\"10\" w=\"10\" color=\"linkedin.500\" />\n      <Heading fontSize=\"md\" mb={10}>\n        {item.title}\n      </Heading>\n      <Text fontSize={'md'} color=\"blackAlpha.700\" textAlign=\"center\">\n        {item.text}\n      </Text>\n    </VStack>\n  );\n};\n\nexport default Feature;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Box,\n  Center,\n  Heading,\n  SimpleGrid,\n  Text,\n  VStack,\n  Button,\n  ButtonGroup,\n} from '@chakra-ui/react';\nimport { IoMdSync } from 'react-icons/io';\nimport { TbCloudLock } from 'react-icons/tb';\nimport { HiOutlineShare } from 'react-icons/hi';\nimport PricingCard from '../components/compound/PricingCard';\nimport Feature from './Landing.Components/Feature';\n\nconst featuresList = [\n  {\n    icon: IoMdSync,\n    title: 'Store and Sync',\n    text: 'Keep all your files securely stored, up to date and accessible from any device',\n  },\n  {\n    icon: TbCloudLock,\n    title: 'Stay Secure',\n    text: 'Keep your files private with multiple layers of protection from the service trusted by millions',\n  },\n  {\n    icon: HiOutlineShare,\n    title: 'Share',\n    text: 'Quickly send any file-big or small-to anyone',\n  },\n];\n\nconst pricingList = [\n  {\n    name: 'Free',\n    space: '1 GB',\n    users: 'Unlimited',\n    hasFileTransferLimit: false,\n    isSecure: true,\n    canShare: true,\n    price: {\n      monthly: '$0.00',\n      yearly: '$0.00',\n    },\n  },\n  {\n    name: 'Pro Plan',\n    space: '2,000 GB',\n    users: 'Unlimited',\n    hasFileTransferLimit: true,\n    isSecure: true,\n    canShare: true,\n    price: {\n      monthly: '$10.00',\n      yearly: '$100.00',\n    },\n  },\n  {\n    name: 'Enterprise Plan',\n    space: 'As much space as needed',\n    users: 'Unlimited',\n    hasFileTransferLimit: true,\n    isSecure: true,\n    canShare: true,\n    price: {\n      monthly: '$25.00',\n      yearly: '$250.00',\n    },\n  },\n];\n\nconst Landing = () => {\n  const [isMonthly, setIsMonthly] = React.useState(true);\n\n  const selected = 'Pro Plan';\n\n  return (\n    <>\n      <Center>\n        <VStack maxW=\"7xl\" spacing={0}>\n          <SimpleGrid columns={2} gap={10}>\n            <VStack pt={20} spacing=\"5\">\n              <Heading size=\"4xl\" fontWeight=\"normal\" lineHeight=\"shorter\">\n                Easy and secure access to your content\n              </Heading>\n              <Text\n                textAlign=\"justify\"\n                fontSize=\"xl\"\n                color=\"blackAlpha.700\"\n                lineHeight=\"7\"\n                width=\"70%\"\n                alignSelf=\"start\"\n              >\n                Store, share, and collaborate on files and folder from your\n                mobile device, table, or computer\n              </Text>\n              <Box width=\"100%\" py=\"5\">\n                <Link to=\"/auth/login\">\n                  <Button\n                    alignSelf=\"flex-start\"\n                    colorScheme=\"linkedin\"\n                    size=\"lg\"\n                  >\n                    Try Cloud Drive\n                  </Button>\n                </Link>\n              </Box>\n            </VStack>\n            <Box w=\"100%\" h=\"100%\" bgColor=\"blue.100\"></Box>\n          </SimpleGrid>\n          <VStack bgColor=\"gray.50\" py=\"28\" px=\"10\" gap=\"10\">\n            <Heading size=\"xl\" fontWeight=\"bold\">\n              Do more with your files\n            </Heading>\n            <SimpleGrid columns={3} gap={10}>\n              {featuresList.map((item) => (\n                <Feature key={item.title} item={item} />\n              ))}\n            </SimpleGrid>\n          </VStack>\n          <VStack py=\"28\" px=\"10\" spacing=\"10\">\n            <Heading>Find the plan that's right for you</Heading>\n            <ButtonGroup\n              size=\"sm\"\n              variant=\"outline\"\n              p={1}\n              bgColor=\"linkedin.100\"\n              color=\"linkedin.500\"\n              rounded=\"md\"\n              isAttached\n            >\n              <Button\n                color={isMonthly ? 'linkedin.700' : ''}\n                bgColor={isMonthly ? 'white' : ''}\n                onClick={() => setIsMonthly(true)}\n                _hover={{ bgColor: isMonthly ? 'white' : '' }}\n              >\n                Monthly billing\n              </Button>\n              <Button\n                color={isMonthly ? '' : 'linkedin.700'}\n                bgColor={isMonthly ? '' : 'white'}\n                onClick={() => setIsMonthly(false)}\n                _hover={{ bgColor: isMonthly ? '' : 'white' }}\n              >\n                Annual billing\n              </Button>\n            </ButtonGroup>\n            <SimpleGrid columns={3} width=\"100%\">\n              {pricingList.map((item) => (\n                <PricingCard\n                  key={item.name}\n                  pricing={item}\n                  selected={selected}\n                  isMonthly={isMonthly}\n                />\n              ))}\n            </SimpleGrid>\n          </VStack>\n        </VStack>\n      </Center>\n    </>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Text,\n} from '@chakra-ui/react';\nimport { useUser } from '../../../context/user-context';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n  const { setUser } = useUser();\n  const navigate = useNavigate();\n  const [values, setValues] = React.useState({ email: '', password: '' });\n  const [showPassword, setShowPassword] = React.useState(false);\n  const { email, password } = values;\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setValues((prevValues) => ({ ...prevValues, [name]: value }));\n  };\n\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleLoginUser = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('login in');\n    const userData = {\n      id: '1',\n      name: 'John Doe',\n      email: 'johndoe@mail.com',\n      profilePicture: 'https://randomuser.me/api/portraits/',\n    };\n    setUser({ ...userData, email, name: email.split('@')[0] });\n    navigate('/');\n  };\n\n  return (\n    <Box as=\"form\" onSubmit={handleLoginUser}>\n      <Flex flexDir=\"column\" gap={5} pt={10}>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Email address\n          </FormLabel>\n          <Input name=\"email\" type=\"email\" value={email} onChange={onChange} />\n        </FormControl>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Password\n          </FormLabel>\n          <InputGroup>\n            <Input\n              name=\"password\"\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n              onChange={onChange}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={toggleShowPassword}>\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Text\n            cursor=\"pointer\"\n            _hover={{ textDecoration: 'underline', color: 'linkedin' }}\n          >\n            <Link to=\"/auth/forgot_password\">Forgot password?</Link>\n          </Text>\n          <Button colorScheme=\"linkedin\" type=\"submit\">\n            Sign In\n          </Button>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Flex, Heading, Text } from '@chakra-ui/react';\nimport Login from '../components/compound/forms/Login';\nimport { Link } from 'react-router-dom';\n\nconst LoginPage = () => {\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex justifyContent=\"space-between\">\n        <Heading size=\"md\">Sign in</Heading>\n        <Text>\n          or{' '}\n          <Text\n            as=\"span\"\n            color=\"linkedin.700\"\n            _hover={{ textDecoration: 'underline' }}\n          >\n            <Link to=\"/auth/register\">create an account</Link>\n          </Text>\n        </Text>\n      </Flex>\n      <Login />\n    </Flex>\n  );\n};\n\nexport default LoginPage;\n","import {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nconst Register = () => {\n  const [values, setValues] = React.useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    firstName: '',\n    lastName: '',\n  });\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [showConfirmedPassword, setShowConfirmedPassword] =\n    React.useState(false);\n  const { email, password, firstName, lastName, confirmPassword } = values;\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setValues((preValues) => ({ ...preValues, [name]: value }));\n  };\n\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleShowConfirmedPassword = () => {\n    setShowConfirmedPassword(!showConfirmedPassword);\n  };\n\n  return (\n    <Box as=\"form\">\n      <Flex flexDirection=\"column\" gap={5} pt={10}>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            First Name\n          </FormLabel>\n          <Input\n            name=\"firstName\"\n            type=\"text\"\n            value={firstName}\n            onChange={onChange}\n          />\n        </FormControl>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Last Name\n          </FormLabel>\n          <Input\n            name=\"lastName\"\n            type=\"text\"\n            value={lastName}\n            onChange={onChange}\n          />\n        </FormControl>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Email address\n          </FormLabel>\n          <Input name=\"email\" type=\"email\" value={email} onChange={onChange} />\n        </FormControl>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Password\n          </FormLabel>\n          <InputGroup>\n            <Input\n              name=\"password\"\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n              onChange={onChange}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={toggleShowPassword}>\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Confirm Password\n          </FormLabel>\n          <InputGroup>\n            <Input\n              name=\"confirmPassword\"\n              type={showConfirmedPassword ? 'text' : 'password'}\n              value={confirmPassword}\n              onChange={onChange}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button\n                h=\"1.75rem\"\n                size=\"sm\"\n                onClick={toggleShowConfirmedPassword}\n              >\n                {showConfirmedPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n        <Button colorScheme=\"linkedin\">Create an account</Button>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Register;\n","import React from 'react';\nimport { Flex, Heading, Text } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\nimport Register from '../components/compound/forms/Register';\n\nconst RegisterPage = () => {\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex justifyContent=\"space-between\">\n        <Heading size=\"md\">Sign up</Heading>\n        <Text>\n          or{' '}\n          <Text\n            as=\"span\"\n            color=\"linkedin.700\"\n            _hover={{ textDecoration: 'underline' }}\n          >\n            <Link to=\"/auth/login\">login</Link>\n          </Text>\n        </Text>\n      </Flex>\n      <Register />\n    </Flex>\n  );\n};\n\nexport default RegisterPage;\n","import { createBrowserRouter, Outlet } from 'react-router-dom';\nimport FullScreen from '../components/common/FullScreen';\nimport FolderFiles from '../components/compound/FolderFiles';\nimport NavBar from '../components/compound/NavBar';\nimport AuthRootPage from '../pages/AuthRootPage';\nimport Dashboard from '../pages/Dashboard';\nimport ErrorPage from '../pages/ErrorPage';\nimport ForgotPasswordPage from '../pages/ForgotPasswordPage';\nimport Landing from '../pages/Landing';\nimport LoginPage from '../pages/LoginPage';\nimport RegisterPage from '../pages/RegisterPage';\n\nexport const unauthenticatedRoutes = createBrowserRouter([\n  {\n    path: '/',\n    element: (\n      <>\n        <NavBar />\n        <Outlet />\n      </>\n    ),\n    errorElement: <ErrorPage />,\n    children: [\n      { path: '', element: <Landing /> },\n      {\n        path: 'auth',\n        element: <AuthRootPage />,\n        children: [\n          { path: 'login', element: <LoginPage /> },\n          { path: 'register', element: <RegisterPage /> },\n          { path: 'forgot_password', element: <ForgotPasswordPage /> },\n        ],\n      },\n    ],\n  },\n]);\n\nexport const authenticatedRoutes = createBrowserRouter([\n  {\n    path: '/',\n    element: (\n      <FullScreen>\n        <NavBar />\n        <Outlet />\n      </FullScreen>\n    ),\n    errorElement: <ErrorPage />,\n    children: [\n      {\n        path: '',\n        element: <Dashboard />,\n        children: [\n          { path: '', element: <FolderFiles /> },\n          { path: 'folder/:folderId', element: <FolderFiles /> },\n        ],\n      },\n    ],\n  },\n]);\n"],"names":["children","height","overflow","recentFiles","id","name","size","updatedAt","createdAt","createdBy","ownedBy","parentFolder","path","type","label","isInvalid","isDisabled","isRequired","helperText","inputRightElement","inputLeftElement","rest","htmlFor","onClose","FILE_NAME","selectedFSNode","useSelectedFSNodeFile","React","fileName","setFileName","folderId","useParams","onSubmit","e","preventDefault","values","alert","JSON","stringify","px","py","value","placeholder","borderRadius","onChange","target","alignSelf","onClick","colorScheme","length","leftIcon","isOpen","isCentered","useDisclosure","onOpen","icon","toLowerCase","fontWeight","onCloseModal","overflowY","justifyContent","width","variant","showDeleteOption","isDeleteOpen","onDeleteOpen","onDeleteClose","isMoveOpen","onMoveOpen","onMoveClose","stopPropagation","menuType","x","y","child","top","left","boxShadow","file","onDoubleClick","setSelectedFSNode","showContextMenu","setShowContextMenu","setCoordinates","handleClick","window","addEventListener","removeEventListener","useContextMenu","isFolder","isSelected","backgroundColor","backgroundColorOnHover","alignItems","cursor","_hover","onContextMenu","pageX","pageY","position","strokeWidth","fill","color","align","spacing","fontSize","gap","search","setSearch","SearchIcon","marginLeft","padding","bgColor","as","IconButton","heading","files","filteredFiles","searchWord","filter","includes","filterFiles","renderFiles","map","paddingX","paddingY","zIndex","undefined","columns","navigate","useNavigate","organizeFoldersToFiles","files_list","folders_list","forEach","push","overflowX","paddingBottom","TbCloudFog","menuItems","useUser","user","setUser","to","item","borderBottom","maxW","w","paddingInline","h","bottom","right","onSelect","textAlign","progress","setName","sideMenuItems","route","flexDir","marginBottom","borderColor","paddingRight","error","useRouteError","console","log","statusText","message","email","setEmail","flexDirection","pt","PricingCardHeader","price","isMonthly","monthly","yearly","pricing","selected","space","users","hasFileTransferLimit","isSecure","canShare","border","rounded","p","RiCheckboxCircleFill","BsDash","mt","mb","title","text","featuresList","IoMdSync","TbCloudLock","HiOutlineShare","pricingList","setIsMonthly","lineHeight","isAttached","password","setValues","showPassword","setShowPassword","prevValues","profilePicture","split","textDecoration","confirmPassword","firstName","lastName","showConfirmedPassword","setShowConfirmedPassword","preValues","unauthenticatedRoutes","createBrowserRouter","element","errorElement","authenticatedRoutes"],"sourceRoot":""}