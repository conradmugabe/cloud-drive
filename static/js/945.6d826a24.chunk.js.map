{"version":3,"file":"static/js/945.6d826a24.chunk.js","mappings":"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","sources":["components/compound/StorageStats.tsx","components/common/Input.tsx","components/common/File.tsx","components/compound/FolderTree.tsx","components/compound/RecentFiles.tsx","test_data.ts","components/compound/FolderFiles.tsx","components/common/Modal.tsx","components/compound/forms/CreateFolder.tsx","components/compound/forms/UploadFile.tsx","components/compound/CreateFolderOrUploadFile.tsx","components/compound/FileExplorer.tsx","components/common/SideMenuItem.tsx","components/compound/SideNav.tsx","AuthenticatedApp.tsx","components/common/Logo.tsx","components/compound/NavBar.tsx"],"sourcesContent":["import React from 'react';\nimport { Box, Flex, Text } from '@chakra-ui/react';\n\nconst StorageStats = () => {\n  const progress = 75;\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      gap=\"5\"\n      px=\"5\"\n      py=\"10\"\n      bgColor=\"white\"\n      borderRadius=\"xl\"\n    >\n      <Box height=\"3\" width=\"20rem\" bgColor=\"linkedin.100\" borderRadius=\"full\">\n        <Box\n          height=\"3\"\n          bgColor=\"linkedin.500\"\n          width={progress / 100}\n          borderRadius=\"full\"\n        ></Box>\n      </Box>\n      <Text fontWeight=\"bold\" fontSize=\"sm\">\n        Usage: {(75 / 100) * 200} GB / 200 GB\n      </Text>\n    </Flex>\n  );\n};\n\nexport default StorageStats;\n","import React from 'react';\nimport {\n  Input as ChakraInput,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  InputProps,\n  InputGroup,\n  InputRightElement,\n  InputLeftElement,\n} from '@chakra-ui/react';\n\ninterface Props extends InputProps {\n  id: string;\n  isInvalid?: boolean;\n  isDisabled?: boolean;\n  isRequired?: boolean;\n  label?: string;\n  helperText?: string;\n  inputRightElement?: React.ReactNode;\n  inputLeftElement?: React.ReactNode;\n}\n\nconst Input = ({\n  label,\n  id,\n  isInvalid,\n  isDisabled,\n  isRequired,\n  helperText,\n  inputRightElement,\n  inputLeftElement,\n  ...rest\n}: Props) => {\n  return (\n    <FormControl\n      isInvalid={isInvalid}\n      isDisabled={isDisabled}\n      isRequired={isRequired}\n    >\n      {label && <FormLabel htmlFor={id}>{label}</FormLabel>}\n      <InputGroup>\n        {inputLeftElement && (\n          <InputLeftElement>{inputLeftElement}</InputLeftElement>\n        )}\n        <ChakraInput {...rest} id={id} />\n        {inputRightElement && (\n          <InputRightElement>{inputRightElement}</InputRightElement>\n        )}\n      </InputGroup>\n      {helperText && <FormHelperText>{helperText}</FormHelperText>}\n    </FormControl>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { Flex, HStack, Text, VStack } from '@chakra-ui/react';\nimport { File as IFile } from '../../interfaces/File';\nimport { TbFolder, TbFile } from 'react-icons/tb';\n\ninterface Props {\n  file: IFile;\n  onDoubleClick: (file: IFile) => void;\n}\n\nconst File = ({ file, onDoubleClick }: Props) => {\n  return (\n    <Flex\n      bgColor=\"white\"\n      py=\"2.5\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      px=\"5\"\n      cursor=\"pointer\"\n      borderRadius=\"lg\"\n      _hover={{ boxShadow: 'md' }}\n      onDoubleClick={() => onDoubleClick(file)}\n    >\n      <HStack>\n        {file.isFolder ? (\n          <TbFolder strokeWidth={1} size={30} fill=\"red\" color=\"red\" />\n        ) : (\n          <TbFile strokeWidth={1} size={30} fill=\"red\" color=\"red\" />\n        )}\n        <VStack align=\"start\" spacing=\"0\">\n          <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"blackAlpha.800\">\n            {file.name}\n          </Text>\n          {!file.isFolder && (\n            <Text fontSize=\"small\" color=\"blackAlpha.600\">\n              {file.fileType} / {file.size}\n            </Text>\n          )}\n        </VStack>\n      </HStack>\n      <Text fontSize=\"sm\" color=\"blackAlpha.600\">\n        {file.lastModified}\n      </Text>\n    </Flex>\n  );\n};\n\nexport default File;\n","import React, { useMemo } from 'react';\nimport {\n  ButtonGroup,\n  Flex,\n  Heading,\n  HStack,\n  IconButton,\n  SimpleGrid,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { TbLayoutGrid, TbLayoutList, TbSearch } from 'react-icons/tb';\nimport Input from '../common/Input';\nimport { File as IFile } from '../../interfaces/File';\nimport File from '../common/File';\n\ninterface Props {\n  heading: string;\n  showSearchBar?: boolean;\n  files: IFile[];\n  onDoubleClick: (file: IFile) => void;\n}\n\nconst FolderTree = ({\n  heading,\n  files,\n  onDoubleClick,\n  showSearchBar = true,\n}: Props) => {\n  const [search, setSearch] = React.useState('');\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const SearchIcon = <TbSearch />;\n\n  const filterFiles = (files: IFile[], searchWord: string) => {\n    return files.filter((file) =>\n      file.name.toLowerCase().includes(searchWord.toLowerCase())\n    );\n  };\n\n  const filteredFiles = useMemo(\n    () => filterFiles(files, search),\n    [files, search]\n  );\n\n  const renderFiles = filteredFiles.map((file) => (\n    <File key={file.id} file={file} onDoubleClick={onDoubleClick} />\n  ));\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\n        <Heading as=\"h4\" size=\"sm\">\n          {heading}\n        </Heading>\n        {showSearchBar && (\n          <HStack marginLeft=\"auto\">\n            <Input\n              id=\"file-search\"\n              placeholder=\"Search\"\n              colorScheme='linkedin'\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n              inputLeftElement={SearchIcon}\n            />\n            <ButtonGroup\n              spacing=\"1\"\n              padding=\"1\"\n              bgColor=\"white\"\n              borderRadius=\"md\"\n            >\n              <IconButton\n                aria-label=\"Use list layout\"\n                colorScheme={isOpen ? 'linkedin' : 'gray'}\n                size=\"sm\"\n                icon={<TbLayoutList />}\n                onClick={onOpen}\n              />\n              <IconButton\n                aria-label=\"Use grid layout\"\n                colorScheme={isOpen ? 'gray' : 'linkedin'}\n                size=\"sm\"\n                onClick={onClose}\n                icon={<TbLayoutGrid />}\n              />\n            </ButtonGroup>\n          </HStack>\n        )}\n      </Flex>\n      <SimpleGrid columns={isOpen ? 1 : 2} gap=\"5\" width=\"100%\" px=\"1\" py=\"5\">\n        {renderFiles}\n      </SimpleGrid>\n    </>\n  );\n};\n\nexport default FolderTree;\n","import React from 'react';\nimport { File as IFile } from '../../interfaces/File';\nimport FolderTree from './FolderTree';\n\nconst RecentFiles = () => {\n  const recentFiles: IFile[] = [\n    {\n      id: '1',\n      name: 'End of year report 2020',\n      isFolder: false,\n      size: 150000,\n      lastModified: '2020-01-01',\n      fileType: '.pdf',\n    },\n    {\n      id: '2',\n      name: 'End of year report 2019',\n      isFolder: false,\n      size: 150000,\n      lastModified: '2019-01-01',\n      fileType: '.pdf',\n    },\n    {\n      id: '3',\n      name: 'End of year report 2019',\n      isFolder: false,\n      size: 150000,\n      lastModified: '2019-01-01',\n      fileType: '.txt',\n    },\n    {\n      id: '4',\n      name: 'Moments 2020',\n      isFolder: false,\n      size: 30000000,\n      lastModified: '2019-01-01',\n      fileType: '.mkv',\n    },\n  ];\n\n  return (\n    <FolderTree\n      onDoubleClick={(file) => alert('file: ' + file.id)}\n      files={recentFiles}\n      heading=\"Recent Files\"\n      showSearchBar={false}\n    />\n  );\n};\n\nexport default RecentFiles;\n","import { File } from './interfaces/File';\n\nexport const recentFiles: File[] = [\n  {\n    id: '1',\n    name: 'End of year report 2020',\n    isFolder: false,\n    size: 150000,\n    lastModified: '2020-01-01',\n    fileType: '.pdf',\n  },\n  {\n    id: '2',\n    name: 'End of year report 2019',\n    isFolder: false,\n    size: 150000,\n    lastModified: '2019-01-01',\n    fileType: '.pdf',\n  },\n  {\n    id: '3',\n    name: 'End of year report 2019',\n    isFolder: false,\n    size: 150000,\n    lastModified: '2019-01-01',\n    fileType: '.txt',\n  },\n  {\n    id: '4',\n    name: 'Moments 2020',\n    isFolder: true,\n    size: 30000000,\n    lastModified: '2019-01-01',\n    fileType: '.mkv',\n  },\n];\n","import { useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { File } from '../../interfaces/File';\nimport { recentFiles } from '../../test_data';\nimport FolderTree from './FolderTree';\n\nconst FolderFiles = () => {\n  const navigate = useNavigate();\n  // const { folderId } = useParams();\n\n  // fetch files from folder (folderId)\n\n  const organizeFoldersToFiles = (files: File[]) => {\n    const files_list: File[] = [];\n    const folders_list: File[] = [];\n    files.forEach((file) => {\n      file.isFolder ? folders_list.push(file) : files_list.push(file);\n    });\n    return [...folders_list, ...files_list];\n  };\n\n  const files = useMemo(\n    () => organizeFoldersToFiles(organizeFoldersToFiles(recentFiles)),\n    []\n  );\n\n  const onDoubleClick = (file: File) => {\n    navigate(`/folder/${file.id}`);\n  };\n\n  return (\n    <FolderTree files={files} heading=\"Files\" onDoubleClick={onDoubleClick} />\n  );\n};\n\nexport default FolderFiles;\n","import React from 'react';\nimport {\n  Modal as ChakraModal,\n  ModalOverlay,\n  ModalProps,\n  ModalContent\n} from '@chakra-ui/react';\n\ninterface Props extends ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n}\n\nconst Modal = ({ isOpen, onClose, children }: Props) => {\n  return (\n    <ChakraModal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>{children}</ModalContent>\n    </ChakraModal>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Button, ButtonGroup, Flex } from '@chakra-ui/react';\nimport { TbFolderPlus } from 'react-icons/tb';\nimport Input from '../../common/Input';\nimport { useParams } from 'react-router-dom';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst CreateFolder = ({ onClose }: Props) => {\n  const FILE_NAME = 'fileName';\n  const HELPER_TEXT = 'Cannot have the same file name in same directory';\n  const [fileName, setFileName] = React.useState('');\n  const { folderId } = useParams();\n\n  const handleCreateFolder = () => {\n    console.log(folderId);\n    const values = { folderId, fileName };\n    alert(JSON.stringify(values, null, 2));\n  };\n\n  return (\n    <Flex\n      bgColor=\"whiteAlpha.900\"\n      py=\"5\"\n      px=\"2\"\n      borderRadius=\"full\"\n      flexDirection=\"column\"\n      gap=\"8\"\n    >\n      <Input\n        id={FILE_NAME}\n        name={FILE_NAME}\n        value={fileName}\n        helperText={HELPER_TEXT}\n        placeholder=\"File Name\"\n        borderRadius=\"lg\"\n        onChange={(e) => setFileName(e.target.value)}\n      />\n      <ButtonGroup alignSelf=\"flex-end\">\n        <Button size=\"sm\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          size=\"sm\"\n          colorScheme=\"green\"\n          onClick={handleCreateFolder}\n          leftIcon={<TbFolderPlus />}\n        >\n          Create Folder\n        </Button>\n      </ButtonGroup>\n    </Flex>\n  );\n};\n\nexport default CreateFolder;\n","import React from 'react';\nimport { Box, Text, Flex, ButtonGroup, Button } from '@chakra-ui/react';\nimport { TbFileUpload } from 'react-icons/tb';\nimport Dropzone from 'react-dropzone';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst UploadFile = ({ onClose }: Props) => {\n  const handleFileUpload = () => {\n    console.log('uploading file');\n  };\n\n  return (\n    <Flex\n      bgColor=\"whiteAlpha.900\"\n      py=\"5\"\n      px=\"2\"\n      borderRadius=\"full\"\n      flexDirection=\"column\"\n      gap=\"8\"\n    >\n      <Dropzone onDrop={(acceptedFiles) => console.log(acceptedFiles)}>\n        {({ getRootProps, getInputProps }) => (\n          <Box>\n            <Flex\n              height=\"200px\"\n              borderWidth=\"1px\"\n              borderStyle=\"dashed\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              cursor=\"pointer\"\n              gap={4}\n              {...getRootProps()}\n            >\n              <input {...getInputProps()} />\n              <Text>Drag and drop some file here</Text>\n              <Text>Or</Text>\n              <Text>Click to select file</Text>\n            </Flex>\n          </Box>\n        )}\n      </Dropzone>\n      <ButtonGroup alignSelf=\"flex-end\">\n        <Button size=\"sm\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          size=\"sm\"\n          colorScheme=\"green\"\n          onClick={handleFileUpload}\n          leftIcon={<TbFileUpload />}\n        >\n          Upload File\n        </Button>\n      </ButtonGroup>\n    </Flex>\n  );\n};\n\nexport default UploadFile;\n","import React from 'react';\nimport { Tab, TabList, TabPanel, TabPanels, Tabs } from '@chakra-ui/react';\nimport CreateFolder from './forms/CreateFolder';\nimport UploadFile from './forms/UploadFile';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst CreateFolderOrUploadFile = ({ onClose }: Props) => {\n  return (\n    <Tabs isFitted variant=\"enclosed-colored\" pt=\"1\">\n      <TabList>\n        <Tab>Create Folder</Tab>\n        <Tab>Upload File</Tab>\n      </TabList>\n      <TabPanels>\n        <TabPanel>\n          <CreateFolder onClose={onClose} />\n        </TabPanel>\n        <TabPanel>\n          <UploadFile onClose={onClose} />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n};\n\nexport default CreateFolderOrUploadFile;\n","import React from 'react';\nimport { Heading, IconButton, useDisclosure, VStack } from '@chakra-ui/react';\nimport StorageStats from './StorageStats';\nimport RecentFiles from './RecentFiles';\nimport FolderFiles from './FolderFiles';\nimport { TbPlus } from 'react-icons/tb';\nimport Modal from '../common/Modal';\nimport CreateFolderOrUploadFile from './CreateFolderOrUploadFile';\n\nconst FileExplorer = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <VStack\n        width=\"80%\"\n        align=\"start\"\n        position=\"relative\"\n        height=\"full\"\n        paddingRight=\"10\"\n        overflowY=\"auto\"\n      >\n        <Heading as=\"h3\" size=\"md\">\n          My Drive\n        </Heading>\n        <StorageStats />\n        <RecentFiles />\n        <FolderFiles />\n        <IconButton\n          colorScheme=\"facebook\"\n          aria-label=\"Create Folder\"\n          position=\"fixed\"\n          bottom=\"10\"\n          right=\"16\"\n          borderRadius=\"full\"\n          boxShadow=\"xl\"\n          size=\"lg\"\n          icon={<TbPlus />}\n          onClick={onOpen}\n        />\n      </VStack>\n      <Modal isOpen={isOpen} onClose={onClose} size=\"md\">\n        <CreateFolderOrUploadFile onClose={onClose} />\n      </Modal>\n    </>\n  );\n};\n\nexport default FileExplorer;\n","import React from 'react';\nimport { Flex, Text } from '@chakra-ui/react';\nimport MenuItem from '../../interfaces/Menu';\n\ntype Props = { name: string; onSelect: (name: string) => void; item: MenuItem };\n\nconst SideMenuItem = ({ name, item, onSelect }: Props) => {\n  return (\n    <Flex\n      alignItems=\"center\"\n      gap={5}\n      cursor=\"pointer\"\n      px={5}\n      py={2}\n      bgColor={name === item.name ? 'linkedin.100' : ''}\n      color={name === item.name ? 'linkedin.600' : ''}\n      borderRadius=\"xl\"\n      fontWeight=\"bold\"\n      _hover={{ color: 'linkedin.600', bgColor: 'linkedin.100' }}\n      onClick={() => onSelect(item.name)}\n    >\n      {item.icon}\n      <Text fontSize=\"sm\">{item.name}</Text>\n    </Flex>\n  );\n};\n\nexport default SideMenuItem;\n","import React from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport { MdOutlinePeopleAlt } from 'react-icons/md';\nimport { FiHardDrive } from 'react-icons/fi';\nimport MenuItem from '../../interfaces/Menu';\nimport SideMenuItem from '../common/SideMenuItem';\n\nconst SideNav = () => {\n  const [name, setName] = React.useState('');\n\n  const handleClick = (name: string) => {\n    setName(name);\n  };\n\n  const sideMenuItems: MenuItem[] = [\n    { name: 'My Drive', icon: <FiHardDrive /> },\n    { name: 'Shared with me', icon: <MdOutlinePeopleAlt /> },\n  ];\n\n  return (\n    <Flex flexDir=\"column\" gap={2}>\n      {sideMenuItems.map((item) => (\n        <SideMenuItem\n          key={item.name}\n          item={item}\n          name={name}\n          onSelect={handleClick}\n        />\n      ))}\n    </Flex>\n  );\n};\n\nexport default SideNav;\n","import React from 'react';\nimport { Box, HStack, VStack } from '@chakra-ui/react';\nimport FileExplorer from './components/compound/FileExplorer';\nimport SideNav from './components/compound/SideNav';\nimport NavBar from './components/compound/NavBar';\n\nconst AuthenticatedApp = () => {\n  return (\n    <>\n      <NavBar />\n      <Box\n        height=\"100vh\"\n        width=\"100%\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        overflow=\"hidden\"\n      >\n        <HStack\n          height=\"100vh\"\n          align=\"start\"\n          maxWidth=\"1400px\"\n          width=\"100%\"\n          bgColor=\"whitesmoke\"\n          py={4}\n        >\n          <VStack width=\"20%\" py={4}>\n            <SideNav />\n          </VStack>\n          <FileExplorer />\n        </HStack>\n      </Box>\n    </>\n  );\n};\n\nexport default AuthenticatedApp;\n","import { Icon } from '@chakra-ui/react';\nimport React from 'react';\nimport { TbCloudFog } from 'react-icons/tb';\n\ntype Props = {\n  color?: string;\n  size?: number;\n  strokeWidth?: number;\n};\n\nconst Logo = ({ color = 'linkedin.500', size = 12, ...rest }: Props) => {\n  const height = size;\n  const width = size;\n  return (\n    <Icon\n      as={TbCloudFog}\n      height={height}\n      width={width}\n      color={color}\n      {...rest}\n    />\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { Button, HStack, Text } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\nimport Logo from '../common/Logo';\nimport { useUser } from '../../context/user-context';\n\nconst menuItems = ['Pricing', 'Docs', 'Blog', 'Support'];\n\nconst NavBar = () => {\n  const user = useUser();\n\n  return (\n    <HStack justifyContent=\"space-between\" px={5} py={2} bgColor=\"gray.50\">\n      <Link to=\"/\">\n        <Logo />\n      </Link>\n      {user?.user ? (\n        <Button colorScheme=\"linkedin\" onClick={() => user.setUser(null)}>\n          Logout\n        </Button>\n      ) : (\n        <HStack spacing={8}>\n          {menuItems.map((item) => (\n            <Text\n              _hover={{ borderBottom: '3px solid green', cursor: 'pointer' }}\n            >\n              {item}\n            </Text>\n          ))}\n        </HStack>\n      )}\n    </HStack>\n  );\n};\n\nexport default NavBar;\n"],"names":["flexDirection","gap","px","py","bgColor","borderRadius","height","width","progress","fontWeight","fontSize","label","id","isInvalid","isDisabled","isRequired","helperText","inputRightElement","inputLeftElement","rest","htmlFor","file","onDoubleClick","alignItems","justifyContent","cursor","_hover","boxShadow","isFolder","strokeWidth","size","fill","color","align","spacing","name","fileType","lastModified","heading","files","showSearchBar","React","search","setSearch","useDisclosure","isOpen","onOpen","onClose","SearchIcon","filteredFiles","useMemo","searchWord","filter","toLowerCase","includes","filterFiles","renderFiles","map","as","marginLeft","placeholder","colorScheme","value","onChange","e","target","padding","icon","onClick","columns","alert","recentFiles","navigate","useNavigate","organizeFoldersToFiles","files_list","folders_list","forEach","push","children","FILE_NAME","fileName","setFileName","folderId","useParams","alignSelf","console","log","values","JSON","stringify","leftIcon","onDrop","acceptedFiles","getRootProps","getInputProps","borderWidth","borderStyle","isFitted","variant","pt","position","paddingRight","overflowY","bottom","right","item","onSelect","setName","handleClick","sideMenuItems","flexDir","NavBar","display","overflow","maxWidth","TbCloudFog","menuItems","user","useUser","to","setUser","borderBottom"],"sourceRoot":""}