{"version":3,"file":"static/js/978.03590401.chunk.js","mappings":"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","sources":["components/compound/Footer.tsx","components/compound/PricingCard.tsx","pages/Landing.tsx","components/compound/forms/Login.tsx","pages/LoginPage.tsx","UnauthenticatedApp.tsx","components/common/Logo.tsx","components/compound/NavBar.tsx"],"sourcesContent":["import React from 'react';\nimport { Center, HStack, Text } from '@chakra-ui/react';\nimport Logo from '../common/Logo';\n\nconst Footer = () => {\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <Center width=\"100%\" bgColor=\"gray.50\" py=\"6\">\n      <HStack\n        px={5}\n        py={2}\n        spacing={10}\n        maxW=\"7xl\"\n        width=\"100%\"\n        justifyContent=\"space-between\"\n      >\n        <HStack spacing={5}>\n          <Logo color=\"blackAlpha.600\" />\n          <Text color=\"blackAlpha.600\">Cloud Drive &copy; {currentYear}</Text>\n        </HStack>\n        <HStack spacing={5}>\n          <Text color=\"blackAlpha.600\" fontSize=\"xl\">\n            Privacy\n          </Text>\n          <Text color=\"blackAlpha.600\" fontSize=\"xl\">\n            Terms\n          </Text>\n        </HStack>\n      </HStack>\n    </Center>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Button, Center, Heading, Icon, Text, VStack } from '@chakra-ui/react';\nimport { RiCheckboxCircleFill } from 'react-icons/ri';\nimport { BsDash } from 'react-icons/bs';\n\ntype Props = {\n  selected?: string;\n  isMonthly?: boolean;\n  pricing: {\n    space: string;\n    users: string;\n    name?: string;\n    price?: { monthly: string; yearly: string };\n    hasFileTransferLimit: boolean;\n    isSecure: boolean;\n    canShare: boolean;\n  };\n};\n\ntype HeaderProps = {\n  name?: string;\n  price?: { monthly: string; yearly: string };\n  isMonthly?: boolean;\n};\n\nconst PricingCardHeader = ({ name, price, isMonthly }: HeaderProps) => {\n  return (\n    <VStack spacing={5} py={10}>\n      <Heading size=\"sm\">{name}</Heading>\n      <Heading color=\"linkedin.800\">\n        {isMonthly ? price?.monthly : price?.yearly}\n      </Heading>\n      {name && (\n        <Button colorScheme=\"linkedin\" size=\"sm\">\n          Get Started\n        </Button>\n      )}\n    </VStack>\n  );\n};\n\nconst PricingCard = ({ pricing, selected, isMonthly }: Props) => {\n  const {\n    space,\n    users,\n    hasFileTransferLimit,\n    isSecure,\n    canShare,\n    name,\n    price,\n  } = pricing;\n\n  const isSelected = name === selected;\n\n  return (\n    <VStack\n      py={5}\n      border=\"3px solid\"\n      borderColor={isSelected ? 'linkedin.700' : 'transparent'}\n      textAlign=\"center\"\n      rounded=\"3xl\"\n    >\n      <PricingCardHeader name={name} price={price} isMonthly={isMonthly} />\n      <Center p={5} bgColor=\"linkedin.100\" width=\"100%\">\n        <Text fontSize=\"md\" color=\"blackAlpha.700\">\n          {space}\n        </Text>\n      </Center>\n      <Center p={5} width=\"100%\">\n        <Text fontSize=\"md\" color=\"blackAlpha.700\">\n          {users}\n        </Text>\n      </Center>\n      <Center p={5} bgColor=\"linkedin.100\" width=\"100%\">\n        <Icon\n          as={hasFileTransferLimit ? RiCheckboxCircleFill : BsDash}\n          height=\"8\"\n          width=\"8\"\n          color=\"linkedin.500\"\n        />\n      </Center>\n      <Center p={5} width=\"100%\">\n        <Icon\n          as={isSecure ? RiCheckboxCircleFill : BsDash}\n          height=\"8\"\n          width=\"8\"\n          color=\"linkedin.500\"\n        />\n      </Center>\n      <Center p={5} width=\"100%\" bgColor=\"linkedin.100\">\n        <Icon\n          as={canShare ? RiCheckboxCircleFill : BsDash}\n          height=\"8\"\n          width=\"8\"\n          color=\"linkedin.500\"\n        />\n      </Center>\n    </VStack>\n  );\n};\n\nexport default PricingCard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Box,\n  Center,\n  Heading,\n  SimpleGrid,\n  Text,\n  VStack,\n  Button,\n  Icon,\n  ButtonGroup,\n} from '@chakra-ui/react';\nimport { IoMdSync } from 'react-icons/io';\nimport { TbCloudLock } from 'react-icons/tb';\nimport { HiOutlineShare } from 'react-icons/hi';\nimport PricingCard from '../components/compound/PricingCard';\n\nconst featuresList = [\n  {\n    icon: IoMdSync,\n    title: 'Store and Sync',\n    text: 'Keep all your files securely stored, up to date and accessible from any device',\n  },\n  {\n    icon: TbCloudLock,\n    title: 'Stay Secure',\n    text: 'Keep your files private with multiple layers of protection from the service trusted by millions',\n  },\n  {\n    icon: HiOutlineShare,\n    title: 'Share',\n    text: 'Quickly send any file-big or small-to anyone',\n  },\n];\n\nconst pricingList = [\n  {\n    name: 'Free',\n    space: '1 GB',\n    users: 'Unlimited',\n    hasFileTransferLimit: false,\n    isSecure: true,\n    canShare: true,\n    price: {\n      monthly: '$0.00',\n      yearly: '$0.00',\n    },\n  },\n  {\n    name: 'Pro Plan',\n    space: '2,000 GB',\n    users: 'Unlimited',\n    hasFileTransferLimit: true,\n    isSecure: true,\n    canShare: true,\n    price: {\n      monthly: '$10.00',\n      yearly: '$100.00',\n    },\n  },\n  {\n    name: 'Enterprise Plan',\n    space: 'As much space as needed',\n    users: 'Unlimited',\n    hasFileTransferLimit: true,\n    isSecure: true,\n    canShare: true,\n    price: {\n      monthly: '$25.00',\n      yearly: '$250.00',\n    },\n  },\n];\n\nconst Landing = () => {\n  const [isMonthly, setIsMonthly] = React.useState(true);\n\n  const selected = 'Pro Plan';\n\n  return (\n    <>\n      <Center>\n        <VStack maxW=\"7xl\" spacing={0}>\n          <SimpleGrid columns={2} gap={10}>\n            <VStack pt={20}>\n              <Heading size=\"3xl\" fontWeight=\"thin\" lineHeight=\"shorter\">\n                Easy and secure access to your content\n              </Heading>\n              <Text textAlign=\"justify\" fontSize={'xl'} color=\"blackAlpha.600\">\n                Store, share, and collaborate on files and folder from your\n                mobile device, table, or computer\n              </Text>\n              <Box width=\"100%\" py=\"10\">\n                <Link to=\"login\">\n                  <Button alignSelf=\"flex-start\" colorScheme=\"linkedin\">\n                    Try Cloud Drive\n                  </Button>\n                </Link>\n              </Box>\n            </VStack>\n            <Box w=\"100%\" h=\"100%\" bgColor=\"blue.100\"></Box>\n          </SimpleGrid>\n          <VStack bgColor=\"gray.50\" py=\"28\" px=\"10\" gap=\"10\">\n            <Heading size=\"xl\" fontWeight=\"bold\">\n              Do more with your files\n            </Heading>\n            <SimpleGrid columns={3} gap={10}>\n              {featuresList.map((item) => (\n                <VStack\n                  borderRadius=\"lg\"\n                  border=\"1px solid\"\n                  borderColor=\"gray.200\"\n                  p={4}\n                  mt={4}\n                  bgColor=\"white\"\n                  gap=\"2\"\n                >\n                  <Icon as={item.icon} h=\"10\" w=\"10\" color=\"linkedin.500\" />\n                  <Heading fontSize=\"md\" mb={10}>\n                    {item.title}\n                  </Heading>\n                  <Text\n                    fontSize={'md'}\n                    color=\"blackAlpha.700\"\n                    textAlign=\"center\"\n                  >\n                    {item.text}\n                  </Text>\n                </VStack>\n              ))}\n            </SimpleGrid>\n          </VStack>\n          <VStack py=\"28\" px=\"10\" spacing=\"10\">\n            <Heading>Find the plan that's right for you</Heading>\n            <ButtonGroup\n              size=\"sm\"\n              variant=\"outline\"\n              p={1}\n              bgColor=\"linkedin.100\"\n              color=\"linkedin.500\"\n              rounded=\"md\"\n              isAttached\n            >\n              <Button\n                color={isMonthly ? 'linkedin.700' : ''}\n                bgColor={isMonthly ? 'white' : ''}\n                onClick={() => setIsMonthly(true)}\n                _hover={{ bgColor: isMonthly ? 'white' : '' }}\n              >\n                Monthly billing\n              </Button>\n              <Button\n                color={isMonthly ? '' : 'linkedin.700'}\n                bgColor={isMonthly ? '' : 'white'}\n                onClick={() => setIsMonthly(false)}\n                _hover={{ bgColor: isMonthly ? '' : 'white' }}\n              >\n                Annual billing\n              </Button>\n            </ButtonGroup>\n            <SimpleGrid columns={3} width=\"100%\">\n              {pricingList.map((item) => (\n                <PricingCard\n                  key={item.name}\n                  pricing={item}\n                  selected={selected}\n                  isMonthly={isMonthly}\n                />\n              ))}\n            </SimpleGrid>\n          </VStack>\n        </VStack>\n      </Center>\n    </>\n  );\n};\n\nexport default Landing;\n","import React, { ChangeEvent } from 'react';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Text,\n} from '@chakra-ui/react';\n\nconst Login = () => {\n  const [values, setValues] = React.useState({ email: '', password: '' });\n  const [showPassword, setShowPassword] = React.useState(false);\n  const { email, password } = values;\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setValues((prevValues) => ({ ...prevValues, [name]: value }));\n  };\n\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleLoginUser = () => {};\n\n  return (\n    <Box as=\"form\" onSubmit={handleLoginUser}>\n      <Flex flexDir=\"column\" gap={5} pt={20}>\n        <FormControl>\n          <FormLabel fontWeight=\"bold\">Email address</FormLabel>\n          <Input name=\"email\" type=\"email\" value={email} onChange={onChange} />\n        </FormControl>\n        <FormControl>\n          <FormLabel fontWeight=\"bold\">Password</FormLabel>\n          <InputGroup>\n            <Input\n              name=\"password\"\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n              onChange={onChange}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={toggleShowPassword}>\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Text\n            cursor=\"pointer\"\n            _hover={{ textDecoration: 'underline', color: 'linkedin' }}\n          >\n            Forgot password?\n          </Text>\n          <Button colorScheme=\"linkedin\">Sign In</Button>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { SimpleGrid, Box, Center } from '@chakra-ui/react';\nimport Login from '../components/compound/forms/Login';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <Center>\n        <SimpleGrid\n          columns={2}\n          gap={5}\n          maxW=\"7xl\"\n          w=\"100%\"\n          paddingInline=\"48\"\n          h=\"80vh\"\n        >\n          <Box w=\"100%\" h=\"100%\" bgColor=\"blue.100\"></Box>\n          <Login />\n        </SimpleGrid>\n      </Center>\n    </>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport { Outlet, Route, Routes } from 'react-router-dom';\nimport Footer from './components/compound/Footer';\nimport NavBar from './components/compound/NavBar';\nimport Landing from './pages/Landing';\nimport LoginPage from './pages/LoginPage';\n\nconst UnauthenticatedApp = () => {\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={\n          <>\n            <NavBar />\n            <Outlet />\n            <Footer />\n          </>\n        }\n      >\n        <Route index element={<Landing />} />\n        <Route path=\"login\" element={<LoginPage />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default UnauthenticatedApp;\n","import { Icon } from '@chakra-ui/react';\nimport React from 'react';\nimport { TbCloudFog } from 'react-icons/tb';\n\ntype Props = {\n  color?: string;\n  size?: number;\n  strokeWidth?: number;\n};\n\nconst Logo = ({ color = 'linkedin.500', size = 12, ...rest }: Props) => {\n  const height = size;\n  const width = size;\n  return (\n    <Icon\n      as={TbCloudFog}\n      height={height}\n      width={width}\n      color={color}\n      {...rest}\n    />\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { Button, HStack, Text } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\nimport Logo from '../common/Logo';\nimport { useUser } from '../../context/user-context';\n\nconst menuItems = ['Pricing', 'Docs', 'Blog', 'Support'];\n\nconst NavBar = () => {\n  const user = useUser();\n\n  return (\n    <HStack justifyContent=\"space-between\" px={5} py={2} bgColor=\"gray.50\">\n      <Link to=\"/\">\n        <Logo />\n      </Link>\n      {user?.user ? (\n        <Button colorScheme=\"linkedin\" onClick={() => user.setUser(null)}>\n          Logout\n        </Button>\n      ) : (\n        <HStack spacing={8}>\n          {menuItems.map((item) => (\n            <Text\n              _hover={{ borderBottom: '3px solid green', cursor: 'pointer' }}\n            >\n              {item}\n            </Text>\n          ))}\n        </HStack>\n      )}\n    </HStack>\n  );\n};\n\nexport default NavBar;\n"],"names":["currentYear","Date","getFullYear","width","bgColor","py","px","spacing","maxW","justifyContent","Logo","color","fontSize","PricingCardHeader","name","price","isMonthly","size","monthly","yearly","colorScheme","pricing","selected","space","users","hasFileTransferLimit","isSecure","canShare","isSelected","border","borderColor","textAlign","rounded","p","as","RiCheckboxCircleFill","BsDash","height","featuresList","icon","IoMdSync","title","text","TbCloudLock","HiOutlineShare","pricingList","React","setIsMonthly","columns","gap","pt","fontWeight","lineHeight","to","alignSelf","w","h","map","item","borderRadius","mt","mb","variant","isAttached","onClick","_hover","email","password","values","setValues","showPassword","setShowPassword","onChange","e","target","value","prevValues","onSubmit","flexDir","type","alignItems","cursor","textDecoration","paddingInline","path","element","NavBar","index","rest","TbCloudFog","menuItems","user","useUser","setUser","borderBottom"],"sourceRoot":""}