{"version":3,"file":"static/js/66.1ccd5392.chunk.js","mappings":"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","sources":["test_data.ts","UI/components/common/Input.tsx","UI/components/common/File.tsx","UI/components/compound/FolderTree.tsx","UI/components/compound/FolderFiles.tsx","UI/components/common/Logo.tsx","UI/components/compound/NavBar.tsx","UI/pages/AuthRootPage.tsx","UI/components/compound/StorageStats.tsx","UI/components/compound/RecentFiles.tsx","UI/components/common/Modal.tsx","UI/components/compound/forms/CreateFolder.tsx","UI/components/compound/forms/UploadFile.tsx","UI/components/compound/CreateFolderOrUploadFile.tsx","UI/components/compound/FileExplorer.tsx","UI/components/common/SideMenuItem.tsx","UI/components/compound/SideNav.tsx","UI/pages/Dashboard.tsx","UI/pages/ErrorPage.tsx","UI/components/compound/forms/ForgotPassword.tsx","UI/pages/ForgotPasswordPage.tsx","UI/components/compound/PricingCard.tsx","UI/pages/Landing.tsx","UI/components/compound/forms/Login.tsx","UI/pages/LoginPage.tsx","UI/components/compound/forms/Register.tsx","UI/pages/RegisterPage.tsx","UI/routes/router.tsx"],"sourcesContent":["import { File } from './UI/interfaces/File';\n\nexport const recentFiles: File[] = [\n  {\n    id: '1',\n    name: 'End of year report 2020',\n    isFolder: false,\n    size: 150000,\n    lastModified: '2020-01-01',\n    fileType: '.pdf',\n  },\n  {\n    id: '2',\n    name: 'End of year report 2019',\n    isFolder: false,\n    size: 150000,\n    lastModified: '2019-01-01',\n    fileType: '.pdf',\n  },\n  {\n    id: '3',\n    name: 'End of year report 2019',\n    isFolder: false,\n    size: 150000,\n    lastModified: '2019-01-01',\n    fileType: '.txt',\n  },\n  {\n    id: '4',\n    name: 'Moments 2020',\n    isFolder: true,\n    size: 30000000,\n    lastModified: '2019-01-01',\n    fileType: '.mkv',\n  },\n];\n","import React from 'react';\nimport {\n  Input as ChakraInput,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  InputProps,\n  InputGroup,\n  InputRightElement,\n  InputLeftElement,\n} from '@chakra-ui/react';\n\ninterface Props extends InputProps {\n  id: string;\n  isInvalid?: boolean;\n  isDisabled?: boolean;\n  isRequired?: boolean;\n  label?: string;\n  helperText?: string;\n  inputRightElement?: React.ReactNode;\n  inputLeftElement?: React.ReactNode;\n}\n\nconst Input = ({\n  label,\n  id,\n  isInvalid,\n  isDisabled,\n  isRequired,\n  helperText,\n  inputRightElement,\n  inputLeftElement,\n  ...rest\n}: Props) => {\n  return (\n    <FormControl\n      isInvalid={isInvalid}\n      isDisabled={isDisabled}\n      isRequired={isRequired}\n    >\n      {label && <FormLabel htmlFor={id}>{label}</FormLabel>}\n      <InputGroup>\n        {inputLeftElement && (\n          <InputLeftElement>{inputLeftElement}</InputLeftElement>\n        )}\n        <ChakraInput {...rest} id={id} />\n        {inputRightElement && (\n          <InputRightElement>{inputRightElement}</InputRightElement>\n        )}\n      </InputGroup>\n      {helperText && <FormHelperText>{helperText}</FormHelperText>}\n    </FormControl>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { Flex, HStack, Text, VStack } from '@chakra-ui/react';\nimport { File as IFile } from '../../interfaces/File';\nimport { TbFolder, TbFile } from 'react-icons/tb';\n\ninterface Props {\n  file: IFile;\n  onDoubleClick: (file: IFile) => void;\n}\n\nconst File = ({ file, onDoubleClick }: Props) => {\n  return (\n    <Flex\n      bgColor=\"white\"\n      py=\"2.5\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      px=\"5\"\n      cursor=\"pointer\"\n      borderRadius=\"lg\"\n      _hover={{ boxShadow: 'md' }}\n      onDoubleClick={() => onDoubleClick(file)}\n    >\n      <HStack>\n        {file.isFolder ? (\n          <TbFolder strokeWidth={1} size={30} fill=\"red\" color=\"red\" />\n        ) : (\n          <TbFile strokeWidth={1} size={30} fill=\"red\" color=\"red\" />\n        )}\n        <VStack align=\"start\" spacing=\"0\">\n          <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"blackAlpha.800\">\n            {file.name}\n          </Text>\n          {!file.isFolder && (\n            <Text fontSize=\"small\" color=\"blackAlpha.600\">\n              {file.fileType} / {file.size}\n            </Text>\n          )}\n        </VStack>\n      </HStack>\n      <Text fontSize=\"sm\" color=\"blackAlpha.600\">\n        {file.lastModified}\n      </Text>\n    </Flex>\n  );\n};\n\nexport default File;\n","import React, { useMemo } from 'react';\nimport {\n  ButtonGroup,\n  Flex,\n  Heading,\n  HStack,\n  IconButton,\n  SimpleGrid,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { TbLayoutGrid, TbLayoutList, TbSearch } from 'react-icons/tb';\nimport Input from '../common/Input';\nimport { File as IFile } from '../../interfaces/File';\nimport File from '../common/File';\n\ninterface Props {\n  heading: string;\n  showSearchBar?: boolean;\n  files: IFile[];\n  onDoubleClick: (file: IFile) => void;\n}\n\nconst FolderTree = ({\n  heading,\n  files,\n  onDoubleClick,\n  showSearchBar = true,\n}: Props) => {\n  const [search, setSearch] = React.useState('');\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const SearchIcon = <TbSearch />;\n\n  const filterFiles = (files: IFile[], searchWord: string) => {\n    return files.filter((file) =>\n      file.name.toLowerCase().includes(searchWord.toLowerCase())\n    );\n  };\n\n  const filteredFiles = useMemo(\n    () => filterFiles(files, search),\n    [files, search]\n  );\n\n  const renderFiles = filteredFiles.map((file) => (\n    <File\n      key={file.id}\n      file={file}\n      onDoubleClick={file.isFolder ? onDoubleClick : () => {}}\n    />\n  ));\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\n        <Heading as=\"h4\" size=\"sm\">\n          {heading}\n        </Heading>\n        {showSearchBar && (\n          <HStack marginLeft=\"auto\">\n            <Input\n              id=\"file-search\"\n              placeholder=\"Search\"\n              colorScheme=\"linkedin\"\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n              inputLeftElement={SearchIcon}\n            />\n            <ButtonGroup\n              spacing=\"1\"\n              padding=\"1\"\n              bgColor=\"white\"\n              borderRadius=\"md\"\n            >\n              <IconButton\n                aria-label=\"Use list layout\"\n                colorScheme={isOpen ? 'linkedin' : 'gray'}\n                size=\"sm\"\n                icon={<TbLayoutList />}\n                onClick={onOpen}\n              />\n              <IconButton\n                aria-label=\"Use grid layout\"\n                colorScheme={isOpen ? 'gray' : 'linkedin'}\n                size=\"sm\"\n                onClick={onClose}\n                icon={<TbLayoutGrid />}\n              />\n            </ButtonGroup>\n          </HStack>\n        )}\n      </Flex>\n      <SimpleGrid columns={isOpen ? 1 : 2} gap=\"5\" width=\"100%\" px=\"1\" py=\"5\">\n        {renderFiles}\n      </SimpleGrid>\n    </>\n  );\n};\n\nexport default FolderTree;\n","import { useMemo } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { File } from '../../interfaces/File';\nimport { recentFiles } from '../../../test_data';\nimport FolderTree from './FolderTree';\n\nconst FolderFiles = () => {\n  const navigate = useNavigate();\n  const { folderId } = useParams();\n\n  console.log('folderId', folderId);\n\n  const organizeFoldersToFiles = (files: File[]) => {\n    const files_list: File[] = [];\n    const folders_list: File[] = [];\n    files.forEach((file) => {\n      file.isFolder ? folders_list.push(file) : files_list.push(file);\n    });\n    return [...folders_list, ...files_list];\n  };\n\n  const files = useMemo(\n    () => organizeFoldersToFiles(organizeFoldersToFiles(recentFiles)),\n    []\n  );\n\n  const onDoubleClick = (file: File) => {\n    navigate(`/folder/${file.id}`);\n  };\n\n  return (\n    <FolderTree files={files} heading=\"Files\" onDoubleClick={onDoubleClick} />\n  );\n};\n\nexport default FolderFiles;\n","import { Icon } from '@chakra-ui/react';\nimport React from 'react';\nimport { TbCloudFog } from 'react-icons/tb';\n\ntype Props = {\n  color?: string;\n  size?: number;\n  strokeWidth?: number;\n};\n\nconst Logo = ({ color = 'linkedin.500', size = 12, ...rest }: Props) => {\n  const height = size;\n  const width = size;\n  return (\n    <Icon\n      as={TbCloudFog}\n      height={height}\n      width={width}\n      color={color}\n      {...rest}\n    />\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { Button, HStack, Text } from '@chakra-ui/react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Logo from '../common/Logo';\nimport { useUser } from '../../context/user-context';\n\nconst menuItems = ['Pricing', 'Docs', 'Blog', 'Support'];\n\nconst NavBar = () => {\n  const { user, setUser } = useUser();\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    setUser(null);\n    navigate('/');\n  };\n\n  return (\n    <HStack justifyContent=\"space-between\" px={5} py={2} bgColor=\"gray.50\">\n      <Link to=\"/\">\n        <Logo />\n      </Link>\n      {user ? (\n        <Button colorScheme=\"linkedin\" onClick={handleLogout}>\n          Logout\n        </Button>\n      ) : (\n        <HStack spacing={8}>\n          {menuItems.map((item) => (\n            <Text\n              key={item}\n              _hover={{ borderBottom: '3px solid green', cursor: 'pointer' }}\n            >\n              {item}\n            </Text>\n          ))}\n        </HStack>\n      )}\n    </HStack>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { Box, Center, SimpleGrid } from '@chakra-ui/react';\nimport { Outlet } from 'react-router-dom';\n\nconst AuthRootPage = () => {\n  return (\n    <>\n      <Center>\n        <SimpleGrid\n          columns={2}\n          gap={5}\n          maxW=\"7xl\"\n          w=\"100%\"\n          paddingInline=\"48\"\n          h=\"80vh\"\n        >\n          <Box w=\"100%\" h=\"100%\" bgColor=\"blue.100\"></Box>\n          <Outlet />\n        </SimpleGrid>\n      </Center>\n    </>\n  );\n};\n\nexport default AuthRootPage;\n","import React from 'react';\nimport { Box, Flex, Text } from '@chakra-ui/react';\n\nconst StorageStats = () => {\n  const progress = 75;\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      gap=\"5\"\n      px=\"5\"\n      py=\"10\"\n      bgColor=\"white\"\n      borderRadius=\"xl\"\n    >\n      <Box height=\"3\" width=\"20rem\" bgColor=\"linkedin.100\" borderRadius=\"full\">\n        <Box\n          height=\"3\"\n          bgColor=\"linkedin.500\"\n          width={progress / 100}\n          borderRadius=\"full\"\n        ></Box>\n      </Box>\n      <Text fontWeight=\"bold\" fontSize=\"sm\">\n        Usage: {(75 / 100) * 200} GB / 200 GB\n      </Text>\n    </Flex>\n  );\n};\n\nexport default StorageStats;\n","import React from 'react';\nimport { File as IFile } from '../../interfaces/File';\nimport FolderTree from './FolderTree';\n\nconst RecentFiles = () => {\n  const recentFiles: IFile[] = [\n    {\n      id: '1',\n      name: 'End of year report 2020',\n      isFolder: false,\n      size: 150000,\n      lastModified: '2020-01-01',\n      fileType: '.pdf',\n    },\n    {\n      id: '2',\n      name: 'End of year report 2019',\n      isFolder: false,\n      size: 150000,\n      lastModified: '2019-01-01',\n      fileType: '.pdf',\n    },\n    {\n      id: '3',\n      name: 'End of year report 2019',\n      isFolder: false,\n      size: 150000,\n      lastModified: '2019-01-01',\n      fileType: '.txt',\n    },\n    {\n      id: '4',\n      name: 'Moments 2020',\n      isFolder: false,\n      size: 30000000,\n      lastModified: '2019-01-01',\n      fileType: '.mkv',\n    },\n  ];\n\n  return (\n    <FolderTree\n      onDoubleClick={(file) => alert('file: ' + file.id)}\n      files={recentFiles}\n      heading=\"Recent Files\"\n      showSearchBar={false}\n    />\n  );\n};\n\nexport default RecentFiles;\n","import React from 'react';\nimport {\n  Modal as ChakraModal,\n  ModalOverlay,\n  ModalProps,\n  ModalContent\n} from '@chakra-ui/react';\n\ninterface Props extends ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n}\n\nconst Modal = ({ isOpen, onClose, children }: Props) => {\n  return (\n    <ChakraModal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>{children}</ModalContent>\n    </ChakraModal>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Button, ButtonGroup, Flex } from '@chakra-ui/react';\nimport { TbFolderPlus } from 'react-icons/tb';\nimport Input from '../../common/Input';\nimport { useParams } from 'react-router-dom';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst CreateFolder = ({ onClose }: Props) => {\n  const FILE_NAME = 'fileName';\n  const HELPER_TEXT = 'Cannot have the same file name in same directory';\n  const [fileName, setFileName] = React.useState('');\n  const { folderId } = useParams();\n\n  const handleCreateFolder = () => {\n    console.log(folderId);\n    const values = { folderId, fileName };\n    alert(JSON.stringify(values, null, 2));\n  };\n\n  return (\n    <Flex\n      bgColor=\"whiteAlpha.900\"\n      py=\"5\"\n      px=\"2\"\n      borderRadius=\"full\"\n      flexDirection=\"column\"\n      gap=\"8\"\n    >\n      <Input\n        id={FILE_NAME}\n        name={FILE_NAME}\n        value={fileName}\n        helperText={HELPER_TEXT}\n        placeholder=\"File Name\"\n        borderRadius=\"lg\"\n        onChange={(e) => setFileName(e.target.value)}\n      />\n      <ButtonGroup alignSelf=\"flex-end\">\n        <Button size=\"sm\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          size=\"sm\"\n          colorScheme=\"green\"\n          onClick={handleCreateFolder}\n          leftIcon={<TbFolderPlus />}\n        >\n          Create Folder\n        </Button>\n      </ButtonGroup>\n    </Flex>\n  );\n};\n\nexport default CreateFolder;\n","import React from 'react';\nimport { Box, Text, Flex, ButtonGroup, Button } from '@chakra-ui/react';\nimport { TbFileUpload } from 'react-icons/tb';\nimport Dropzone from 'react-dropzone';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst UploadFile = ({ onClose }: Props) => {\n  const handleFileUpload = () => {\n    console.log('uploading file');\n  };\n\n  return (\n    <Flex\n      bgColor=\"whiteAlpha.900\"\n      py=\"5\"\n      px=\"2\"\n      borderRadius=\"full\"\n      flexDirection=\"column\"\n      gap=\"8\"\n    >\n      <Dropzone onDrop={(acceptedFiles) => console.log(acceptedFiles)}>\n        {({ getRootProps, getInputProps }) => (\n          <Box>\n            <Flex\n              height=\"200px\"\n              borderWidth=\"1px\"\n              borderStyle=\"dashed\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              cursor=\"pointer\"\n              gap={4}\n              {...getRootProps()}\n            >\n              <input {...getInputProps()} />\n              <Text>Drag and drop some file here</Text>\n              <Text>Or</Text>\n              <Text>Click to select file</Text>\n            </Flex>\n          </Box>\n        )}\n      </Dropzone>\n      <ButtonGroup alignSelf=\"flex-end\">\n        <Button size=\"sm\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          size=\"sm\"\n          colorScheme=\"green\"\n          onClick={handleFileUpload}\n          leftIcon={<TbFileUpload />}\n        >\n          Upload File\n        </Button>\n      </ButtonGroup>\n    </Flex>\n  );\n};\n\nexport default UploadFile;\n","import React from 'react';\nimport { Tab, TabList, TabPanel, TabPanels, Tabs } from '@chakra-ui/react';\nimport CreateFolder from './forms/CreateFolder';\nimport UploadFile from './forms/UploadFile';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst CreateFolderOrUploadFile = ({ onClose }: Props) => {\n  return (\n    <Tabs isFitted variant=\"enclosed-colored\" pt=\"1\">\n      <TabList>\n        <Tab>Create Folder</Tab>\n        <Tab>Upload File</Tab>\n      </TabList>\n      <TabPanels>\n        <TabPanel>\n          <CreateFolder onClose={onClose} />\n        </TabPanel>\n        <TabPanel>\n          <UploadFile onClose={onClose} />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n};\n\nexport default CreateFolderOrUploadFile;\n","import React from 'react';\nimport { Heading, IconButton, useDisclosure, VStack } from '@chakra-ui/react';\nimport StorageStats from './StorageStats';\nimport RecentFiles from './RecentFiles';\nimport { TbPlus } from 'react-icons/tb';\nimport Modal from '../common/Modal';\nimport CreateFolderOrUploadFile from './CreateFolderOrUploadFile';\nimport { Outlet, useParams } from 'react-router-dom';\n\nconst FileExplorer = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { folderId } = useParams();\n\n  return (\n    <>\n      <VStack\n        width=\"80%\"\n        align=\"start\"\n        position=\"relative\"\n        height=\"full\"\n        paddingRight=\"10\"\n        overflowY=\"auto\"\n      >\n        <Heading as=\"h3\" size=\"md\">\n          My Drive\n        </Heading>\n        {!folderId && (\n          <>\n            <StorageStats />\n            <RecentFiles />\n          </>\n        )}\n        <Outlet />\n        <IconButton\n          colorScheme=\"facebook\"\n          aria-label=\"Create Folder\"\n          position=\"fixed\"\n          bottom=\"10\"\n          right=\"16\"\n          borderRadius=\"full\"\n          boxShadow=\"xl\"\n          size=\"lg\"\n          icon={<TbPlus />}\n          onClick={onOpen}\n        />\n      </VStack>\n      <Modal isOpen={isOpen} onClose={onClose} size=\"md\">\n        <CreateFolderOrUploadFile onClose={onClose} />\n      </Modal>\n    </>\n  );\n};\n\nexport default FileExplorer;\n","import React from 'react';\nimport { Flex, Text } from '@chakra-ui/react';\nimport MenuItem from '../../interfaces/Menu';\n\ntype Props = { name: string; onSelect: (name: string) => void; item: MenuItem };\n\nconst SideMenuItem = ({ name, item, onSelect }: Props) => {\n  return (\n    <Flex\n      alignItems=\"center\"\n      gap={5}\n      cursor=\"pointer\"\n      px={5}\n      py={2}\n      bgColor={name === item.name ? 'linkedin.100' : ''}\n      color={name === item.name ? 'linkedin.600' : ''}\n      borderRadius=\"xl\"\n      fontWeight=\"bold\"\n      _hover={{ color: 'linkedin.600', bgColor: 'linkedin.100' }}\n      onClick={() => onSelect(item.name)}\n    >\n      {item.icon}\n      <Text fontSize=\"sm\">{item.name}</Text>\n    </Flex>\n  );\n};\n\nexport default SideMenuItem;\n","import React from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport { MdOutlinePeopleAlt } from 'react-icons/md';\nimport { FiHardDrive } from 'react-icons/fi';\nimport MenuItem from '../../interfaces/Menu';\nimport SideMenuItem from '../common/SideMenuItem';\nimport { Link } from 'react-router-dom';\n\nconst SideNav = () => {\n  const [name, setName] = React.useState('');\n\n  const handleClick = (name: string) => {\n    setName(name);\n  };\n\n  const sideMenuItems: MenuItem[] = [\n    { route: '/', name: 'My Drive', icon: <FiHardDrive /> },\n    { route: '/', name: 'Shared with me', icon: <MdOutlinePeopleAlt /> },\n  ];\n\n  return (\n    <Flex flexDir=\"column\" gap={2}>\n      {sideMenuItems.map((item) => (\n        <Link to={item.route} key={item.name}>\n          <SideMenuItem item={item} name={name} onSelect={handleClick} />\n        </Link>\n      ))}\n    </Flex>\n  );\n};\n\nexport default SideNav;\n","import React from 'react';\nimport { Box, HStack, VStack } from '@chakra-ui/react';\nimport FileExplorer from '../components/compound/FileExplorer';\nimport SideNav from '../components/compound/SideNav';\n\nconst Dashboard = () => {\n  return (\n    <Box\n      height=\"100vh\"\n      width=\"100%\"\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      overflow=\"hidden\"\n    >\n      <HStack\n        height=\"100vh\"\n        align=\"start\"\n        maxWidth=\"1400px\"\n        width=\"100%\"\n        bgColor=\"whitesmoke\"\n        py={4}\n      >\n        <VStack width=\"20%\" py={4}>\n          <SideNav />\n        </VStack>\n        <FileExplorer />\n      </HStack>\n    </Box>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { Center, Heading, Text, VStack } from '@chakra-ui/react';\nimport { useRouteError } from 'react-router-dom';\n\nconst ErrorPage = () => {\n  const error = useRouteError() as { statusText: string; message: string };\n  console.log('error', error);\n\n  return (\n    <Center height=\"100vh\">\n      <VStack>\n        <Heading>Oops!</Heading>\n        <Text>Sorry, an unexpected error has occurred.</Text>\n        <Text>\n          <Text as=\"i\">{error?.statusText || error?.message}</Text>\n        </Text>\n      </VStack>\n    </Center>\n  );\n};\n\nexport default ErrorPage;\n","import {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Text,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = React.useState('');\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    alert({ email });\n  };\n\n  return (\n    <Box as=\"form\" onSubmit={handleSubmit}>\n      <Flex flexDirection=\"column\" gap={4} pt={10}>\n        <Heading size=\"md\" color=\"blackAlpha.900\" fontWeight=\"medium\">\n          Forgot your password?\n        </Heading>\n        <Text fontSize=\"sm\">\n          Enter your email address to reset your password. You may need to check\n          your spam folder or unblock no-reply@dropbox.com.\n        </Text>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Email\n          </FormLabel>\n          <Input name=\"email\" type=\"email\" value={email} onChange={onChange} />\n        </FormControl>\n        <Button type=\"submit\" colorScheme=\"linkedin\" alignSelf=\"flex-end\">\n          Submit\n        </Button>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default ForgotPassword;\n","import { Button, Flex } from '@chakra-ui/react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport ForgotPassword from '../components/compound/forms/ForgotPassword';\n\nconst ForgotPasswordPage = () => {\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex justifyContent=\"space-between\">\n        <Link to=\"/auth/register\">\n          <Button variant=\"link\">Sign up</Button>\n        </Link>\n        <Link to=\"/auth/login\">\n          <Button variant=\"link\">Sign in</Button>\n        </Link>\n      </Flex>\n      <ForgotPassword />\n    </Flex>\n  );\n};\n\nexport default ForgotPasswordPage;\n","import React from 'react';\nimport { Button, Center, Heading, Icon, Text, VStack } from '@chakra-ui/react';\nimport { RiCheckboxCircleFill } from 'react-icons/ri';\nimport { BsDash } from 'react-icons/bs';\n\ntype Props = {\n  selected?: string;\n  isMonthly?: boolean;\n  pricing: {\n    space: string;\n    users: string;\n    name?: string;\n    price?: { monthly: string; yearly: string };\n    hasFileTransferLimit: boolean;\n    isSecure: boolean;\n    canShare: boolean;\n  };\n};\n\ntype HeaderProps = {\n  name?: string;\n  price?: { monthly: string; yearly: string };\n  isMonthly?: boolean;\n};\n\nconst PricingCardHeader = ({ name, price, isMonthly }: HeaderProps) => {\n  return (\n    <VStack spacing={5} py={10}>\n      <Heading size=\"sm\">{name}</Heading>\n      <Heading color=\"linkedin.800\">\n        {isMonthly ? price?.monthly : price?.yearly}\n      </Heading>\n      {name && (\n        <Button colorScheme=\"linkedin\" size=\"sm\">\n          Get Started\n        </Button>\n      )}\n    </VStack>\n  );\n};\n\nconst PricingCard = ({ pricing, selected, isMonthly }: Props) => {\n  const {\n    space,\n    users,\n    hasFileTransferLimit,\n    isSecure,\n    canShare,\n    name,\n    price,\n  } = pricing;\n\n  const isSelected = name === selected;\n\n  return (\n    <VStack\n      py={5}\n      border=\"3px solid\"\n      borderColor={isSelected ? 'linkedin.700' : 'transparent'}\n      textAlign=\"center\"\n      rounded=\"3xl\"\n    >\n      <PricingCardHeader name={name} price={price} isMonthly={isMonthly} />\n      <Center p={5} bgColor=\"linkedin.100\" width=\"100%\">\n        <Text fontSize=\"md\" color=\"blackAlpha.700\">\n          {space}\n        </Text>\n      </Center>\n      <Center p={5} width=\"100%\">\n        <Text fontSize=\"md\" color=\"blackAlpha.700\">\n          {users}\n        </Text>\n      </Center>\n      <Center p={5} bgColor=\"linkedin.100\" width=\"100%\">\n        <Icon\n          as={hasFileTransferLimit ? RiCheckboxCircleFill : BsDash}\n          height=\"8\"\n          width=\"8\"\n          color=\"linkedin.500\"\n        />\n      </Center>\n      <Center p={5} width=\"100%\">\n        <Icon\n          as={isSecure ? RiCheckboxCircleFill : BsDash}\n          height=\"8\"\n          width=\"8\"\n          color=\"linkedin.500\"\n        />\n      </Center>\n      <Center p={5} width=\"100%\" bgColor=\"linkedin.100\">\n        <Icon\n          as={canShare ? RiCheckboxCircleFill : BsDash}\n          height=\"8\"\n          width=\"8\"\n          color=\"linkedin.500\"\n        />\n      </Center>\n    </VStack>\n  );\n};\n\nexport default PricingCard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Box,\n  Center,\n  Heading,\n  SimpleGrid,\n  Text,\n  VStack,\n  Button,\n  Icon,\n  ButtonGroup,\n} from '@chakra-ui/react';\nimport { IoMdSync } from 'react-icons/io';\nimport { TbCloudLock } from 'react-icons/tb';\nimport { HiOutlineShare } from 'react-icons/hi';\nimport PricingCard from '../components/compound/PricingCard';\n\nconst featuresList = [\n  {\n    icon: IoMdSync,\n    title: 'Store and Sync',\n    text: 'Keep all your files securely stored, up to date and accessible from any device',\n  },\n  {\n    icon: TbCloudLock,\n    title: 'Stay Secure',\n    text: 'Keep your files private with multiple layers of protection from the service trusted by millions',\n  },\n  {\n    icon: HiOutlineShare,\n    title: 'Share',\n    text: 'Quickly send any file-big or small-to anyone',\n  },\n];\n\nconst pricingList = [\n  {\n    name: 'Free',\n    space: '1 GB',\n    users: 'Unlimited',\n    hasFileTransferLimit: false,\n    isSecure: true,\n    canShare: true,\n    price: {\n      monthly: '$0.00',\n      yearly: '$0.00',\n    },\n  },\n  {\n    name: 'Pro Plan',\n    space: '2,000 GB',\n    users: 'Unlimited',\n    hasFileTransferLimit: true,\n    isSecure: true,\n    canShare: true,\n    price: {\n      monthly: '$10.00',\n      yearly: '$100.00',\n    },\n  },\n  {\n    name: 'Enterprise Plan',\n    space: 'As much space as needed',\n    users: 'Unlimited',\n    hasFileTransferLimit: true,\n    isSecure: true,\n    canShare: true,\n    price: {\n      monthly: '$25.00',\n      yearly: '$250.00',\n    },\n  },\n];\n\nconst Landing = () => {\n  const [isMonthly, setIsMonthly] = React.useState(true);\n\n  const selected = 'Pro Plan';\n\n  return (\n    <>\n      <Center>\n        <VStack maxW=\"7xl\" spacing={0}>\n          <SimpleGrid columns={2} gap={10}>\n            <VStack pt={20}>\n              <Heading size=\"3xl\" fontWeight=\"thin\" lineHeight=\"shorter\">\n                Easy and secure access to your content\n              </Heading>\n              <Text textAlign=\"justify\" fontSize={'xl'} color=\"blackAlpha.600\">\n                Store, share, and collaborate on files and folder from your\n                mobile device, table, or computer\n              </Text>\n              <Box width=\"100%\" py=\"10\">\n                <Link to=\"/auth/login\">\n                  <Button alignSelf=\"flex-start\" colorScheme=\"linkedin\">\n                    Try Cloud Drive\n                  </Button>\n                </Link>\n              </Box>\n            </VStack>\n            <Box w=\"100%\" h=\"100%\" bgColor=\"blue.100\"></Box>\n          </SimpleGrid>\n          <VStack bgColor=\"gray.50\" py=\"28\" px=\"10\" gap=\"10\">\n            <Heading size=\"xl\" fontWeight=\"bold\">\n              Do more with your files\n            </Heading>\n            <SimpleGrid columns={3} gap={10}>\n              {featuresList.map((item) => (\n                <VStack\n                  key={item.title}\n                  borderRadius=\"lg\"\n                  border=\"1px solid\"\n                  borderColor=\"gray.200\"\n                  p={4}\n                  mt={4}\n                  bgColor=\"white\"\n                  gap=\"2\"\n                >\n                  <Icon as={item.icon} h=\"10\" w=\"10\" color=\"linkedin.500\" />\n                  <Heading fontSize=\"md\" mb={10}>\n                    {item.title}\n                  </Heading>\n                  <Text\n                    fontSize={'md'}\n                    color=\"blackAlpha.700\"\n                    textAlign=\"center\"\n                  >\n                    {item.text}\n                  </Text>\n                </VStack>\n              ))}\n            </SimpleGrid>\n          </VStack>\n          <VStack py=\"28\" px=\"10\" spacing=\"10\">\n            <Heading>Find the plan that's right for you</Heading>\n            <ButtonGroup\n              size=\"sm\"\n              variant=\"outline\"\n              p={1}\n              bgColor=\"linkedin.100\"\n              color=\"linkedin.500\"\n              rounded=\"md\"\n              isAttached\n            >\n              <Button\n                color={isMonthly ? 'linkedin.700' : ''}\n                bgColor={isMonthly ? 'white' : ''}\n                onClick={() => setIsMonthly(true)}\n                _hover={{ bgColor: isMonthly ? 'white' : '' }}\n              >\n                Monthly billing\n              </Button>\n              <Button\n                color={isMonthly ? '' : 'linkedin.700'}\n                bgColor={isMonthly ? '' : 'white'}\n                onClick={() => setIsMonthly(false)}\n                _hover={{ bgColor: isMonthly ? '' : 'white' }}\n              >\n                Annual billing\n              </Button>\n            </ButtonGroup>\n            <SimpleGrid columns={3} width=\"100%\">\n              {pricingList.map((item) => (\n                <PricingCard\n                  key={item.name}\n                  pricing={item}\n                  selected={selected}\n                  isMonthly={isMonthly}\n                />\n              ))}\n            </SimpleGrid>\n          </VStack>\n        </VStack>\n      </Center>\n    </>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Text,\n} from '@chakra-ui/react';\nimport { useUser } from '../../../context/user-context';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n  const { setUser } = useUser();\n  const navigate = useNavigate();\n  const [values, setValues] = React.useState({ email: '', password: '' });\n  const [showPassword, setShowPassword] = React.useState(false);\n  const { email, password } = values;\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setValues((prevValues) => ({ ...prevValues, [name]: value }));\n  };\n\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleLoginUser = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('login in');\n    const userData = {\n      id: '1',\n      name: 'John Doe',\n      email: 'johndoe@mail.com',\n      profilePicture: 'https://randomuser.me/api/portraits/',\n    };\n    setUser({ ...userData, email, name: email.split('@')[0] });\n    navigate('/');\n  };\n\n  return (\n    <Box as=\"form\" onSubmit={handleLoginUser}>\n      <Flex flexDir=\"column\" gap={5} pt={10}>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Email address\n          </FormLabel>\n          <Input name=\"email\" type=\"email\" value={email} onChange={onChange} />\n        </FormControl>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Password\n          </FormLabel>\n          <InputGroup>\n            <Input\n              name=\"password\"\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n              onChange={onChange}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={toggleShowPassword}>\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Text\n            cursor=\"pointer\"\n            _hover={{ textDecoration: 'underline', color: 'linkedin' }}\n          >\n            <Link to=\"/auth/forgot_password\">Forgot password?</Link>\n          </Text>\n          <Button colorScheme=\"linkedin\" type=\"submit\">\n            Sign In\n          </Button>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Flex, Heading, Text } from '@chakra-ui/react';\nimport Login from '../components/compound/forms/Login';\nimport { Link } from 'react-router-dom';\n\nconst LoginPage = () => {\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex justifyContent=\"space-between\">\n        <Heading size=\"md\">Sign in</Heading>\n        <Text>\n          or{' '}\n          <Text\n            as=\"span\"\n            color=\"linkedin.700\"\n            _hover={{ textDecoration: 'underline' }}\n          >\n            <Link to=\"/auth/register\">create an account</Link>\n          </Text>\n        </Text>\n      </Flex>\n      <Login />\n    </Flex>\n  );\n};\n\nexport default LoginPage;\n","import {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nconst Register = () => {\n  const [values, setValues] = React.useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    firstName: '',\n    lastName: '',\n  });\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [showConfirmedPassword, setShowConfirmedPassword] =\n    React.useState(false);\n  const { email, password, firstName, lastName, confirmPassword } = values;\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setValues((preValues) => ({ ...preValues, [name]: value }));\n  };\n\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleShowConfirmedPassword = () => {\n    setShowConfirmedPassword(!showConfirmedPassword);\n  };\n\n  return (\n    <Box as=\"form\">\n      <Flex flexDirection=\"column\" gap={5} pt={10}>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            First Name\n          </FormLabel>\n          <Input\n            name=\"firstName\"\n            type=\"text\"\n            value={firstName}\n            onChange={onChange}\n          />\n        </FormControl>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Last Name\n          </FormLabel>\n          <Input\n            name=\"lastName\"\n            type=\"text\"\n            value={lastName}\n            onChange={onChange}\n          />\n        </FormControl>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Email address\n          </FormLabel>\n          <Input name=\"email\" type=\"email\" value={email} onChange={onChange} />\n        </FormControl>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Password\n          </FormLabel>\n          <InputGroup>\n            <Input\n              name=\"password\"\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n              onChange={onChange}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={toggleShowPassword}>\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n        <FormControl>\n          <FormLabel fontWeight=\"medium\" color=\"blackAlpha.700\" fontSize=\"sm\">\n            Confirm Password\n          </FormLabel>\n          <InputGroup>\n            <Input\n              name=\"confirmPassword\"\n              type={showConfirmedPassword ? 'text' : 'password'}\n              value={confirmPassword}\n              onChange={onChange}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button\n                h=\"1.75rem\"\n                size=\"sm\"\n                onClick={toggleShowConfirmedPassword}\n              >\n                {showConfirmedPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n        <Button colorScheme=\"linkedin\">Create an account</Button>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Register;\n","import React from 'react';\nimport { Flex, Heading, Text } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\nimport Register from '../components/compound/forms/Register';\n\nconst RegisterPage = () => {\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex justifyContent=\"space-between\">\n        <Heading size=\"md\">Sign up</Heading>\n        <Text>\n          or{' '}\n          <Text\n            as=\"span\"\n            color=\"linkedin.700\"\n            _hover={{ textDecoration: 'underline' }}\n          >\n            <Link to=\"/auth/login\">login</Link>\n          </Text>\n        </Text>\n      </Flex>\n      <Register />\n    </Flex>\n  );\n};\n\nexport default RegisterPage;\n","import { createBrowserRouter, Outlet } from 'react-router-dom';\nimport FolderFiles from '../components/compound/FolderFiles';\nimport NavBar from '../components/compound/NavBar';\nimport AuthRootPage from '../pages/AuthRootPage';\nimport Dashboard from '../pages/Dashboard';\nimport ErrorPage from '../pages/ErrorPage';\nimport ForgotPasswordPage from '../pages/ForgotPasswordPage';\nimport Landing from '../pages/Landing';\nimport LoginPage from '../pages/LoginPage';\nimport RegisterPage from '../pages/RegisterPage';\n\nexport const unauthenticatedRoutes = createBrowserRouter([\n  {\n    path: '/',\n    element: (\n      <>\n        <NavBar />\n        <Outlet />\n      </>\n    ),\n    errorElement: <ErrorPage />,\n    children: [\n      { path: '', element: <Landing /> },\n      {\n        path: 'auth',\n        element: <AuthRootPage />,\n        children: [\n          { path: 'login', element: <LoginPage /> },\n          { path: 'register', element: <RegisterPage /> },\n          { path: 'forgot_password', element: <ForgotPasswordPage /> },\n        ],\n      },\n    ],\n  },\n]);\n\nexport const authenticatedRoutes = createBrowserRouter([\n  {\n    path: '/',\n    element: (\n      <>\n        <NavBar />\n        <Outlet />\n      </>\n    ),\n    errorElement: <ErrorPage />,\n    children: [\n      {\n        path: '',\n        element: <Dashboard />,\n        children: [\n          { path: '', element: <FolderFiles /> },\n          { path: 'folder/:folderId', element: <FolderFiles /> },\n        ],\n      },\n    ],\n  },\n]);\n"],"names":["recentFiles","id","name","isFolder","size","lastModified","fileType","label","isInvalid","isDisabled","isRequired","helperText","inputRightElement","inputLeftElement","rest","htmlFor","file","onDoubleClick","bgColor","py","alignItems","justifyContent","px","cursor","borderRadius","_hover","boxShadow","strokeWidth","fill","color","align","spacing","fontSize","fontWeight","heading","files","showSearchBar","React","search","setSearch","useDisclosure","isOpen","onOpen","onClose","SearchIcon","filteredFiles","useMemo","searchWord","filter","toLowerCase","includes","filterFiles","renderFiles","map","width","as","marginLeft","placeholder","colorScheme","value","onChange","e","target","padding","icon","onClick","columns","gap","navigate","useNavigate","folderId","useParams","console","log","organizeFoldersToFiles","files_list","folders_list","forEach","push","height","TbCloudFog","menuItems","useUser","user","setUser","to","item","borderBottom","maxW","w","paddingInline","h","flexDirection","progress","alert","children","FILE_NAME","fileName","setFileName","alignSelf","values","JSON","stringify","leftIcon","onDrop","acceptedFiles","getRootProps","getInputProps","borderWidth","borderStyle","isFitted","variant","pt","position","paddingRight","overflowY","bottom","right","onSelect","setName","handleClick","sideMenuItems","route","flexDir","display","overflow","maxWidth","error","useRouteError","statusText","message","email","setEmail","onSubmit","preventDefault","type","PricingCardHeader","price","isMonthly","monthly","yearly","pricing","selected","space","users","hasFileTransferLimit","isSecure","canShare","isSelected","border","borderColor","textAlign","rounded","p","RiCheckboxCircleFill","BsDash","featuresList","IoMdSync","title","text","TbCloudLock","HiOutlineShare","pricingList","setIsMonthly","lineHeight","mt","mb","isAttached","password","setValues","showPassword","setShowPassword","prevValues","profilePicture","split","textDecoration","confirmPassword","firstName","lastName","showConfirmedPassword","setShowConfirmedPassword","preValues","unauthenticatedRoutes","createBrowserRouter","path","element","errorElement","authenticatedRoutes"],"sourceRoot":""}